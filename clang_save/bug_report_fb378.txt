{'commit': 'fb3782980f3c475162629001b1efee38c782d354', 'bugs': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcEncoderInstance', which is incompatible with sizeof operand type 'IlbcEncoder'", 'code': '*iLBC_encinst=(IlbcEncoderInstance*)malloc(sizeof(IlbcEncoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722EncInst', which is incompatible with sizeof operand type 'G722EncoderState'", 'code': '*G722enc_inst=(G722EncInst*)malloc(sizeof(G722EncoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'Bigint', which is incompatible with sizeof operand type 'double'", 'code': 'rv = (Bigint*)MALLOCmalloc(len*sizeof(double));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_solid_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_solid_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (388, 388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = malloc(schemaAttrsCapacity * sizeof(CK_ATTRIBUTE));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2236, 2236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_radial_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_radial_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722DecInst', which is incompatible with sizeof operand type 'G722DecoderState'", 'code': '*G722dec_inst=(G722DecInst*)malloc(sizeof(G722DecoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_surface_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_surface_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (391, 391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcDecoderInstance', which is incompatible with sizeof operand type 'IlbcDecoder'", 'code': '*iLBC_decinst=(IlbcDecoderInstance*)malloc(sizeof(IlbcDecoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/decoders/nsPNGDecoder.cpp', 'desc': "Result of 'malloc' is converted to a pointer of type 'uint8_t', which is incompatible with sizeof operand type 'uint32_t'", 'code': 'static_cast<uint8_t*>(malloc(sizeof(uint32_t) * frameRect.Width()));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (725, 725), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'realloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = realloc(sdb_p->schemaAttrs,', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2249, 2249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_linear_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_linear_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (394, 394), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'qsort(tfeedback_decls, num_tfeedback_decls, sizeof(*tfeedback_decls),', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1464, 1464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(script, result.data(), std::min(reslen, scriptCapacity)):: memcpy(script, result.data(), std::min(reslen, scriptCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1254, 1254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'if (!(ep = readdir(dp))) fail("cannot find current directory");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_commands, commands, sizeof(Command) * num_commands);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1260, 1260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(self->data_, 0, sizeof(self->data_));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (19, 19), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str.data(), str.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, indexes, indexesLength * 4):: memcpy(dest, indexes, indexesLength * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/bprint.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_str, buf->str, buf->len + 1);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/metablock.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (max_num_blocks)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (max_num_blocks) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (max_num_blocks)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (367, 367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(country, result.data(), std::min(reslen, countryCapacity)):: memcpy(country, result.data(), std::min(reslen, countryCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1303, 1303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(GetSurfaceDataContext::GetBuffer(surfaceData) + bufLen, 0,', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7692, 7692), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGV, gv.data, gv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGX, gx.data, gx.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&p->zText[p->nChar], z, N);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (28919, 28919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'Could not parse from HTML', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (3876, 3876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(tag, out + length, taglen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1223, 1223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncat(destination,s->entries[i].data(), s->entries[i].length()):: strncat(destination, s->entries[i].data(), s->entries[i].length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcmp(reorderCodes, settings->reorderCodes, length * 4):: memcmp(reorderCodes, settings->reorderCodes,length * 4) == 0) {', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(language, result.data(), std::min(reslen, languageCapacity)):: memcpy(language, result.data(), std::min(reslen, languageCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1206, 1206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(lookup->addr, addr_ptr, addr_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (2732, 2732), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/avstring.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'av_bprint_append_data(&pbuf, pstr, strlen(pstr));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, settings->reorderCodes, length * 4):: memcpy(dest, settings->reorderCodes, length * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/include/private/SkMalloc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(dst,src,len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (122, 122), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(buf, context->macBuf, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (430, 430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/ssl/sslprimitive.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(label, labelPrefix, labelPrefixLen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (70, 70), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11mech.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(mech->data, iv.data, iv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1556, 1556), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest + start, src, limit - start):: memcpy(dest + start, src, limit - start);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, insert_len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, head_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strcat(destination, "_"):: strcat(destination, "_");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (362, 362), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/unum.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncpy(outBuf, sp.data(), sp.size()):: strncpy(outBuf, sp.data(), sp.size());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (454, 454), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/modutil/pk11.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'strcpy(buf, string);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(buffer, result.data(), result.length()):: memcpy(buffer, result.data(), result.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1604, 1604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkpwd.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'SHA1_Update(cx, (unsigned char *)pw, PORT_Strlen(pw)strlen(pw));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (109, 109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&mx->mx_db, NODEDATA(node)(void *)((char *)(node)->mn_data + (node)->mn_ksize), sizeof(MDB_db));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7530, 7530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mozglue/misc/Printf.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&pattern[1], dolPt, size_t(i));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvinf.cpp', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '++skeletonFieldWidth[ch - PATTERN_CHAR_BASE];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unormcmp.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (332, 332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'n->m_flagsm_hdr.mh_flags |= M_EXT0x0001;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (968, 968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'M_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(256 - sizeof(struct m_hdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1399, 1399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/opt.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'char *av_uninit(parsed_key)parsed_key=parsed_key, *av_uninit(value)value=value;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1512, 1512), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1926, 1926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1478, 1478), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'VP8Frame *av_uninit(curframe)curframe=curframe, *prev_frame;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2623, 2623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'max <<= 1;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2353, 2353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'parser/expat/lib/xmltok.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*(*toP)++ = *utf8++;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1424, 1424), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '*t++ = 0;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (27, 27), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/x86/mpegaudiodsp.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'SUM8(MACS, suma[0], win + 32, in + 48){ suma[0]+=((win + 32)[0 * 64])*((in + 48)[0 * 64]); suma[0]+=((win + 32)[1 * 64])*((in + 48)[1 * 64]); suma[0]+=((win + 32)[2 * 64])*((in + 48)[2 * 64]); suma[0]+=((win + 32)[3 * 64])*((in + 48)[3 * 64]); suma[0]+=((win + 32)[4 * 64])*((in + 48)[4 * 64]); suma[0]+=((win + 32)[5 * 64])*((in + 48)[5 * 64]); suma[0]+=((win + 32)[6 * 64])*((in + 48)[6 * 64]); suma[0]+=((win + 32)[7 * 64])*((in + 48)[7 * 64]); };', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (146, 146), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1925, 1925), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ustrcase.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1756, 1756), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'uint32_t hashCode = blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (847, 847), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/qcms/iccread.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'float a = curve->parameter[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (482, 482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'expanded_src[i] = expanded_src[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (226, 226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'elements[i]=elementBases[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1169, 1169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1954, 1954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/imgconvert.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*loss_ptr = loss;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'env->me_psize = meta.mm_psizemm_dbs[0].md_pad;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (4400, 4400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (8718, 8718), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'imageDetails.stride() = stride;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (7519, 7519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, 0)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (0)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1380, 1380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 's=elements[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1162, 1162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/flacdec.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'unsigned av_uninit(a)a=a, av_uninit(b)b=b, av_uninit(c)c=c, av_uninit(d)d=d;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/stringtriebuilder.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'start=starts[unitNumber];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (183, 183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'frame->data[i] += offsets[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (937, 937), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (symLink) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1515, 1515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (specialFile) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmaster.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (!component_sent[ci])', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'int log2_align = offsets[i] ? ff_ctz(offsets[i])__builtin_ctz(offsets[i]) : INT_MAX2147483647;', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (921, 921), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (isSymLink || !S_ISDIR(mCachedStat.st_mode)((((mCachedStat.st_mode)) & 0170000) == (0040000))) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1033, 1033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/WrapSwitchStatementsInBlocks.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'EOpAssign, declaratorAsBinary->getLeft(), declaratorAsBinary->getRight());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1215, 1215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() == EvqConst ||(symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 67, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp" << ":" << 67 << "): " << "symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (66, 66), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacement.parent->replaceChildNode(replacement.original, replacement.replacement);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (524, 524), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(~operandArray[i].getUConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2687, 2687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packUnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2510, 2510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isInf(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2867, 2867), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (634, 634), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/ipc/PluginInstanceChild.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!(object = actor->GetObject(false))) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(gl::bitCast<int32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2872, 2872), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2991, 2991), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'unsigned int fieldIndex = static_cast<unsigned int>(constantUnion->getIConst(0));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (929, 929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TType *type = new TType(original->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName + "." + originalFieldName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (214, 214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = this->name;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (structure->symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = symbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2237, 2237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2948, 2948), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type->getBasicType() != EbtBool || !type->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackUnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2518, 2518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kDegreesToRadiansMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2697, 2697), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasUniformBlock(uniformBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbolNode->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (IsVaryingOut(declarator->getQualifier()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2232, 2232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (size_t index = 0; index < block->fields.size(); ++index)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/uspoof.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return result->asUSpoofChecker();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(definition->mType));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9204, 9204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() %', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2230, 2230), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TQualifier qualifier = declarator->getQualifier();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (240, 240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getBuiltInResourcesString();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (340, 340), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TConstantUnion *constantUnion = intermConstantUnion->getConstantValue();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rootBlock->insertChildNodes(0, insertions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(-operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(leftArray[i] != rightArray[i]);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2319, 2319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2653, 2653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'basicType = argConstant->getType().getBasicType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3084, 3084), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray < *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2355, 2355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'curNode->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ArrayReturnValueToOutParameter.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacementAssignment->setLine(expression->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &(compiler->getNameMap());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteStructSamplers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = asSymbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'UBool success = sub->doParse(subText, tempPP, _baseValue, upperBound,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1192, 1192), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderMaxVertices() >= 0;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'interfaceBlock->name = blockType->name().data();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (711, 711), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (left->isVector() && right->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2286, 2286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'c->remove();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1202, 1202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray > *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2367, 2367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == 0x80000000u)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2633, 2633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray < *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2373, 2373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->MimeType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (133, 133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->compile(shaderStrings, numStrings, compileOptions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue())(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 1458, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp" << ":" << 1458 << "): " << "symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1458, 1458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getReadonlyImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int iConst = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2807, 2807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] | rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2337, 2337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3012, 3012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&it);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (696, 696), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/FindMain.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBlock *mainBody = main->getBody();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (49, 49), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'mParametersVector->push_back(p);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/smpdtfmt.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'toAppend->isBogus()) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[col * matrixRows + matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2262, 2262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5603, 5603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (402, 402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (390, 390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(declarator->getAsSymbolNode() != nullptr ||(declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize) ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 875, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/IntermNode.cpp" << ":" << 875 << "): " << "declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize)"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (873, 873), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getShaderStorageBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->URL(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (127, 127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getNumViews();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (496, 496), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return node->getAsConstantUnion() != nullptr && node->getAsTyped()->getQualifier() == EvqConst;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (612, 612), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(position < parent->getChildCount())(position < parent->getChildCount() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 290, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp" << ":" << 290 << "): " << "position < parent->getChildCount()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const UnicodeString &rules = rbc->getRules();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (550, 550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2720, 2720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (cond->getQualifier() == EvqConst && trueExpression->getQualifier() == EvqConst &&', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2855, 2855), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RegenerateStructNames.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &type = symbol->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2837, 2837), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'firstDeclaration->shareParameters(*function);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/linker.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const unsigned slots = var->type->count_attribute_slots(target_index == MESA_SHADER_VERTEX);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2929, 2929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackSnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2557, 2557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2896, 2896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2656, 2656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'std::string varName = std::string(symNode->variable().name().data());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackSnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2499, 2499), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2954, 2954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInvocations();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (659, 659), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dom/bindings/TestCodeGenBinding.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!JS_GetPropertyById(cx, *object, atomsCache->c_id, temp.ptr())) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1411, 1411), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) >= 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2769, 2769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUsedImage2DFunctionNames();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (590, 590), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUniformRegisterMap();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (554, 554), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2923, 2923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] && rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2298, 2298), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return setFunctionCalled(function->uniqueId().get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (108, 108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackHalf2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2537, 2537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'node->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2936, 2936), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] ^ rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2332, 2332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rbc->getRules(delta, rules);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'InterfaceBlock *namedBlock = FindVariable(interfaceBlock->name(), infoList);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'elements.push_back(paramArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (126, 126), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'Calendar *c = (*shared)->clone();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (988, 988), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray > *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2361, 2361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() /', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2224, 2224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2882, 2882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getOutputType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2730, 2730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->DocType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kRadiansToDegreesMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2702, 2702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getShaderVersion();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'compiler->clearResults();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (initializedNode->isArray())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (48, 48), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packHalf2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (argTyped->getBasicType() == EbtStruct)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (810, 810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *interfaceIndexingNode = blockNode->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateSwitch.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'offsetNode = TIntermAggregate::CreateConstructor(texCoordNode->getType(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (114, 114), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] & rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2327, 2327), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveSwitchFallThrough.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&rm);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (argTyped->getMemoryQualifier().writeonly)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (733, 733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/third_party/compiler/ArrayBoundsClamper.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&clamper);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermTyped *argCopy = typedArg->deepCopy();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'bool replaced = replacement.parent->replaceChildNodeWithMultiple(replacement.original,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2672, 2672), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackUnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2566, 2566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float dividend = leftArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2112, 2112), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'result = rbc->internalGetLocaleID(type, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (594, 594), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (656, 656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermNode_util.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TOperator op = fn->getBuiltInOp();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (283, 283), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type.getBasicType() != EbtStruct && IsOpaqueType(argTyped->getBasicType()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (726, 726), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2911, 2911), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[i * leftRows + row].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2094, 2094), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2759, 2759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getComputeShaderLocalSize();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (leftArray[i] != rightArray[i])', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2383, 2383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'DateFormatSymbols *result = new DateFormatSymbols(shared->get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (256, 256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(abs(operandArray[i].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2783, 2783), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (originalArg->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'size_t dimensionalityFromElement = element->getType().getNumArraySizes() + 1u;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3577, 3577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ensureStructDefined(declarator->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2194, 2194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackUnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsRefreshDriver.cpp', 'desc': 'Called C++ object pointer is null', 'code': ': std::max(mActiveTimer->MostRecentRefresh(), mMostRecentRefresh);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1461, 1461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return (variable->getQualifier() == EvqTemporary || variable->getQualifier() == EvqGlobal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *arrayExpression = parent->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (275, 275), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(typeAtom));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9165, 9165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &interfaceType = interfaceNode->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (909, 909), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (const auto &field : block->fields())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!argument->isScalar() || argument->getBasicType() != EbtFloat)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(fabsf(operandArray[i].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2780, 2780), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return rbc->cloneBinary(buffer, capacity, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (75, 75), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&marker);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (141, 141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(~operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2684, 2684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3007, 3007), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1416, 1416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == std::numeric_limits<int>::min())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2618, 2618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float fConst = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2796, 2796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5678, 5678), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3034, 3034), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2996, 2996), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mReferencedShaderStorageBlocks.count(interfaceBlock->uniqueId().get()) == 0)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (491, 491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderOutputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/events/EventStateManager.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'nsCOMPtr<nsIContent> dragTarget = aDataTransfer->GetDragTarget();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2132, 2132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderOutputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (648, 648), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'static_cast<int>(operandArray[i].getUConst())));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2660, 2660), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getUniformBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (465, 465), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (constUnion->getType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'child->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'uprv_strncpy(typeBuffer, (*shared)->getType(), typeBufferSize):: strncpy(typeBuffer, (*shared)->getType(), typeBufferSize);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1027, 1027), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isNaN(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2862, 2862), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (601, 601), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackSnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2578, 2578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'varyings->push_back(info);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (293, 293), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int lhs = leftArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2169, 2169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Types.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(arrayDimension < mArraySizes->size())(arrayDimension < mArraySizes->size() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 698, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/Types.cpp" << ":" << 698 << "): " << "arrayDimension < mArraySizes->size()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (698, 698), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderInputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'falseExpression->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] || rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2308, 2308), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getUConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2887, 2887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*storage = interfaceBlock->blockStorage();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TFieldList &fields = structure ? structure->fields() : interfaceBlock->fields();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(gl::bitCast<uint32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2877, 2877), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (462, 462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packSnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2491, 2491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'add->setLine(texCoordNode->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_constant_propagation.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'param->accept(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (folded->getQualifier() == expression->getQualifier())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5059, 5059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasShaderStorageBlock(shaderStorageBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int intValue = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3022, 3022), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int maxVertices = compiler->getGeometryShaderMaxVertices();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (670, 670), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called function pointer is null (null dereference)', 'code': 'result->setFConst(builtinFunc(parameter.getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (3062, 3062), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (606, 606), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libsoundtouch/src/TDStretch.cpp', 'desc': "Value stored to 'bestCorr' is never read", 'code': 'bestCorr = -FLT_MAX3.40282347e+38F;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/modutil/install.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = PK11_INSTALL_UNSPECIFIED;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsencode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NSS_CMSEncoder_Cancel(p7ecx->childp7ecx); /* frees p7ecx->childp7ecx */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (663, 663), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/vr/ipc/VRManagerChild.cpp', 'desc': "Value stored to 'found' is never read", 'code': 'found = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("r1", frame_ppc->context.gpr[1], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'success' is never read", 'code': 'success = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1934, 1934), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, encrypt_p->encrypt_key, sizeof(encrypt_p->encrypt_key), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1046, 1046), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4019, 4019), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = l->action;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2119, 2119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (&pattern->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (964, 964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (549, 549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestFilePreferencesUnix.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = blacklistedFile->Create(nsIFile::NORMAL_FILE_TYPE, 0666);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'iface_type_name' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7927, 7927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/tzfmt.cpp', 'desc': "Value stored to 'numDigits' is never read", 'code': 'numDigits = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2131, 2131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (916, 916), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/mtransport/third_party/nICEr/src/stun/stun_codec.c', 'desc': "Value stored to 'padding_bytes' is never read", 'code': 'padding_bytes = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->unbounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/jar/jarsign.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7AddSigningTime(cinfo);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_longest_match_quickly_inc.h', 'desc': "Value stored to 'compare_char' is never read", 'code': 'compare_char = data[cur_ix_masked + best_len];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags.cc', 'desc': "Value stored to 'program_name' is never read", 'code': 'program_name = (program_name == NULL__null ? (*argv)[0] : program_name+1);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/imgutils.c', 'desc': "Value stored to 'dst_size' is never read", 'code': 'dst_size = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/RestyleManager.cpp', 'desc': "Value stored to 'frame' is never read", 'code': 'frame = content->GetPrimaryFrame();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1484, 1484), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (123, 123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (639, 639), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (307, 307), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/decoders/icon/nsIconURI.cpp', 'desc': "Value stored to 'foundInterface' is never read", 'code': 'foundInterface = static_cast<nsIURI*>(this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = GetString(arena, "Enter value for the authCertSerial field, "', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1133, 1133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font-subsets.c', 'desc': "Value stored to 'type1_font' is never read", 'code': 'type1_font = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (766, 766), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (102, 102), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset_props.cpp', 'desc': "Value stored to 'lastItem' is never read", 'code': 'lastItem = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (417, 417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/double-conversion-double-to-string.cpp', 'desc': "Value stored to 'fast_worked' is never read", 'code': 'fast_worked = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (435, 435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1901, 1901), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/tests/unit/tlsserver/lib/TLSServer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ReplyToRequest(&conn);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2217, 2217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3589, 3589), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3549, 3549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/webbrowserpersist/nsWebBrowserPersist.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dataDirParent->GetParent(getter_AddRefs(newDataDirParent));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1526, 1526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/base/nsAsyncRedirectVerifyHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = DelegateOnChannelRedirect(sink, mOldChan, mNewChan, mFlags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/harfbuzz/src/hb-ot-shape-complex-myanmar-machine.hh', 'desc': "Value stored to 'te' is never read", 'code': 'te = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'opaque' is never read", 'code': 'opaque = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1363, 1363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NULL_POINTER);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1418, 1418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' is never read", 'code': 'trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsCORSListenerProxy.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = http->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2505, 2505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (88, 88), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3543, 3543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/do_plc.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (279, 279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/find/nsFind.cpp', 'desc': "Value stored to 'prevChar' is never read", 'code': 'prevChar = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (236, 236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1764, 1764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/ValueNumbering.cpp', 'desc': "Value stored to 'def' is never read", 'code': 'def = rep;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (865, 865), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (string_array_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2052, 2052), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/sksl/SkSLByteCodeGenerator.cpp', 'desc': "Value stored to 'discard' is never read", 'code': 'discard = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3360, 3360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/fft.c', 'desc': "Value stored to 'ispan' is never read", 'code': 'ispan = kspan;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (485, 485), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prtime.c', 'desc': "Value stored to 'zone' is never read", 'code': 'zone = TT_GMT;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1669, 1669), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tempDirectory->AppendNative(tempDirName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediate_set' is never read", 'code': 'immediate_set = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (500, 500), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libpref/Preferences.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4006, 4006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, BEGIN_CMD, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1520, 1520), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (712, 712), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&clip_path->extents,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (503, 503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (630, 630), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2356, 2356), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/glslang_tab.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2223, 2223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteDWORD(cursor, msg.flags & NTLM_TYPE1_FLAGS(0x00000001 | 0x00000002 | 0x00000004 | 0x00000200 | 0x00008000 | 0x00080000));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSASN1Object.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = buildASN1ObjectFromDER(data, (len == 0) ? end : data + len,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (152, 152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1155, 1155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2240, 2240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/mediasource/MediaSourceDecoder.cpp', 'desc': "Value stored to 'checkedDuration' is never read", 'code': 'checkedDuration = INT64_MAX(9223372036854775807L) - 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (222, 222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3198, 3198), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/vp8_impl.cc', 'desc': "Value stored to 'img' is never read", 'code': 'img = vpx_codec_get_frame(decoder_, &iter);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1171, 1171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (596, 596), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceNameUTF8' is never read", 'code': 'deviceNameUTF8 = const_cast<char*>(kDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1279, 1279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, clone->base.status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (154, 154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'was_previous' is never read", 'code': 'was_previous = scaled_font == cr->gstate->previous_scaled_font;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3220, 3220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, sdp_p->owner_addr, sizeof(sdp_p->owner_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (202, 202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/auth/nsAuthGSSAPI.cpp', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = gss_display_status_ptr((gss_display_status_type)*gssFuncs[0].func)(&new_stat, maj_stat, GSS_C_GSS_CODE1,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (235, 235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-polygon.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_polygon_line_to (polygon, &polygon->first_point);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (480, 480), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2494, 2494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (surface->stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1006, 1006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "sslv3Used";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3410, 3410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pathops/SkPathOpsCommon.cpp', 'desc': "Value stored to 'segment' is never read", 'code': 'segment = angle->segment();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8525, 8525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_arm->context.iregs[15], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/rbbi.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1227, 1227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFDevice.cpp', 'desc': "Value stored to 'pathIsMutable' is never read", 'code': 'pathIsMutable = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModePrecise0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Value stored to 'pdst' is never read", 'code': 'pdst = cdst->mc_pg[cdst->mc_top];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8079, 8079), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'uriloader/prefetch/nsOfflineCacheUpdate.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cache->Discard();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2051, 2051), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/decode.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (303, 303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("s7",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'startupcache/StartupCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(NS_ConvertUTF8toUTF16(env), false,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, conn_p->conn_addr, sizeof(conn_p->conn_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (530, 530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/usprep.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (531, 531), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2503, 2503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/vr/service/OpenVRSession.cpp', 'desc': "Value stored to 'hand' is never read", 'code': 'hand = dom::GamepadHand::_empty;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, timespec_p->stop_time, sizeof(timespec_p->stop_time), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (890, 890), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12e.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7EncoderFinish(innerP7ecx, p12ecx->p12exp->pwfn,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1815, 1815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1793, 1793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_parser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2135, 2135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_USER_PROFILE_LOCAL_50_DIR"ProfLD",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2156, 2156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (267, 267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1504, 1504), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=rhs->bits; /* be clean */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3943, 3943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _get_source_surface_size (source, &surface_entry->width,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1185, 1185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsDocumentViewer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = InitPresentationStuff(mDocument->MayStartLayout());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2176, 2176), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1154, 1154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/pp.c', 'desc': "Value stored to 'search_start' is never read", 'code': 'search_start = shader;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1040, 1040), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/x86_disasm.c', 'desc': "Value stored to 'next_addr' is never read", 'code': 'next_addr = -1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9123, 9123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.cc', 'desc': "Value stored to 'targetEnergy' is never read", 'code': 'targetEnergy = dec_used_energy_;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_truetype_font_set_error (font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (319, 319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/layers/apz/src/AsyncPanZoomController.cpp', 'desc': "Value stored to 'needContentRepaint' is never read", 'code': 'needContentRepaint = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4681, 4681), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModeImprecise1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1109, 1109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'num_charstrings' is never read", 'code': 'num_charstrings = strtol (p, &glyph_count_end, 10);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1039, 1039), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (364, 364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numbreak' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4312, 4312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'separator' is never read", 'code': 'separator = field[0] = fullName;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(scriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Value stored to 'noOfLostFrames' is never read", 'code': '(void)(noOfLostFrames = 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (276, 276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_rsid' is never read", 'code': 'has_rsid = packet.GetExtension<RtpStreamId>(&packet_rsid);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3131, 3131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.kekRecipientInfo.encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'type' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5858, 5858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/printing/nsPrintJob.cpp', 'desc': "Value stored to 'remotePrintJobListening' is never read", 'code': 'remotePrintJobListening = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1513, 1513), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/debugger/Debugger.cpp', 'desc': "Value stored to 'dbg' is never read", 'code': 'dbg = next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3858, 3858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pdf_operators_flush (&surface->pdf_operators);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3784, 3784), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': "Value stored to 'hasRealData' is never read", 'code': 'hasRealData = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (740, 740), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7decode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CERT_SaveSMimeProfile(cert, profile, encoded_stime);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1707, 1707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'err' is never read", 'code': 'err = NPN_GetURL(npp, "about:blank", frame);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (593, 593), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/FaviconHelpers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = stmt->GetInt32(0, &width);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (433, 433), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/ogg/OggDemuxer.cpp', 'desc': "Value stored to 'mustBackoff' is never read", 'code': 'mustBackoff = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1989, 1989), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scan_converter_set_error (converter, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_NewFrameTraversal(getter_AddRefs(frameTraversal),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8633, 8633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (273, 273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = aBoxSizes;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (685, 685), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = PR_SUCCESS;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (789, 789), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'var_mode' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7926, 7926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_EncryptUpdate(context->session, random, sizeof(random), out, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (808, 808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92154, 92154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (668, 668), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/putil.cpp', 'desc': "Value stored to 'sizeFileRead' is never read", 'code': 'sizeFileRead = fread(tzInfo->defaultTZBuffer, 1, tzInfo->defaultTZFileSize, tzInfo->defaultTZFilePtr);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (923, 923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'res' is never read", 'code': 'res = in.Read(buf, 2);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (652, 652), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1119, 1119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/Realm.cpp', 'desc': "Value stored to 'obj' is never read", 'code': 'obj = SetNewObjectMetadata(cx_, obj);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (827, 827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceUniqueIdUTF8' is never read", 'code': 'deviceUniqueIdUTF8 = const_cast<char*>(kUniqueDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (30, 30), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (null_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4434, 4434), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/filteredbrk.cpp', 'desc': "Value stored to 'uch' is never read", 'code': 'uch = utext_next32utext_next32_67(fText.getAlias());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (274, 274), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1366, 1366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'nummap' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4209, 4209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': "Value stored to 'samplingFreq' is never read", 'code': 'samplingFreq = 8000;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStringStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (43, 43), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'len' is never read", 'code': 'len = wav.Read(&_wavFormatObj, sizeof(WAVE_FMTINFO_header));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (118, 118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3632, 3632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/CodeGenerator.cpp', 'desc': "Value stored to 'op' is never read", 'code': 'op = JSOp::Eq;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8886, 8886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/number_utils.cpp', 'desc': "Value stored to 'patternKey' is never read", 'code': 'patternKey = "decimalFormat"; // silence compiler error', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'widget/gtk/nsGtkKeyUtils.cpp', 'desc': "Value stored to 'handlingState' is never read", 'code': 'handlingState = KeyHandlingState::eNotHandledButEventDispatched;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1494, 1494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheStorageService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CacheEntry::HashingKey(contextKey, aIdExtension, aURI, fileKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1646, 1646), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_DecryptUpdate(context->session, (CK_BYTE_PTR)in, sizeof(random), random, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (815, 815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 16;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2810, 2810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_span_renderer_set_error (renderer, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (707, 707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=1; /* show have a unit .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4643, 4643), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11skey.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = slot->wrapMechanism;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (378, 378), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/harfbuzz/src/hb-ot-layout-gsub-table.hh', 'desc': "Value stored to 'count' is never read", 'code': 'count = substitute.len;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1187, 1187), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/freebl/mpi/montmulf.c', 'desc': "Value stored to 't' is never read", 'code': 't = (a >> 32);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (107, 107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2118, 2118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (282, 282), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (525, 525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = LaunchUIAction(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsXREDirProvider.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tmp;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_bind_text(stmt, 1, id, PORT_Strlen(id)strlen(id), SQLITE_STATIC((sqlite3_destructor_type)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1687, 1687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'dataFound' is never read", 'code': 'dataFound = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1437, 1437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'chrome/nsChromeProtocolHandler.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = url->GetPathQueryRef(path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'result' is never read", 'code': 'result = SDP_INVALID_TOKEN_ORDERING;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1141, 1141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_MATRIX);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1170, 1170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3352, 3352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/BaselineBailouts.cpp', 'desc': "Value stored to 'prevFramePtr' is never read", 'code': 'prevFramePtr = builder.virtualPointerAtStackOffset(0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1197, 1197), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'inTransaction' is never read", 'code': 'inTransaction = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2324, 2324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2863, 2863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/nsinstall.c', 'desc': "Value stored to 'tdlen' is never read", 'code': 'tdlen = strlen(todir);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-user-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (291, 291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/utils/SkPolyUtils.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex = currIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (211, 211), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3583, 3583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12d.c', 'desc': "Value stored to 'setNickname' is never read", 'code': 'setNickname = PR_FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2248, 2248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5075, 5075), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ProcessRawBytes(&extension->value, extvalue, false);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1393, 1393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/cache/Manager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = db::GetKnownBodyIds(aConn, knownBodyIdList);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1203, 1203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_search.c', 'desc': "Value stored to 'range' is never read", 'code': 'range = WebRtcIlbcfix_kSearchRange[block][stage];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (241, 241), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = extents.width == 0 || extents.height == 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2318, 2318), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = SQLITE_OK0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (69536, 69536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (953, 953), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/neteq/neteq_impl.cc', 'desc': "Value stored to 'num_output_samples' is never read", 'code': 'num_output_samples = AudioFrame::kMaxDataSizeSamples;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (986, 986), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3164, 3164), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (613, 613), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidout,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3693, 3693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (618, 618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sftkdb_CheckPasswordNull(handle, &tokenRemoved);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4135, 4135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xul/nsXULPrototypeCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = PutPrototype(newProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3113, 3113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9346, 9346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/ycbcr/yuv_convert.cpp', 'desc': "Value stored to 'source_dy' is never read", 'code': 'source_dy = original_dx;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (426, 426), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'best_i' is never read", 'code': 'best_i = i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (807, 807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("efl", frame_x86->context.eflags, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (311, 311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/notification/Notification.cpp', 'desc': "Value stored to 'blocked' is never read", 'code': 'blocked = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (528, 528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1096, 1096), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (553, 553), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "weakCryptoUsed";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1144, 1144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1057, 1057), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'D' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (755, 755), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=D2U(accdigits)((accdigits)<=49?d2utable[accdigits]:((accdigits)+1 -1)/1); /* and recalculate the units for copy */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4803, 4803), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = showResponse->Init(aRequestId, responseStatus, EmptyString(), nullptr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnv_io.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_clip_apply_clip_path (clip, path->prev);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/stsearch.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3619, 3619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libsoundtouch/src/RateTransposer.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = pTransposer->transpose(outputBuffer, inputBuffer);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (143, 143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (960, 960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1943, 1943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(absolutePath, false, getter_AddRefs(location));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocRootFrame' is never read", 'code': 'subdocRootFrame = frame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-toy-font-face.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (432, 432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11slot.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(slot)((CK_FUNCTION_LIST_3_0_PTR)((slot)->functionList))->C_SeedRandom(slot->session,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1404, 1404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_sparc->context.pc, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (368, 368), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_a_scan(scanptr, 0, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-device.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_device_set_error (device, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'comma' is never read", 'code': 'comma = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1273, 1273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=lhs->bits; /* .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3907, 3907), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3224, 3224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteSecBuf(cursor, 0, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (381, 381), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/encoder/OpusTrackEncoder.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStorageStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (150, 150), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsDocumentEncoder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = EncodeToString(buf);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1217, 1217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (586, 586), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1118, 1118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_function.cpp', 'desc': "Value stored to 'ir' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (363, 363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1998, 1998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_scans(scanptr, ncomps, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/cryptohi/secvfy.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sec_DecodeRSAPSSParams(&tmpArena.arena, param,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (584, 584), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = srtp_auth_update(session_keys->rtp_auth, (uint8_t *)auth_start,(((session_keys->rtp_auth)->type)->update((session_keys->rtp_auth)->state, ((uint8_t *)auth_start), (*pkt_octet_len - tag_len - mki_size)))', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2605, 2605), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/nsNavHistory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aRow->GetString(kGetInfoIndex_ItemTags, tags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (532, 532), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1430, 1430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, cmd, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1598, 1598), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'storage/mozStorageConnection.cpp', 'desc': "Value stored to 'srv' is never read", 'code': 'srv = ::sqlite3_close(aNativeConnection);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1073, 1073), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'prevSecondary' is never read", 'code': 'prevSecondary = s;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (509, 509), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aParentDir->Clone(getter_AddRefs(tempDirectory));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (564, 564), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/test/gtest/TestAnimationFrameBuffer.cpp', 'desc': "Value stored to 'restartDecoder' is never read", 'code': 'restartDecoder = buffer.MarkComplete(IntRect(0, 0, 1, 1));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, port, sizeof(port), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1364, 1364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (451, 451), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, filePath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (885, 885), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (546, 546), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1194, 1194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2103, 2103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6055, 6055), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11obj.c', 'desc': "Value stored to 'nextObject' is never read", 'code': 'nextObject = objects->next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1615, 1615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'ter' is never read", 'code': 'ter = CollationFastLatin::COMMON_TER;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (510, 510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_confid,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3734, 3734), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.keyAgreeRecipientInfo.recipientEncryptedKeys[subIndex]->encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (surface, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3125, 3125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = currentBox;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (688, 688), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (&surface->base, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (684, 684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/string/nsSubstring.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = mRefCount.load(std::memory_order_acquire);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (933, 933), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3256, 3256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/websocket/WebSocketChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mHttpChannel->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2550, 2550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/opt.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1337, 1337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1912, 1912), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/md/unix/uxshm.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = PR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c', 'desc': "Value stored to 'totalStreamLen' is never read", 'code': 'totalStreamLen = streamLenLB;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-recording-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1107, 1107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'ccp' is never read", 'code': '= (char const *const *) p;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (22, 22), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsFocusManager.cpp', 'desc': "Value stored to 'startFrame' is never read", 'code': 'startFrame = newCaretFrame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2960, 2960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("rip", frame_amd64->context.rip, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1103, 1103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'rtp_xtn_hdr_keylen' is never read", 'code': 'rtp_xtn_hdr_keylen = rtp_keylen;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1050, 1050), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_type1_font_subset_fini (&font);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1392, 1392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (852, 852), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'sourceIndex' is never read", 'code': 'sourceIndex=nextSourceIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1049, 1049), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/glue/mozHunspell.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewNativeLocalFile(extDictPath, true, getter_AddRefs(dictDir));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (239, 239), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocView' is never read", 'code': 'subdocView = nextView;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (619, 619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1456, 1456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'encalgtag' is never read", 'code': 'encalgtag = SECOID_GetAlgorithmTagSECOID_GetAlgorithmTag_Util(&(ri->ri.kekRecipientInfo.keyEncAlg));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri), true);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (188, 188), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mTrashDirEnumerator->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.subnet.addr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2435, 2435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/base/nsInputStreamPump.cpp', 'desc': "Value stored to 'nextState' is never read", 'code': 'nextState = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (437, 437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': "Value stored to 'length' is never read", 'code': 'length = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1733, 1733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'glyph_array' is never read", 'code': 'glyph_array = &(range_offset[num_segments]);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1220, 1220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 8;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2808, 2808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/pitch_estimator_c.c', 'desc': "Value stored to 'x' is never read", 'code': 'x = in + PITCH_MAX_LAG140 / 2 + 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnv_bld.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/forms/nsDateTimeControlFrame.cpp', 'desc': "Value stored to 'contentBoxBSize' is never read", 'code': 'contentBoxBSize = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (116, 116), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), "\\r\\n", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4462, 4462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (730, 730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'error_emitted' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5332, 5332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2369, 2369), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/base/PluginFinder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = nssPKIObject_AddInstance(node->object, instance);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (769, 769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/RangeAnalysis.cpp', 'desc': "Value stored to 'first' is never read", 'code': 'first = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_forceAttribute(key, CKA_VALUE0x00000011UL, okm, keySize);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6914, 6914), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (216, 216), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/lowpbe.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_DSC_COMMENT);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/util/sha1/sha1.c', 'desc': "Value stored to 'a' is never read", 'code': 'a = b = c = d = e = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &sampled_area);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2291, 2291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (463, 463), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/normalizer2impl.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset=nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2657, 2657), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3537, 3537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1134, 1134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92244, 92244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidin,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3653, 3653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2540, 2540), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "Value stored to 'stab' is never read", 'code': 'stab=WebRtcSpl_LevinsonW32_JSK(corrlo2QQ, a_LOQ11, k_vecloQ15, 8);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (821, 821), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (399, 399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_CACHE_PARENT_DIR"cachePDir",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1311, 1311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/udata.cpp', 'desc': "Value stored to 'didUpdate' is never read", 'code': 'didUpdate = /* no longer using this result */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (860, 860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->bounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1428, 1428), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileContextEvictor.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dirEnum->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (347, 347), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/utext.cpp', 'desc': "Value stored to 'limit32' is never read", 'code': 'limit32 = si;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2547, 2547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/base/nsPluginHost.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/wrappers/WrapperFactory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = wn->GetScriptable()->PreCreate(wn->Native(), cx, currentScope,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (296, 296), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_AddAttributeType(key, CKA_NSS_PQG_COUNTER((0x80000000UL | 0x4E534350) + 20),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4154, 4154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/mtransport/third_party/nICEr/src/ice/ice_candidate_pair.c', 'desc': "Value stored to '_status' is never read", 'code': '_status=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'startPos' is never read", 'code': 'startPos = curLoc;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2402, 2402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/presentation/PresentationService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = enumerator->GetNext(getter_AddRefs(isupports));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (683, 683), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = Store16(dst, offset, y_max);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/bsf.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (310, 310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'valid' is never read", 'code': 'valid = PR_TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/base/strings/safe_sprintf.cc', 'desc': "Value stored to 'padding' is never read", 'code': 'padding = max_padding;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'C' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (754, 754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (405, 405), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/core/SkPath.cpp', 'desc': "Value stored to 'verb' is never read", 'code': 'verb = kDone_Verb; // stop the loop', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1898, 1898), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/breakpad-client/linux/minidump_writer/cpu_set.h', 'desc': "Value stored to 'item_len' is never read", 'code': 'item_len = static_cast<size_t>(item_next - item);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Value stored to 'size' is never read", 'code': 'size = 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'curElem' is never read", 'code': 'curElem = curElem->next.getAlias();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2043, 2043), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numdefcpd' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4106, 4106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediateSet' is never read", 'code': 'immediateSet = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (538, 538), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/smooth.c', 'desc': "Value stored to 'w00' is never read", 'code': 'w00 = w10 = w11 = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (47, 47), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-gstate.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1514, 1514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/number_modifiers.cpp', 'desc': "Value stored to 'infixLength' is never read", 'code': 'infixLength = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (535, 535), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_ASN1DecodeItemSEC_ASN1DecodeItem_Util(pfx->poolp, asafe,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/reputationservice/ApplicationReputation.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mQuery->GetRedirects(getter_AddRefs(redirects));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1417, 1417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'ipc/testshell/XPCShellEnvironment.cpp', 'desc': "Value stored to 'ok' is never read", 'code': 'ok = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (302, 302), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3595, 3595), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_mem_energy.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (65, 65), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3119, 3119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'productUniqueIdUTF8' is never read", 'code': 'productUniqueIdUTF8 = const_cast<char*>(kProductUniqueId);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (parent_surface, &extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (709, 709), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.msid.appdata,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5008, 5008), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1142, 1142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/nsUrlClassifierUtils.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = Base64Decode(prefix, prefixBinary);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (505, 505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1012, 1012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (778, 778), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'lengthInfix' is never read", 'code': 'lengthInfix += mod.apply(string, UPRV_INDEX_0(lengthPrefix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/jitter_buffer.cc', 'desc': "Value stored to 'dropped_frames' is never read", 'code': 'dropped_frames += decodable_frames_.RecycleFramesUntilKeyFrame(', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1161, 1161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/frontend/BytecodeEmitter.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += ENVCOORD_SLOT_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (978, 978), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (334, 334), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (793, 793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (876, 876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'pPtr' is never read", 'code': 'memcpy(pPtr, "-wal", 4); pPtr += 4 + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (56322, 56322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (812, 812), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 's' is never read", 'code': 's += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4799, 4799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (445, 445), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1528, 1528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (830, 830), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4798, 4798), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/debugger/Script.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1137, 1137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (819, 819), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_base64.c', 'desc': "Value stored to 'line_count' is never read", 'code': 'line_count += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (206, 206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2421, 2421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (811, 811), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/simulcast_rate_allocator.cc', 'desc': "Value stored to 'left_to_allocate' is never read", 'code': 'left_to_allocate -= allocation;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'npc' is never read", 'code': 'npc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3059, 3059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libvorbis/lib/vorbis_floor1.c', 'desc': "Value stored to 'y2b' is never read", 'code': 'y2b+= *y1 * *y1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (487, 487), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestSTLWrappers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv += v.at(1) ? 1 : 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4800, 4800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/security/SRICheck.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset += sizeof(mHashLength);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (498, 498), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2163, 2163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (800, 800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'size' is never read", 'code': 'size += ksize + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-bits-image.c', 'desc': "Value stored to 'x' is never read", 'code': 'x += w;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1262, 1262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/enh_upsample.c', 'desc': "Value stored to 'pu11' is never read", 'code': 'pu11+=ENH_UPS04;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/tdcache.c', 'desc': "Value stored to 'added' is never read", 'code': 'added += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (782, 782), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (785, 785), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags_completions.cc', 'desc': "Value stored to 'lines_so_far' is never read", 'code': 'lines_so_far += group.SizeInLines();', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3459, 3459), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcdctmgr.c', 'desc': "Value stored to 'val' is never read", 'code': 'val <<= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/md/unix/uxrng.c', 'desc': "Value stored to 'size' is never read", 'code': 'size -= s;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/rtp_rtcp/source/rtp_utility.cc', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'length2' is never read", 'code': 'length2 += micros2.modOuter->apply(string, UPRV_INDEX_2(lengthPrefix + length1 + lengthInfix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3458, 3458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (796, 796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libtheora/lib/decode.c', 'desc': "Value stored to 'zzi' is never read", 'code': 'zzi=OC_MINI(zzi,64)((zzi)+((64)-(zzi)&-((64)<(zzi))));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1578, 1578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (287, 287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex += len;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1402, 1402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Value stored to 'variantSize' is never read", 'code': 'variantSize += posixVariantSize;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1674, 1674), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/digital_agc.c', 'desc': "Value stored to 'zeroGainLvl' is never read", 'code': 'zeroGainLvl += (analogTarget - digCompGaindB + kSoftLimiterLeft);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (101, 101), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/svg/SVGTextFrame.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'uint32_t end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4768, 4768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/MIR.cpp', 'desc': "Value stored to 'ret' during its initialization is never read", 'code': 'double ret = JS::GenericNaN();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (104, 104), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/antitracking/URLDecorationStripper.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Preferences::GetString(kPrefName, tokenList);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (28, 28), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/reporting/ReportDeliver.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = NS_NewCStringInputStream(getter_AddRefs(streamBody), body);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLOperators.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/PublicKeyPinningService.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = FindPinningInformation(hostname, time, originAttributes,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (220, 220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aDatabaseFile->GetLeafName(filename);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (887, 887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5083, 5083), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/RsdparsaSdpAttributeList.cpp', 'desc': "Value stored to '[codec, defaults]' during its initialization is never read", 'code': 'auto [codec, defaults] = strToCodecType(name);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (702, 702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' during its initialization is never read", 'code': 'nscoord trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (297, 297), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = mMainConn->ExecuteSimpleSQL(NS_LITERAL_CSTRING(static_cast<const nsLiteralCString&>(nsLiteralCString("" "UPDATE moz_places " "SET url = IFNULL(\'place:tag=\' || ( " "SELECT title FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT) " "), url) " "WHERE url_hash BETWEEN hash(\'place\', \'prefix_lo\') AND " "hash(\'place\', \'prefix_hi\') " "AND url LIKE \'%type=7%\' " "AND EXISTS(SELECT 1 FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT)) "))', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2033, 2033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrameSelection.cpp', 'desc': "Value stored to 'tHint' during its initialization is never read", 'code': 'CaretAssociateHint tHint(mCaret.mHint); // temporary variable so we dont set', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (774, 774), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/ia32_insn.c', 'desc': "Value stored to 'op' during its initialization is never read", 'code': "unsigned char *next, op = buf[0]; /* byte value -- 'opcode' */", 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'last' during its initialization is never read", 'code': 'char16_t* last = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (380, 380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constCStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1974, 1974), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': "Value stored to 'subEnd' during its initialization is never read", 'code': 'int32_t subEnd = subStart;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (477, 477), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'caps/ExpandedPrincipal.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aStream->Read32(&version);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_cpu_info' during its initialization is never read", 'code': 'bool has_cpu_info = GetCPUInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (97, 97), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/presentation/PresentationSessionInfo.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = UNWRAP_OBJECT(Element, &obj, frame)mozilla::dom::binding_detail::UnwrapObjectWithCrossOriginAsserts< mozilla::dom::prototypes::id::Element, mozilla::dom::Element_Binding::NativeType>(&obj, frame);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1482, 1482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5557, 5557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': "Value stored to 'uniqueId' during its initialization is never read", 'code': 'int uniqueId = mUniqueId.get();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (59, 59), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'f' during its initialization is never read", 'code': 'const Dav1dFrameContext *const f = t->f;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2398, 2398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'ppFrom' during its initialization is never read", 'code': 'Index **ppFrom = &pTab->pIndex;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (113070, 113070), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_process_create_time' during its initialization is never read", 'code': 'bool has_process_create_time =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_os_info' during its initialization is never read", 'code': 'bool has_os_info = GetOSInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'foo' during its initialization is never read", 'code': 'foo = res_ninit__res_ninit(&_res(*__res_state()));', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (13, 13), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/strutil.cc', 'desc': "Value stored to 'hex_start' during its initialization is never read", 'code': 'const char *hex_start = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'ref' during its initialization is never read", 'code': 'const struct mv ref = b->mv[0];', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Value stored to 'is_lod' during its initialization is never read", 'code': 'const bool is_lod = (ir->op == ir_txl);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'dst_offset' during its initialization is never read", 'code': 'uint64_t dst_offset = first_table_offset;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1177, 1177), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Value stored to 'name' during its initialization is never read", 'code': 'const char *name = this->var_name;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1338, 1338), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'const char* end = begin;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (708, 708), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/core/SkConvolver.cpp', 'desc': "Value stored to 'filterValues' during its initialization is never read", 'code': 'const SkConvolutionFilter1D::ConvolutionFixed* filterValues =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/src/mozEnglishWordUtils.cpp', 'desc': "Value stored to 'startWord' during its initialization is never read", 'code': 'const char16_t* startWord = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (46, 46), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constArrRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (863, 863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{string};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1964, 1964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prnetdb.c', 'desc': "Value stored to 'md_af' during its initialization is never read", 'code': 'PRUint16 md_af = addr->raw.family;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2390, 2390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = intercepted->Init(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (10132, 10132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'clip_extents' during its initialization is never read", 'code': 'const cairo_rectangle_int_t *clip_extents = &clip_path->extents;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2243, 2243), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/TunnelUtils.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Flush(count, countRead);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1323, 1323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/js/src/conftest.c', 'desc': "Value stored to 'cs' during its initialization is never read", 'code': 'cs = nl_langinfo(CODESETCODESET);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5, 5), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_mid' during its initialization is never read", 'code': 'bool has_mid = packet.GetExtension<RtpMid>(&packet_mid);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmoFrame.cpp', 'desc': "Value stored to 'embellishAncestor' during its initialization is never read", 'code': 'nsIFrame* embellishAncestor = this;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{cstring};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1980, 1980), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsBidiPresUtils.cpp', 'desc': "Value stored to 'dir' during its initialization is never read", 'code': 'nsBidiDirection dir = aBidiEngine->GetVisualRun(i, &start, &length);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2183, 2183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'high_word' during its initialization is never read", 'code': 'uint32_t high_word = in_word;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5588, 5588), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/MediaManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = docURI->GetHost(host);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2388, 2388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2226, 2226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'tools/profiler/core/VTuneProfiler.cpp', 'desc': "Value stored to 'testEvent' during its initialization is never read", 'code': '__itt_event testEvent =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/tables/nsTableFrame.cpp', 'desc': "Value stored to 'rg' during its initialization is never read", 'code': 'nsTableRowGroupFrame* rg = mRowGroup;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4422, 4422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] = createBufferAndData<FillContents::Uninitialized>(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1257, 1257), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{arr};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFlexContainerFrame.cpp', 'desc': "Value stored to '[maxBlockEndEdgeOfChildren, areChildrenComplete]' during its initialization is never read", 'code': 'const auto [maxBlockEndEdgeOfChildren, areChildrenComplete] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4452, 4452), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &ceilf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2849, 2849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': "Access to field 'd_ino' results in a dereference of a null pointer (loaded from variable 'ep')", 'code': 'if (ep->d_ino == ino) break;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Access to field 'type' results in a dereference of a null pointer (loaded from variable 'from')", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': "Access to field 'top_dict' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'status = cff_dict_set_operands (font->top_dict, ROS_OP0x0c1e, buf, p - buf);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1032, 1032), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1301, 1301), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mn_flags' results in a dereference of a null pointer (loaded from variable 'leaf')", 'code': 'if (F_ISSET(leaf->mn_flags, F_DUPDATA)(((leaf->mn_flags) & (0x04)) == (0x04))) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (6171, 6171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = name.length();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (850, 850), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_db.md_pad = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7537, 7537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'monotonicallyIncreasingTime' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'double timestamp = platform->monotonicallyIncreasingTime(platform);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/metablock.c', 'desc': "Array access (via field 'literal_context_map') results in a null pointer dereference", 'code': 'mb->literal_context_map[(i << BROTLI_LITERAL_CONTEXT_BITS6) + j] =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'is_function' results in a dereference of a null pointer (loaded from variable 'macro')", 'code': 'assert(macro->is_function)((void) sizeof ((macro->is_function) ? 1 : 0), __extension__ ({ if (macro->is_function) ; else __assert_fail ("macro->is_function", "src/compiler/glsl/glcpp/glcpp-parse.y", 1857, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4133, 4133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'array' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'type->fields.array->is_array() ? ub_array->array : NULL__null;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'parser/expat/lib/xmlparse.c', 'desc': "Array access (via field 'scaffIndex') results in a null pointer dereference", 'code': 'dtd->scaffIndex[dtd->scaffLevel] = myindex;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5023, 5023), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_blend_equation_advanced.cpp', 'desc': "Access to field 'swizzle' results in a dereference of a null pointer (loaded from variable 'slot0')", 'code': 'slot0->swizzle = SWIZZLE_XXXX(((0)<<0) | ((0)<<3) | ((0)<<6) | ((0)<<9));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/lib/basicutil.c', 'desc': 'Dereference of null pointer', 'code': 'optstatelong = longopts[optstate->longOptIndex].longOptName;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (570, 570), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (from variable 'mop') results in a null pointer dereference", 'code': 'save = mop[0];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3277, 3277), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::sub(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2060, 2060), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &asinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2754, 2754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'width')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Access to field 'grayscale_font' results in a dereference of a null pointer (loaded from variable 'font_private')", 'code': 'needs_font = !font_private->grayscale_font;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4722, 4722), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pWith' results in a dereference of a null pointer (loaded from variable 'pPrior')", 'code': 'assert( pPrior->pWith==0 )((void) sizeof ((pPrior->pWith==0) ? 1 : 0), __extension__ ({ if (pPrior->pWith==0) ; else __assert_fail ("pPrior->pWith==0", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 132654, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (132654, 132654), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &atanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2738, 2738), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libmar/src/mar_read.c', 'desc': "Access to field 'offset' results in a dereference of a null pointer (loaded from variable 'item')", 'code': 'if (mar_insert_offset(mar, item->offset, item->length) == 1) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': 'Dereference of null pointer', 'code': 'mem->pub.alloc_small = alloc_small;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::add(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2054, 2054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from field 'prev')", 'code': 'n->prev->next = replacement;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (203, 203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &roundf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2831, 2831), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Forming reference to null pointer', 'code': 'mSymbolTable->isStaticallyUsed(*static_cast<const TVariable *>(blockSymbol));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (727, 727), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (233, 233), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pRead' results in a dereference of a null pointer (loaded from variable 'pIter')", 'code': 'char *pRead = pIter->pRead;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (181982, 181982), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = fieldVar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (191, 191), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/repeated_field.cc', 'desc': "Access to field 'allocated_size' results in a dereference of a null pointer (loaded from field 'rep_')", 'code': '++rep_->allocated_size;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (115, 115), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &cosf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2710, 2710), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'z') results in a null pointer dereference", 'code': 'assert( z[0]==\'\\0\' && z>zRet )((void) sizeof ((z[0]==\'\\0\' && z>zRet) ? 1 : 0), __extension__ ({ if (z[0]==\'\\0\' && z>zRet) ; else __assert_fail ("z[0]==\'\\\\0\' && z>zRet", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 107178, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (107178, 107178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmarker.c', 'desc': "Access to field 'sent_table' results in a dereference of a null pointer (loaded from variable 'htbl')", 'code': 'if (!htbl->sent_table) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (205, 205), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getUniformBlockRegister(uniformBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2742, 2742), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Array access (via field 'data_') results in a null pointer dereference", 'code': '++self->data_[val];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (926, 926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (299, 299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &coshf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2746, 2746), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Array access (from variable 'label') results in a null pointer dereference", 'code': 'if(label[0]==0x2d) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (779, 779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=*src++;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (73, 73), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': "Array access (from variable 'digests') results in a null pointer dereference", 'code': 'digests[i] = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (600, 600), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'cachePtr' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'U_ASSERT(value->cachePtr == this)(static_cast <bool> (value->cachePtr == this) ? void (0) : __assert_fail ("value->cachePtr == this", "/home/edwjchen/gecko-dev/intl/icu/source/common/unifiedcache.cpp", 483, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'input_xoffset = *xoffset;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Forming reference to null pointer', 'code': 'stringSpan = new UnicodeSetStringSpan(*o.stringSpan, *strings);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = c;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'applyPattern(pattern, *parseError, status);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (518, 518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/get_bits.h', 'desc': "Access to field 'l' results in a dereference of a null pointer", 'code': 'UPDATE_CACHE(re, s)re_cache = av_bswap32((((const union unaligned_32 *) ((s)->buffer + (re_index >> 3)))->l)) << (re_index & 7);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if (m->m_flagsm_hdr.mh_flags & M_EXT0x0001) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (250, 250), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jchuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (254, 254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7encode.c', 'desc': "Access to field 'len' results in a dereference of a null pointer (loaded from field 'certList')", 'code': 'for (ci = 0; ci < signerinfo->certList->len; ci++)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (864, 864), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg != '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': "Dereference of null pointer (loaded from field 'yy_c_buf_p')", 'code': '*yyg->yy_c_buf_p = yyg->yy_hold_char;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4012, 4012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'ASSERT(namedBlock->staticUse)(namedBlock->staticUse ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 927, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp" << ":" << 927 << "): " << "namedBlock->staticUse"));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (927, 927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from variable 'hdr_ptr')", 'code': 'hdr_ptr->next = mem->large_list[pool_id];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFType1Font.cpp', 'desc': "Dereference of null pointer (loaded from variable 'size')", 'code': '*size = (size_t)buf[2] | ((size_t)buf[3] << 8) | ((size_t)buf[4] << 16) |', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (37, 37), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (490, 490), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if ((off == 0 || offp) && M_LEADINGSPACE(n->m_next)((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001 ? ((!((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0008) && (!(((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001)) || (*((n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ref_cnt) == 1)) ) ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ext_buf : 0): (n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0002 ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_databuf : (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.M_databuf) >= hlen', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (896, 896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/ssse3-scaler.c', 'desc': 'Dereference of null pointer', 'code': 'if (y0 < 0) *(volatile char*)0 = 9;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &expf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2891, 2891), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'flags' results in a dereference of a null pointer (loaded from variable 'pExpr')", 'code': 'if( ExprHasProperty(pExpr,EP_Subquery)(((pExpr)->flags&(0x200000))!=0) ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (103237, 103237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'namedBlock->staticUse = true;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::lshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2343, 2343), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2714, 2714), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5998, 5998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] && (N--)>0 ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163349, 163349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (313, 313), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::mul(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2069, 2069), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_copy_propagation_elements.cpp', 'desc': 'Dereference of null pointer', 'code': 'if (rhs->var->data.mode == ir_var_shader_storage ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (704, 704), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_len')", 'code': '*icc_data_len = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (93, 93), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ResourcesHLSL.cpp', 'desc': 'Forming reference to null pointer', 'code': 'if (uniform->name == "angle_DrawID" && uniform->mappedName == "angle_DrawID")', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (158, 158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2706, 2706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1329, 1329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': 'Dereference of null pointer', 'code': 'nodes[0].length = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (665, 665), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Array access (from variable 'destination') results in a null pointer dereference", 'code': 'destination[len+j] = uprv_toupperuprv_toupper_67(s->entries[i][j]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &floorf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2823, 2823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1196, 1196), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Dereference of null pointer (loaded from variable 'phKey')", 'code': '*phKey = key->handle;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (8515, 8515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2750, 2750), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = open;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (422, 422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctputil.c', 'desc': "Access to field 'so_state' results in a dereference of a null pointer (loaded from field 'sctp_socket')", 'code': 'if (stcb->sctp_socket->so_state & SS_CANTRCVMORE0x020) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3768, 3768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getShaderStorageBlockRegister(shaderStorageBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateGlobalInitializer.cpp', 'desc': "Dereference of null pointer (loaded from variable 'warning')", 'code': '*warning = validate.issueWarning();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'count = min(m->m_len - off, len)((m->m_hdr.mh_len - off)>(len)?(len):(m->m_hdr.mh_len - off));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1235, 1235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Access to field 'si_code' results in a dereference of a null pointer (loaded from variable 'info')", 'code': 'if (nr != LINUX_SIGSYS31 || info->si_code != SYS_SECCOMP1 || !ctx ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (from variable 'new_id') results in a null pointer dereference", 'code': 'if (new_id[block_ids[i]] == kInvalidId) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (165, 165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (622, 622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1030, 1030), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::rshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2349, 2349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (970, 970), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdhuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5915, 5915), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (via field 'mt_spill_pgs') results in a null pointer dereference", 'code': 'if (x == txn->mt_spill_pgs[0])', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2386, 2386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/datefmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'UnicodeString result(patternPtr->fPattern);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (444, 444), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Access to field 'lock_count' results in a dereference of a null pointer (loaded from variable 'unscaled')", 'code': 'assert (unscaled->lock_count > 0)do { if (!(unscaled->lock_count > 0)) fprintf(stderr, "Assertion failed at %s:%d: %s\\n", "/home/edwjchen/gecko-dev/gfx/cairo/cairo/src/cairo-ft-font.c", 745, "unscaled->lock_count > 0"); } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (745, 745), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Dereference of null pointer (loaded from variable 's')", 'code': 'UChar c=*s;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nfdQCYesLimit')", 'code': 'if(*nfdQCYesLimit == 0) { return; }', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'num_array_elements' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'ub_array->num_array_elements);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (329, 329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'getTraceCategoryEnabledFlag' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'platform->getTraceCategoryEnabledFlag(platform, name);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (17, 17), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./command.h', 'desc': "Access to field 'insert_len_' results in a dereference of a null pointer (loaded from variable 'self')", 'code': 'self->insert_len_ = (uint32_t)insertlen;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'leftArray = Vectorize(*leftArray, rightType.getObjectSize());', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2042, 2042), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg == '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (534, 534), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &exp2f, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2904, 2904), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163398, 163398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_dead_builtin_varyings.cpp', 'desc': "Access to field 'ir' results in a dereference of a null pointer (loaded from field 'shader')", 'code': 'void *const ctx = shader->ir;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (285, 285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Access to field 'scaled_font_subset' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'for (i = 0; i < font->scaled_font_subset->num_glyphs; i++) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1059, 1059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/StructureHLSL.cpp', 'desc': "Dereference of null pointer (loaded from variable 'parameters')", 'code': 'for (auto parameter : *parameters)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (373, 373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'token' results in a dereference of a null pointer (loaded from variable 'node_a')", 'code': 'if (node_b == NULL((void*)0) && node_a->token->type == SPACE) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3466, 3466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Access to field 'es_shader' results in a dereference of a null pointer (loaded from variable 'state')", 'code': 'ir_print_glsl_visitor v (body, &gtracker, mode, state->es_shader, state);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_cursor.mc_xcursor = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7502, 7502), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Dereference of null pointer (loaded from variable 'fmtp_ptr')", 'code': "if (*fmtp_ptr == '\\n') {", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1391, 1391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &truncf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2827, 2827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': '*icc_data_ptr = NULL((void*)0); /* avoid confusion if FALSE return */', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/zydis/Zycore/List.c', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from variable 'node')", 'code': 'list->tail = node->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': 'jpeg_write_m_byte(cinfo, *icc_data_ptr);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'assert(op[1]->type->is_matrix())(static_cast <bool> (op[1]->type->is_matrix()) ? void (0) : __assert_fail ("op[1]->type->is_matrix()", "glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp", 413, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (413, 413), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jccoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (374, 374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': 'Dereference of undefined pointer value', 'code': 'rv = SECITEM_CopyItemSECITEM_CopyItem_Util(poolp, digest, dp[0]);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (252, 252), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[1]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (404, 404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': 'Dereference of undefined pointer value', 'code': 'type2_subset->widths = calloc (sizeof (int), font->scaled_font_subset->num_glyphs);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (824, 824), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jctrans.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (328, 328), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[0]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': 'Dereference of undefined pointer value', 'code': '*topleft_out = have_top ? dst_top[-1] : dst[-1];', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (195, 195), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdcoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (224, 224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': '', 'desc': 'Division by zero', 'code': 'return (a + align - 1) / align * align;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1353, 1353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrs.cpp', 'desc': 'Division by zero', 'code': 'return x / gcd * y;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jquant1.c', 'desc': 'Division by zero', 'code': 'return (int)(((JLONG)j * MAXJSAMPLE255 + maxj / 2) / maxj);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/zlib/src/gzwrite.c', 'desc': 'Division by zero', 'code': 'return len ? gz_writeMOZ_Z_gz_write(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/zlib/src/gzread.c', 'desc': 'Division by zero', 'code': 'return len ? gz_readMOZ_Z_gz_read(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (438, 438), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jquant2.c', 'desc': 'Division by zero', 'code': 'cinfo->colormap[0][icolor] = (JSAMPLE)((c0total + (total >> 1)) / total);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/ServoStyleConstsForwards.h', 'desc': 'Attempt to delete released memory', 'code': 'delete mRaw;', 'bug_type': 'Memory error', 'severity': 'Double delete', 'locs': (140, 140), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return font_face;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (3222, 3222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/Maybe.h', 'desc': 'Undefined or garbage value returned to caller', 'code': 'constexpr bool isSome() const { return mIsSome; }', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (278, 278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'control'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (940, 940), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Potential leak of memory pointed to by 'expr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (466, 466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 446); do { } while (false); do { *((volatile int*)__null) = 446; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (446, 446), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'nc'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "1", Foo::total_queries_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 335, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (335, 335), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestCOMPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(raw_foo1p, foo1p)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(raw_foo1p)) == 1)>::Compare("raw_foo1p", "foo1p", raw_foo1p, foo1p))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestCOMPtr.cpp", 312, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Potential leak of memory pointed to by 'new_trap_array'", 'code': 'trap_array_ = new_trap_array;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (352, 352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foo2P.mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP.mRawPtr'", 'code': 'RefPtr<Foo> fooP;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (339, 339), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 461); do { } while (false); do { *((volatile int*)__null) = 461; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (461, 461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': "Potential leak of memory pointed to by 'oldPtr'", 'code': '}', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': "Potential leak of memory pointed to by 'sa'", 'code': 'return (-1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (2142, 2142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo2p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (387, 387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p2)do { bool cond = !!(n1.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 464); do { } while (false); do { *((volatile int*)__null) = 464; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (464, 464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': "Potential leak of memory pointed to by 'x'", 'code': 'MOZ_RELEASE_ASSERT(IsRunning())do { static_assert( mozilla::detail::AssertionConditionType<decltype(IsRunning())>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(IsRunning()))), 0))) { MOZ_ReportAssertionFailure("IsRunning()", "/home/edwjchen/gecko-dev/memory/replace/dmd/test/SmokeDMD.cpp", 351); AnnotateMozCrashReason("MOZ_RELEASE_ASSERT" "(" "IsRunning()" ")"); do { *((volatile int*)__null) = 351; ::abort(); } while (false); } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (351, 351), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (201, 201), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> fooP(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (232, 232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_destructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_destructions_)) == 1)>::Compare("Foo::total_destructions_", "2", Foo::total_destructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 229, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (229, 229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsAppRunner.cpp', 'desc': "Potential leak of memory pointed to by 'canonArgs'", 'code': 'if (NS_FAILED(rv)((bool)(__builtin_expect(!!(NS_FAILED_impl(rv)), 0)))) return NS_ERROR_FAILURE;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4883, 4883), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP2.mRawPtr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p2)do { bool cond = !!(n2.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 128); do { } while (false); do { *((volatile int*)__null) = 128; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 129); do { } while (false); do { *((volatile int*)__null) = 129; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (129, 129), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Potential memory leak', 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (3215, 3215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo1p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (262, 262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_constructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_constructions_)) == 1)>::Compare("Foo::total_constructions_", "2", Foo::total_constructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 207, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "2", Foo::total_queries_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 341, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (341, 341), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 111); do { } while (false); do { *((volatile int*)__null) = 111; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (111, 111), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsEmbedFunctions.cpp', 'desc': 'Potential memory leak', 'code': 'rv = gDirServiceProvider->Initialize(aAppDirectory, aLibXULDirectory,', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/ots/tests/cff_charstring_test.cc', 'desc': "Potential leak of memory pointed to by 'local_subrs_index'", 'code': 'return false;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (134, 134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Bar::total_destructions_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Bar::total_destructions_)) == 1)>::Compare("Bar::total_destructions_", "1", Bar::total_destructions_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 253, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (253, 253), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo1p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libmar/src/mar_create.c', 'desc': "Potential leak of memory pointed to by 'stack.head'", 'code': 'fclose(fp);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (386, 386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': 'Size argument is greater than the length of the destination buffer', 'code': 'strncpy(cp, "../", 3);', 'bug_type': 'Logic error', 'severity': 'Out-of-bound array access', 'locs': (172, 172), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/client/crashreporter_gtk_common.cpp', 'desc': "Call to function 'vfork' is insecure as it can lead to denial of service situations in the parent process. Replace calls to vfork with calls to the safer 'posix_spawn' function", 'code': 'pid_t pID = vfork();', 'bug_type': 'Security', 'severity': "Potential insecure implementation-specific behavior in call 'vfork'", 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'assert( v!=(-2147483647-1) )((void) sizeof ((v!=(-2147483647-1)) ? 1 : 0), __extension__ ({ if (v!=(-2147483647-1)) ; else __assert_fail ("v!=(-2147483647-1)", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 100906, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (100906, 100906), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'k16[m - 1] = (int16_t)(tmp32[m] << 3); // Q12<<3 => Q15', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_decoder.c', 'desc': "The left operand of '*' is a garbage value", 'code': 'y[j*C] = SCALEOUT(SIG2WORD16(scratch[j*downsample]))(((scratch[j*downsample]))*(1/32768.f));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel4_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': "The right operand of '+' is a garbage value", 'code': 'hashCode = 37 * hashCode + blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (849, 849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel8_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (579, 579), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': "The left operand of '+' is a garbage value due to array index out of bounds", 'code': 'idx=(uint16_t)(indexes[--i]+1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1158, 1158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The right operand of '+' is a garbage value", 'code': 'if (isfinitef_(tf.a + tf.b + tf.c + tf.d + tf.e + tf.f + tf.g)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (149, 149), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (diff<<2)|count;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (919, 919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear4_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 4 + 1) * 4]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 4; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 4; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * tmp[x] + d * tmp[x + 4] + 4) >> 3; dst += dstride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (642, 642), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (330, 330), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (minorRevision > kMinorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel4_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (583, 583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'f[1] = MAX16(f[1], tmp)((f[1]) > (tmp) ? (f[1]) : (tmp));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1067, 1067), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'ref_coded_width[i] == f->cur.p.w &&', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3421, 3421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (fieldSet[i] != fieldSet[i - 1])', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unicode/unistr.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': '(int16_t)((fUnion.fFields.fLengthAndFlags & kAllStorageFlags) | (len << kLengthShift));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4542, 4542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if ((yyvsp[-3]) != 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1248, 1248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationweights.cpp', 'desc': "The result of the left shift is undefined due to shifting by '32', which is greater or equal to the width of type 'unsigned int'", 'code': 'return (uint32_t)(weight&(0xffffffff<<(8*(4-length))));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1278, 1278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear8_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 8 + 1) * 8]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 8; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 8; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * tmp[x] + d * tmp[x + 8] + 4) >> 3; dst += dstride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (641, 641), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel16_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (572, 572), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20530); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20530; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20528, 20528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The left operand of '&' is a garbage value", 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel8_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (576, 576), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (185, 185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (unscaled == NULL)(unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3214, 3214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestDoublyLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x.mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x.mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x.mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x.mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestDoublyLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "The left operand of '/' is a garbage value", 'code': 'ssize_t len = (ssize_t)(data.mv_size / sizeof(MDB_ID)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3267, 3267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'cost0 = importance[0]*abs(metric[0]-2*tf_select_table[LM][4*isTransient+2*sel+0]);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (676, 676), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel16_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (575, 575), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'temp2W32 = (R_hi[1] << 16) + (R_low[1] << 1); /* R[1] in Q31 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "The right operand of '>>' is a garbage value", 'code': 'keyUsage |= (0x80 >> value);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if ((yyvsp[-3]) == 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1280, 1280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel8_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "The right operand of '!=' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (8693, 8693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1054, 1054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 's->mv_bounds.mv_max.x = ((s->mb_width - 1) << 6) + MARGIN(16 << 2);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2287, 2287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The left operand of '*' is a garbage value", 'code': 'tf.e = tf.c*tf.d + tf.f', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1860, 1860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (sys_fstat(fd, &st) == -1 || st.st_size < 0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20434); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20434; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20432, 20432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/fdlibm/src/e_hypot.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'SET_HIGH_WORD(t1,high+(k<<20))do { ieee_double_shape_type sh_u; sh_u.value = (t1); sh_u.parts.msw = (high+(k<<20)); (t1) = sh_u.value; } while (0);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (xtraps[0].left.p1.y < xtraps[0].left.p2.y) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel16_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip_u8((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel4_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel8_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixel((mid_ptr[x] + intermediate_rnd) >>iclip((mid_ptr[x] + intermediate_rnd) >> intermediate_bits, 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'K_low = (int16_t)((temp3W32 - ((int32_t)K_hi << 16)) >> 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x->mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x->mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x->mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x->mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The right operand of '+' is a garbage value", 'code': 'memcpy(off + mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)), cp, (u_int)mlen);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1160, 1160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (cmp.lsu[0]==0) a->exponent=0; /* yes, exact 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (5813, 5813), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value due to array index out of bounds", 'code': 'while (mvd[j] == -1) j--;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (355, 355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(array[i] == static_cast<IntType2>(aBegin + i),do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aBegin + i))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aBegin + i)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aBegin + i)" " (" "Should iterate integers in [aBegin, aEnd) in order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 84); do { } while (false); do { *((volatile int*)__null) = 84; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (83, 83), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aEnd - i - 1))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aEnd - i - 1)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aEnd - i - 1)" " (" "Should iterate integers in [aBegin, aEnd) in reverse order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 105); do { } while (false); do { *((volatile int*)__null) = 105; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip_u8((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3108, 3108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/olsontz.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'return dst != 0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (603, 603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear16_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 16 + 1) * 16]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 16; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 16; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * tmp[x] + d * tmp[x + 16] + 4) >> 3; dst += dstride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-trap.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'e->x += n * e->stepx;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (*var1==0 && var1units==1) { /* residue is 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4622, 4622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixeliclip_u8((mid_ptr[x] + intermediate_rnd) >>', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The result of the left shift is undefined due to shifting by '2147483646', which is greater or equal to the width of type 'Bitmask'", 'code': 'Bitmask m = MASKBIT(i)(((Bitmask)1)<<(i)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (147769, 147769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (majorRevision != kMajorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'while (context->nextChar + len > AES_BLOCK_SIZE16) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collation.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (index << 13) | SPECIAL_CE32_LOW_BYTE | tag;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/pixdesc.c', 'desc': 'The result of the right shift is undefined because the right operand is negative', 'code': 'score -= (nb_components * 65536) >> FFMIN(dst_desc->comp[0].depth - 1, src_desc->comp[0].depth - 1)((dst_desc->comp[0].depth - 1) > (src_desc->comp[0].depth - 1) ? (src_desc->comp[0].depth - 1) : (dst_desc->comp[0].depth - 1));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2779, 2779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2788, 2788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rhigh << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (366, 366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1143, 1143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel4_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (577, 577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_pcb.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (net_tmp != NULL((void*)0) && stcb_tmp == stcb) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (7229, 7229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'float min_cost = (posdata->cost + ZopfliCostModelGetMinCostCmd(model) +', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (427, 427), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmaster.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (last_bitpos[ci][0] < 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/ssse3-scaler.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (line0->y != y0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (magicInt != mozilla::gfx::kMagicInt) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (50, 50), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (947, 947), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (status || unscaled == NULL)(status || unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3147, 3147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel16_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (581, 581), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/formattedvalue.cpp', 'desc': "Address of stack memory associated with local variable 'readOnlyAlias' returned to caller", 'code': 'return readOnlyAlias.getBuffer();', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (212, 212), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Address of stack memory associated with local variable 'zBase' returned to caller", 'code': 'return sqlite3StrAccumFinish(&out);', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (84759, 84759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/cmemory.h', 'desc': 'Returning null reference', 'code': 'T &operator[](ptrdiff_t i) const { return LocalPointerBase<T>::ptr[i]; }', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/usetiter.cpp', 'desc': 'Returning null reference', 'code': 'return *string;', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (147, 147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': 'Returning null reference', 'code': 'return localeCache[locid]; /*operating on NULL*/', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFFont.cpp', 'desc': 'Returning null reference', 'code': 'return *canon->fToUnicodeMap.set(id, std::move(buffer));', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (167, 167), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'dav1d_thread_picture_ref(out_delayed, &f->sr_cur);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3387, 3387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'setMatrixStride(node, storage, rowMajor);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (431, 431), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '4th function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->output,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2587, 2587), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->length_depths[lencode], code->length_bits[lencode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (764, 764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'tools/power/rapl.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'mPkg = new Domain("pkg", type);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1375, 1375), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'testing/mochitest/ssltunnel/ssltunnel.cpp', 'desc': '4th function call argument is an uninitialized value', 'code': '} else if (!ConfigureSSLServerSocket(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-display.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'xrender_format = XRenderFindStandardFormat (display->display,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (620, 620), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(o, caddr_t)((caddr_t)((o)->m_hdr.mh_data)), mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)) + off, hlen);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'do_equal_mat_mat(result, op[1], op[0],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (425, 425), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/bspatch/bspatch.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'ctrlsrc->x = ntohl(ctrlsrc->x);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearNoisyFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'rv = newFile->CreateAndKeepOpen(NORMAL_FILE_TYPE,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1706, 1706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '4th function call argument is an uninitialized value', 'code': 'm_copydata(m, off, len, mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (788, 788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'register_recv_cb(so, receive_cb);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1442, 1442), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtcSpl_FreeRealFFT(aecm->real_fft);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'DebugOnly<bool> result = journalQuotaObject->MaybeUpdateSize(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11322, 11322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->type_depths[typecode], code->type_bits[typecode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (759, 759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'errno(*__errno_location ()) = user_connect(so, sa);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2144, 2144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '3rd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'sqlite3_free(p->term.a);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (178889, 178889), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsGlobalWindowInner.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'msg.AppendInt(lineno);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (4882, 4882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode(0, (uint16_t)sorted[0]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (145, 145), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2204, 2204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '4th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'font_face = _cairo_ft_font_face_create (unscaled, &ft_options);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3299, 3299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)) + off, (u_int)n->m_lenm_hdr.mh_len);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1035, 1035), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': '1st function call argument is an uninitialized value', 'code': '*dst = composite_over_8888_0565pixel (*src, *dst);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (5863, 5863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'bool success = RecordedEvent::DoWithEvent(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': '12th function call argument is an uninitialized value', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (8009, 8009), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_scaled_glyph_set_surface (scaled_glyph,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2460, 2460), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memset(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), 0, MLEN((int)(256 - sizeof(struct m_hdr))));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1152, 1152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (392, 392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[2]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (78, 78), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'pixel_copy(top, dst_top, px_have)memcpy(top, dst_top, (px_have) << 1);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'GetBlockMemberInfoByType(node->getType(), storage, rowMajor).arrayStride;', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (429, 429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode((uint8_t)bits, (uint16_t)sorted[symbol++]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[3]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'expr(pack_opcode, result[i]),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'status = _cairo_hash_table_insert (dict, &op->base);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (515, 515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ustrenum.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return setChars(s, length, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'status = cairo_type1_font_generate (font, name);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (720, 720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': 'cairo_matrix_translate_moz_cairo_matrix_translate (&pdf_p2d, 0.0, height);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3383, 3383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->stream,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3026, 3026), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '5th function call argument is an uninitialized value', 'code': 'LOG(("TRR Resolve %s type %d\\n", typeRec->host.get(), (int)rectype));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1358, 1358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearCleanFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (542, 542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '5th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->outFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'result = quotaObject->MaybeUpdateSize(fileSize, /* aTruncate */ true);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11326, 11326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'trr = pushedTRR ? pushedTRR : new TRR(this, rec, rectype);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1361, 1361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/nsinstall.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'if (ftruncate(tofd, sb.st_size) < 0) fail("cannot truncate %s", toname);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (153, 153), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[1], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (393, 393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeDelayEstimator(aecm->delay_estimator);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->farendBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/Tokenizer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(0x80 | (aNumber & 0x7f));', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (632, 632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (3823, 3823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'browser/components/shell/nsGNOMEShellSearchProvider.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*aDst = *aSrc & 0xff00ff00;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (74, 74), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (2244, 2244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(aNumber);', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (635, 635), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/freebl/mpi/mpi.c', 'desc': 'Use of memory after it is freed', 'code': 's_mp_setz(DIGITS(mp)((mp)->dp), ALLOC(mp)((mp)->alloc));', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/base/nsCOMPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'T* get() const { return reinterpret_cast<T*>(mRawPtr); }', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (839, 839), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/gmock/gmock-spec-builders.h', 'desc': 'Use of memory after it is freed', 'code': 'return function_mocker_->AddNewExpectation(', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (chk->rec.data.rcv_flags & SCTP_DATA_FIRST_FRAG0x02) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (5489, 5489), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (SCTP_TSN_GT(control->sinfo_tsn, liste->tsn)(((control->sinfo_tsn < liste->tsn) && ((uint32_t)(liste->tsn - control->sinfo_tsn) > (1U<<31))) || ((control->sinfo_tsn > liste->tsn) && ((uint32_t)(control->sinfo_tsn - liste->tsn) < (1U<<31))))) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (2310, 2310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-list-private.h', 'desc': 'Use of memory after it is freed', 'code': '__cairo_list_del (entry->prev, entry->next);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'type_map': {'Unix API': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcEncoderInstance', which is incompatible with sizeof operand type 'IlbcEncoder'", 'code': '*iLBC_encinst=(IlbcEncoderInstance*)malloc(sizeof(IlbcEncoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722EncInst', which is incompatible with sizeof operand type 'G722EncoderState'", 'code': '*G722enc_inst=(G722EncInst*)malloc(sizeof(G722EncoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'Bigint', which is incompatible with sizeof operand type 'double'", 'code': 'rv = (Bigint*)MALLOCmalloc(len*sizeof(double));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_solid_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_solid_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (388, 388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = malloc(schemaAttrsCapacity * sizeof(CK_ATTRIBUTE));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2236, 2236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_radial_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_radial_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722DecInst', which is incompatible with sizeof operand type 'G722DecoderState'", 'code': '*G722dec_inst=(G722DecInst*)malloc(sizeof(G722DecoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_surface_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_surface_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (391, 391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcDecoderInstance', which is incompatible with sizeof operand type 'IlbcDecoder'", 'code': '*iLBC_decinst=(IlbcDecoderInstance*)malloc(sizeof(IlbcDecoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/decoders/nsPNGDecoder.cpp', 'desc': "Result of 'malloc' is converted to a pointer of type 'uint8_t', which is incompatible with sizeof operand type 'uint32_t'", 'code': 'static_cast<uint8_t*>(malloc(sizeof(uint32_t) * frameRect.Width()));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (725, 725), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'realloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = realloc(sdb_p->schemaAttrs,', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2249, 2249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_linear_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_linear_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (394, 394), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'API': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'qsort(tfeedback_decls, num_tfeedback_decls, sizeof(*tfeedback_decls),', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1464, 1464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(script, result.data(), std::min(reslen, scriptCapacity)):: memcpy(script, result.data(), std::min(reslen, scriptCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1254, 1254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'if (!(ep = readdir(dp))) fail("cannot find current directory");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_commands, commands, sizeof(Command) * num_commands);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1260, 1260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(self->data_, 0, sizeof(self->data_));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (19, 19), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str.data(), str.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, indexes, indexesLength * 4):: memcpy(dest, indexes, indexesLength * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/bprint.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_str, buf->str, buf->len + 1);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/metablock.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (max_num_blocks)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (max_num_blocks) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (max_num_blocks)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (367, 367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(country, result.data(), std::min(reslen, countryCapacity)):: memcpy(country, result.data(), std::min(reslen, countryCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1303, 1303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(GetSurfaceDataContext::GetBuffer(surfaceData) + bufLen, 0,', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7692, 7692), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGV, gv.data, gv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGX, gx.data, gx.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&p->zText[p->nChar], z, N);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (28919, 28919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'Could not parse from HTML', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (3876, 3876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(tag, out + length, taglen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1223, 1223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncat(destination,s->entries[i].data(), s->entries[i].length()):: strncat(destination, s->entries[i].data(), s->entries[i].length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcmp(reorderCodes, settings->reorderCodes, length * 4):: memcmp(reorderCodes, settings->reorderCodes,length * 4) == 0) {', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(language, result.data(), std::min(reslen, languageCapacity)):: memcpy(language, result.data(), std::min(reslen, languageCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1206, 1206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(lookup->addr, addr_ptr, addr_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (2732, 2732), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/avstring.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'av_bprint_append_data(&pbuf, pstr, strlen(pstr));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, settings->reorderCodes, length * 4):: memcpy(dest, settings->reorderCodes, length * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/include/private/SkMalloc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(dst,src,len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (122, 122), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(buf, context->macBuf, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (430, 430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/ssl/sslprimitive.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(label, labelPrefix, labelPrefixLen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (70, 70), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11mech.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(mech->data, iv.data, iv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1556, 1556), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest + start, src, limit - start):: memcpy(dest + start, src, limit - start);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, insert_len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, head_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strcat(destination, "_"):: strcat(destination, "_");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (362, 362), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/unum.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncpy(outBuf, sp.data(), sp.size()):: strncpy(outBuf, sp.data(), sp.size());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (454, 454), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/modutil/pk11.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'strcpy(buf, string);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(buffer, result.data(), result.length()):: memcpy(buffer, result.data(), result.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1604, 1604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkpwd.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'SHA1_Update(cx, (unsigned char *)pw, PORT_Strlen(pw)strlen(pw));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (109, 109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&mx->mx_db, NODEDATA(node)(void *)((char *)(node)->mn_data + (node)->mn_ksize), sizeof(MDB_db));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7530, 7530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mozglue/misc/Printf.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&pattern[1], dolPt, size_t(i));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'Logic error': [{'fname': 'intl/icu/source/i18n/dtitvinf.cpp', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '++skeletonFieldWidth[ch - PATTERN_CHAR_BASE];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unormcmp.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (332, 332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'n->m_flagsm_hdr.mh_flags |= M_EXT0x0001;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (968, 968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'M_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(256 - sizeof(struct m_hdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1399, 1399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/opt.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'char *av_uninit(parsed_key)parsed_key=parsed_key, *av_uninit(value)value=value;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1512, 1512), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1926, 1926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1478, 1478), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'VP8Frame *av_uninit(curframe)curframe=curframe, *prev_frame;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2623, 2623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'max <<= 1;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2353, 2353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'parser/expat/lib/xmltok.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*(*toP)++ = *utf8++;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1424, 1424), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '*t++ = 0;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (27, 27), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/x86/mpegaudiodsp.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'SUM8(MACS, suma[0], win + 32, in + 48){ suma[0]+=((win + 32)[0 * 64])*((in + 48)[0 * 64]); suma[0]+=((win + 32)[1 * 64])*((in + 48)[1 * 64]); suma[0]+=((win + 32)[2 * 64])*((in + 48)[2 * 64]); suma[0]+=((win + 32)[3 * 64])*((in + 48)[3 * 64]); suma[0]+=((win + 32)[4 * 64])*((in + 48)[4 * 64]); suma[0]+=((win + 32)[5 * 64])*((in + 48)[5 * 64]); suma[0]+=((win + 32)[6 * 64])*((in + 48)[6 * 64]); suma[0]+=((win + 32)[7 * 64])*((in + 48)[7 * 64]); };', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (146, 146), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1925, 1925), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ustrcase.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1756, 1756), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'uint32_t hashCode = blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (847, 847), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/qcms/iccread.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'float a = curve->parameter[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (482, 482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'expanded_src[i] = expanded_src[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (226, 226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'elements[i]=elementBases[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1169, 1169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1954, 1954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/imgconvert.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*loss_ptr = loss;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'env->me_psize = meta.mm_psizemm_dbs[0].md_pad;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (4400, 4400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (8718, 8718), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'imageDetails.stride() = stride;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (7519, 7519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, 0)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (0)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1380, 1380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 's=elements[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1162, 1162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/flacdec.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'unsigned av_uninit(a)a=a, av_uninit(b)b=b, av_uninit(c)c=c, av_uninit(d)d=d;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/stringtriebuilder.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'start=starts[unitNumber];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (183, 183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'frame->data[i] += offsets[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (937, 937), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (symLink) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1515, 1515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (specialFile) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmaster.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (!component_sent[ci])', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'int log2_align = offsets[i] ? ff_ctz(offsets[i])__builtin_ctz(offsets[i]) : INT_MAX2147483647;', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (921, 921), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (isSymLink || !S_ISDIR(mCachedStat.st_mode)((((mCachedStat.st_mode)) & 0170000) == (0040000))) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1033, 1033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/WrapSwitchStatementsInBlocks.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'EOpAssign, declaratorAsBinary->getLeft(), declaratorAsBinary->getRight());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1215, 1215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() == EvqConst ||(symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 67, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp" << ":" << 67 << "): " << "symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (66, 66), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacement.parent->replaceChildNode(replacement.original, replacement.replacement);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (524, 524), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(~operandArray[i].getUConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2687, 2687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packUnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2510, 2510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isInf(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2867, 2867), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (634, 634), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/ipc/PluginInstanceChild.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!(object = actor->GetObject(false))) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(gl::bitCast<int32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2872, 2872), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2991, 2991), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'unsigned int fieldIndex = static_cast<unsigned int>(constantUnion->getIConst(0));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (929, 929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TType *type = new TType(original->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName + "." + originalFieldName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (214, 214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = this->name;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (structure->symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = symbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2237, 2237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2948, 2948), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type->getBasicType() != EbtBool || !type->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackUnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2518, 2518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kDegreesToRadiansMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2697, 2697), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasUniformBlock(uniformBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbolNode->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (IsVaryingOut(declarator->getQualifier()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2232, 2232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (size_t index = 0; index < block->fields.size(); ++index)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/uspoof.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return result->asUSpoofChecker();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(definition->mType));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9204, 9204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() %', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2230, 2230), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TQualifier qualifier = declarator->getQualifier();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (240, 240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getBuiltInResourcesString();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (340, 340), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TConstantUnion *constantUnion = intermConstantUnion->getConstantValue();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rootBlock->insertChildNodes(0, insertions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(-operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(leftArray[i] != rightArray[i]);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2319, 2319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2653, 2653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'basicType = argConstant->getType().getBasicType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3084, 3084), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray < *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2355, 2355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'curNode->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ArrayReturnValueToOutParameter.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacementAssignment->setLine(expression->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &(compiler->getNameMap());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteStructSamplers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = asSymbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'UBool success = sub->doParse(subText, tempPP, _baseValue, upperBound,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1192, 1192), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderMaxVertices() >= 0;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'interfaceBlock->name = blockType->name().data();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (711, 711), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (left->isVector() && right->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2286, 2286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'c->remove();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1202, 1202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray > *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2367, 2367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == 0x80000000u)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2633, 2633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray < *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2373, 2373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->MimeType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (133, 133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->compile(shaderStrings, numStrings, compileOptions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue())(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 1458, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp" << ":" << 1458 << "): " << "symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1458, 1458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getReadonlyImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int iConst = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2807, 2807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] | rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2337, 2337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3012, 3012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&it);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (696, 696), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/FindMain.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBlock *mainBody = main->getBody();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (49, 49), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'mParametersVector->push_back(p);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/smpdtfmt.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'toAppend->isBogus()) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[col * matrixRows + matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2262, 2262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5603, 5603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (402, 402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (390, 390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(declarator->getAsSymbolNode() != nullptr ||(declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize) ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 875, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/IntermNode.cpp" << ":" << 875 << "): " << "declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize)"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (873, 873), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getShaderStorageBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->URL(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (127, 127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getNumViews();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (496, 496), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return node->getAsConstantUnion() != nullptr && node->getAsTyped()->getQualifier() == EvqConst;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (612, 612), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(position < parent->getChildCount())(position < parent->getChildCount() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 290, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp" << ":" << 290 << "): " << "position < parent->getChildCount()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const UnicodeString &rules = rbc->getRules();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (550, 550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2720, 2720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (cond->getQualifier() == EvqConst && trueExpression->getQualifier() == EvqConst &&', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2855, 2855), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RegenerateStructNames.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &type = symbol->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2837, 2837), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'firstDeclaration->shareParameters(*function);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/linker.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const unsigned slots = var->type->count_attribute_slots(target_index == MESA_SHADER_VERTEX);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2929, 2929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackSnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2557, 2557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2896, 2896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2656, 2656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'std::string varName = std::string(symNode->variable().name().data());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackSnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2499, 2499), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2954, 2954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInvocations();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (659, 659), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dom/bindings/TestCodeGenBinding.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!JS_GetPropertyById(cx, *object, atomsCache->c_id, temp.ptr())) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1411, 1411), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) >= 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2769, 2769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUsedImage2DFunctionNames();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (590, 590), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUniformRegisterMap();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (554, 554), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2923, 2923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] && rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2298, 2298), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return setFunctionCalled(function->uniqueId().get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (108, 108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackHalf2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2537, 2537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'node->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2936, 2936), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] ^ rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2332, 2332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rbc->getRules(delta, rules);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'InterfaceBlock *namedBlock = FindVariable(interfaceBlock->name(), infoList);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'elements.push_back(paramArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (126, 126), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'Calendar *c = (*shared)->clone();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (988, 988), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray > *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2361, 2361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() /', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2224, 2224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2882, 2882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getOutputType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2730, 2730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->DocType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kRadiansToDegreesMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2702, 2702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getShaderVersion();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'compiler->clearResults();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (initializedNode->isArray())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (48, 48), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packHalf2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (argTyped->getBasicType() == EbtStruct)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (810, 810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *interfaceIndexingNode = blockNode->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateSwitch.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'offsetNode = TIntermAggregate::CreateConstructor(texCoordNode->getType(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (114, 114), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] & rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2327, 2327), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveSwitchFallThrough.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&rm);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (argTyped->getMemoryQualifier().writeonly)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (733, 733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/third_party/compiler/ArrayBoundsClamper.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&clamper);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermTyped *argCopy = typedArg->deepCopy();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'bool replaced = replacement.parent->replaceChildNodeWithMultiple(replacement.original,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2672, 2672), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackUnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2566, 2566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float dividend = leftArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2112, 2112), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'result = rbc->internalGetLocaleID(type, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (594, 594), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (656, 656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermNode_util.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TOperator op = fn->getBuiltInOp();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (283, 283), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type.getBasicType() != EbtStruct && IsOpaqueType(argTyped->getBasicType()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (726, 726), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2911, 2911), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[i * leftRows + row].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2094, 2094), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2759, 2759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getComputeShaderLocalSize();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (leftArray[i] != rightArray[i])', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2383, 2383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'DateFormatSymbols *result = new DateFormatSymbols(shared->get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (256, 256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(abs(operandArray[i].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2783, 2783), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (originalArg->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'size_t dimensionalityFromElement = element->getType().getNumArraySizes() + 1u;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3577, 3577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ensureStructDefined(declarator->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2194, 2194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackUnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsRefreshDriver.cpp', 'desc': 'Called C++ object pointer is null', 'code': ': std::max(mActiveTimer->MostRecentRefresh(), mMostRecentRefresh);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1461, 1461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return (variable->getQualifier() == EvqTemporary || variable->getQualifier() == EvqGlobal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *arrayExpression = parent->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (275, 275), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(typeAtom));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9165, 9165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &interfaceType = interfaceNode->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (909, 909), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (const auto &field : block->fields())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!argument->isScalar() || argument->getBasicType() != EbtFloat)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(fabsf(operandArray[i].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2780, 2780), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return rbc->cloneBinary(buffer, capacity, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (75, 75), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&marker);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (141, 141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(~operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2684, 2684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3007, 3007), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1416, 1416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == std::numeric_limits<int>::min())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2618, 2618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float fConst = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2796, 2796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5678, 5678), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3034, 3034), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2996, 2996), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mReferencedShaderStorageBlocks.count(interfaceBlock->uniqueId().get()) == 0)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (491, 491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderOutputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/events/EventStateManager.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'nsCOMPtr<nsIContent> dragTarget = aDataTransfer->GetDragTarget();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2132, 2132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderOutputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (648, 648), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'static_cast<int>(operandArray[i].getUConst())));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2660, 2660), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getUniformBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (465, 465), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (constUnion->getType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'child->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'uprv_strncpy(typeBuffer, (*shared)->getType(), typeBufferSize):: strncpy(typeBuffer, (*shared)->getType(), typeBufferSize);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1027, 1027), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isNaN(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2862, 2862), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (601, 601), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackSnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2578, 2578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'varyings->push_back(info);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (293, 293), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int lhs = leftArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2169, 2169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Types.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(arrayDimension < mArraySizes->size())(arrayDimension < mArraySizes->size() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 698, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/Types.cpp" << ":" << 698 << "): " << "arrayDimension < mArraySizes->size()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (698, 698), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderInputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'falseExpression->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] || rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2308, 2308), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getUConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2887, 2887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*storage = interfaceBlock->blockStorage();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TFieldList &fields = structure ? structure->fields() : interfaceBlock->fields();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(gl::bitCast<uint32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2877, 2877), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (462, 462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packSnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2491, 2491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'add->setLine(texCoordNode->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_constant_propagation.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'param->accept(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (folded->getQualifier() == expression->getQualifier())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5059, 5059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasShaderStorageBlock(shaderStorageBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int intValue = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3022, 3022), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int maxVertices = compiler->getGeometryShaderMaxVertices();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (670, 670), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called function pointer is null (null dereference)', 'code': 'result->setFConst(builtinFunc(parameter.getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (3062, 3062), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (606, 606), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &ceilf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2849, 2849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': "Access to field 'd_ino' results in a dereference of a null pointer (loaded from variable 'ep')", 'code': 'if (ep->d_ino == ino) break;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Access to field 'type' results in a dereference of a null pointer (loaded from variable 'from')", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': "Access to field 'top_dict' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'status = cff_dict_set_operands (font->top_dict, ROS_OP0x0c1e, buf, p - buf);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1032, 1032), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1301, 1301), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mn_flags' results in a dereference of a null pointer (loaded from variable 'leaf')", 'code': 'if (F_ISSET(leaf->mn_flags, F_DUPDATA)(((leaf->mn_flags) & (0x04)) == (0x04))) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (6171, 6171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = name.length();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (850, 850), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_db.md_pad = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7537, 7537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'monotonicallyIncreasingTime' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'double timestamp = platform->monotonicallyIncreasingTime(platform);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/metablock.c', 'desc': "Array access (via field 'literal_context_map') results in a null pointer dereference", 'code': 'mb->literal_context_map[(i << BROTLI_LITERAL_CONTEXT_BITS6) + j] =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'is_function' results in a dereference of a null pointer (loaded from variable 'macro')", 'code': 'assert(macro->is_function)((void) sizeof ((macro->is_function) ? 1 : 0), __extension__ ({ if (macro->is_function) ; else __assert_fail ("macro->is_function", "src/compiler/glsl/glcpp/glcpp-parse.y", 1857, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4133, 4133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'array' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'type->fields.array->is_array() ? ub_array->array : NULL__null;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'parser/expat/lib/xmlparse.c', 'desc': "Array access (via field 'scaffIndex') results in a null pointer dereference", 'code': 'dtd->scaffIndex[dtd->scaffLevel] = myindex;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5023, 5023), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_blend_equation_advanced.cpp', 'desc': "Access to field 'swizzle' results in a dereference of a null pointer (loaded from variable 'slot0')", 'code': 'slot0->swizzle = SWIZZLE_XXXX(((0)<<0) | ((0)<<3) | ((0)<<6) | ((0)<<9));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/lib/basicutil.c', 'desc': 'Dereference of null pointer', 'code': 'optstatelong = longopts[optstate->longOptIndex].longOptName;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (570, 570), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (from variable 'mop') results in a null pointer dereference", 'code': 'save = mop[0];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3277, 3277), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::sub(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2060, 2060), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &asinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2754, 2754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'width')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Access to field 'grayscale_font' results in a dereference of a null pointer (loaded from variable 'font_private')", 'code': 'needs_font = !font_private->grayscale_font;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4722, 4722), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pWith' results in a dereference of a null pointer (loaded from variable 'pPrior')", 'code': 'assert( pPrior->pWith==0 )((void) sizeof ((pPrior->pWith==0) ? 1 : 0), __extension__ ({ if (pPrior->pWith==0) ; else __assert_fail ("pPrior->pWith==0", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 132654, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (132654, 132654), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &atanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2738, 2738), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libmar/src/mar_read.c', 'desc': "Access to field 'offset' results in a dereference of a null pointer (loaded from variable 'item')", 'code': 'if (mar_insert_offset(mar, item->offset, item->length) == 1) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': 'Dereference of null pointer', 'code': 'mem->pub.alloc_small = alloc_small;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::add(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2054, 2054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from field 'prev')", 'code': 'n->prev->next = replacement;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (203, 203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &roundf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2831, 2831), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Forming reference to null pointer', 'code': 'mSymbolTable->isStaticallyUsed(*static_cast<const TVariable *>(blockSymbol));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (727, 727), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (233, 233), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pRead' results in a dereference of a null pointer (loaded from variable 'pIter')", 'code': 'char *pRead = pIter->pRead;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (181982, 181982), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = fieldVar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (191, 191), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/repeated_field.cc', 'desc': "Access to field 'allocated_size' results in a dereference of a null pointer (loaded from field 'rep_')", 'code': '++rep_->allocated_size;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (115, 115), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &cosf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2710, 2710), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'z') results in a null pointer dereference", 'code': 'assert( z[0]==\'\\0\' && z>zRet )((void) sizeof ((z[0]==\'\\0\' && z>zRet) ? 1 : 0), __extension__ ({ if (z[0]==\'\\0\' && z>zRet) ; else __assert_fail ("z[0]==\'\\\\0\' && z>zRet", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 107178, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (107178, 107178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmarker.c', 'desc': "Access to field 'sent_table' results in a dereference of a null pointer (loaded from variable 'htbl')", 'code': 'if (!htbl->sent_table) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (205, 205), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getUniformBlockRegister(uniformBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2742, 2742), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Array access (via field 'data_') results in a null pointer dereference", 'code': '++self->data_[val];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (926, 926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (299, 299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &coshf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2746, 2746), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Array access (from variable 'label') results in a null pointer dereference", 'code': 'if(label[0]==0x2d) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (779, 779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=*src++;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (73, 73), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': "Array access (from variable 'digests') results in a null pointer dereference", 'code': 'digests[i] = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (600, 600), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'cachePtr' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'U_ASSERT(value->cachePtr == this)(static_cast <bool> (value->cachePtr == this) ? void (0) : __assert_fail ("value->cachePtr == this", "/home/edwjchen/gecko-dev/intl/icu/source/common/unifiedcache.cpp", 483, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'input_xoffset = *xoffset;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Forming reference to null pointer', 'code': 'stringSpan = new UnicodeSetStringSpan(*o.stringSpan, *strings);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = c;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'applyPattern(pattern, *parseError, status);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (518, 518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/get_bits.h', 'desc': "Access to field 'l' results in a dereference of a null pointer", 'code': 'UPDATE_CACHE(re, s)re_cache = av_bswap32((((const union unaligned_32 *) ((s)->buffer + (re_index >> 3)))->l)) << (re_index & 7);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if (m->m_flagsm_hdr.mh_flags & M_EXT0x0001) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (250, 250), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jchuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (254, 254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7encode.c', 'desc': "Access to field 'len' results in a dereference of a null pointer (loaded from field 'certList')", 'code': 'for (ci = 0; ci < signerinfo->certList->len; ci++)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (864, 864), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg != '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': "Dereference of null pointer (loaded from field 'yy_c_buf_p')", 'code': '*yyg->yy_c_buf_p = yyg->yy_hold_char;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4012, 4012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'ASSERT(namedBlock->staticUse)(namedBlock->staticUse ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 927, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp" << ":" << 927 << "): " << "namedBlock->staticUse"));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (927, 927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from variable 'hdr_ptr')", 'code': 'hdr_ptr->next = mem->large_list[pool_id];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFType1Font.cpp', 'desc': "Dereference of null pointer (loaded from variable 'size')", 'code': '*size = (size_t)buf[2] | ((size_t)buf[3] << 8) | ((size_t)buf[4] << 16) |', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (37, 37), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (490, 490), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if ((off == 0 || offp) && M_LEADINGSPACE(n->m_next)((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001 ? ((!((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0008) && (!(((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001)) || (*((n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ref_cnt) == 1)) ) ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ext_buf : 0): (n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0002 ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_databuf : (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.M_databuf) >= hlen', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (896, 896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/ssse3-scaler.c', 'desc': 'Dereference of null pointer', 'code': 'if (y0 < 0) *(volatile char*)0 = 9;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &expf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2891, 2891), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'flags' results in a dereference of a null pointer (loaded from variable 'pExpr')", 'code': 'if( ExprHasProperty(pExpr,EP_Subquery)(((pExpr)->flags&(0x200000))!=0) ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (103237, 103237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'namedBlock->staticUse = true;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::lshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2343, 2343), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2714, 2714), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5998, 5998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] && (N--)>0 ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163349, 163349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (313, 313), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::mul(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2069, 2069), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_copy_propagation_elements.cpp', 'desc': 'Dereference of null pointer', 'code': 'if (rhs->var->data.mode == ir_var_shader_storage ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (704, 704), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_len')", 'code': '*icc_data_len = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (93, 93), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ResourcesHLSL.cpp', 'desc': 'Forming reference to null pointer', 'code': 'if (uniform->name == "angle_DrawID" && uniform->mappedName == "angle_DrawID")', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (158, 158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2706, 2706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1329, 1329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': 'Dereference of null pointer', 'code': 'nodes[0].length = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (665, 665), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Array access (from variable 'destination') results in a null pointer dereference", 'code': 'destination[len+j] = uprv_toupperuprv_toupper_67(s->entries[i][j]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &floorf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2823, 2823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1196, 1196), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Dereference of null pointer (loaded from variable 'phKey')", 'code': '*phKey = key->handle;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (8515, 8515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2750, 2750), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = open;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (422, 422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctputil.c', 'desc': "Access to field 'so_state' results in a dereference of a null pointer (loaded from field 'sctp_socket')", 'code': 'if (stcb->sctp_socket->so_state & SS_CANTRCVMORE0x020) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3768, 3768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getShaderStorageBlockRegister(shaderStorageBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateGlobalInitializer.cpp', 'desc': "Dereference of null pointer (loaded from variable 'warning')", 'code': '*warning = validate.issueWarning();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'count = min(m->m_len - off, len)((m->m_hdr.mh_len - off)>(len)?(len):(m->m_hdr.mh_len - off));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1235, 1235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Access to field 'si_code' results in a dereference of a null pointer (loaded from variable 'info')", 'code': 'if (nr != LINUX_SIGSYS31 || info->si_code != SYS_SECCOMP1 || !ctx ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (from variable 'new_id') results in a null pointer dereference", 'code': 'if (new_id[block_ids[i]] == kInvalidId) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (165, 165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (622, 622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1030, 1030), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::rshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2349, 2349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (970, 970), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdhuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5915, 5915), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (via field 'mt_spill_pgs') results in a null pointer dereference", 'code': 'if (x == txn->mt_spill_pgs[0])', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2386, 2386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/datefmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'UnicodeString result(patternPtr->fPattern);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (444, 444), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Access to field 'lock_count' results in a dereference of a null pointer (loaded from variable 'unscaled')", 'code': 'assert (unscaled->lock_count > 0)do { if (!(unscaled->lock_count > 0)) fprintf(stderr, "Assertion failed at %s:%d: %s\\n", "/home/edwjchen/gecko-dev/gfx/cairo/cairo/src/cairo-ft-font.c", 745, "unscaled->lock_count > 0"); } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (745, 745), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Dereference of null pointer (loaded from variable 's')", 'code': 'UChar c=*s;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nfdQCYesLimit')", 'code': 'if(*nfdQCYesLimit == 0) { return; }', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'num_array_elements' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'ub_array->num_array_elements);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (329, 329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'getTraceCategoryEnabledFlag' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'platform->getTraceCategoryEnabledFlag(platform, name);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (17, 17), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./command.h', 'desc': "Access to field 'insert_len_' results in a dereference of a null pointer (loaded from variable 'self')", 'code': 'self->insert_len_ = (uint32_t)insertlen;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'leftArray = Vectorize(*leftArray, rightType.getObjectSize());', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2042, 2042), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg == '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (534, 534), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &exp2f, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2904, 2904), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163398, 163398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_dead_builtin_varyings.cpp', 'desc': "Access to field 'ir' results in a dereference of a null pointer (loaded from field 'shader')", 'code': 'void *const ctx = shader->ir;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (285, 285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Access to field 'scaled_font_subset' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'for (i = 0; i < font->scaled_font_subset->num_glyphs; i++) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1059, 1059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/StructureHLSL.cpp', 'desc': "Dereference of null pointer (loaded from variable 'parameters')", 'code': 'for (auto parameter : *parameters)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (373, 373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'token' results in a dereference of a null pointer (loaded from variable 'node_a')", 'code': 'if (node_b == NULL((void*)0) && node_a->token->type == SPACE) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3466, 3466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Access to field 'es_shader' results in a dereference of a null pointer (loaded from variable 'state')", 'code': 'ir_print_glsl_visitor v (body, &gtracker, mode, state->es_shader, state);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_cursor.mc_xcursor = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7502, 7502), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Dereference of null pointer (loaded from variable 'fmtp_ptr')", 'code': "if (*fmtp_ptr == '\\n') {", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1391, 1391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &truncf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2827, 2827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': '*icc_data_ptr = NULL((void*)0); /* avoid confusion if FALSE return */', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/zydis/Zycore/List.c', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from variable 'node')", 'code': 'list->tail = node->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': 'jpeg_write_m_byte(cinfo, *icc_data_ptr);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'assert(op[1]->type->is_matrix())(static_cast <bool> (op[1]->type->is_matrix()) ? void (0) : __assert_fail ("op[1]->type->is_matrix()", "glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp", 413, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (413, 413), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jccoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (374, 374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': 'Dereference of undefined pointer value', 'code': 'rv = SECITEM_CopyItemSECITEM_CopyItem_Util(poolp, digest, dp[0]);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (252, 252), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[1]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (404, 404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': 'Dereference of undefined pointer value', 'code': 'type2_subset->widths = calloc (sizeof (int), font->scaled_font_subset->num_glyphs);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (824, 824), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jctrans.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (328, 328), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[0]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': 'Dereference of undefined pointer value', 'code': '*topleft_out = have_top ? dst_top[-1] : dst[-1];', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (195, 195), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdcoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (224, 224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': '', 'desc': 'Division by zero', 'code': 'return (a + align - 1) / align * align;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1353, 1353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrs.cpp', 'desc': 'Division by zero', 'code': 'return x / gcd * y;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jquant1.c', 'desc': 'Division by zero', 'code': 'return (int)(((JLONG)j * MAXJSAMPLE255 + maxj / 2) / maxj);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/zlib/src/gzwrite.c', 'desc': 'Division by zero', 'code': 'return len ? gz_writeMOZ_Z_gz_write(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/zlib/src/gzread.c', 'desc': 'Division by zero', 'code': 'return len ? gz_readMOZ_Z_gz_read(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (438, 438), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jquant2.c', 'desc': 'Division by zero', 'code': 'cinfo->colormap[0][icolor] = (JSAMPLE)((c0total + (total >> 1)) / total);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return font_face;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (3222, 3222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/Maybe.h', 'desc': 'Undefined or garbage value returned to caller', 'code': 'constexpr bool isSome() const { return mIsSome; }', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (278, 278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': 'Size argument is greater than the length of the destination buffer', 'code': 'strncpy(cp, "../", 3);', 'bug_type': 'Logic error', 'severity': 'Out-of-bound array access', 'locs': (172, 172), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'assert( v!=(-2147483647-1) )((void) sizeof ((v!=(-2147483647-1)) ? 1 : 0), __extension__ ({ if (v!=(-2147483647-1)) ; else __assert_fail ("v!=(-2147483647-1)", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 100906, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (100906, 100906), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'k16[m - 1] = (int16_t)(tmp32[m] << 3); // Q12<<3 => Q15', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_decoder.c', 'desc': "The left operand of '*' is a garbage value", 'code': 'y[j*C] = SCALEOUT(SIG2WORD16(scratch[j*downsample]))(((scratch[j*downsample]))*(1/32768.f));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel4_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': "The right operand of '+' is a garbage value", 'code': 'hashCode = 37 * hashCode + blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (849, 849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel8_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (579, 579), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': "The left operand of '+' is a garbage value due to array index out of bounds", 'code': 'idx=(uint16_t)(indexes[--i]+1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1158, 1158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The right operand of '+' is a garbage value", 'code': 'if (isfinitef_(tf.a + tf.b + tf.c + tf.d + tf.e + tf.f + tf.g)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (149, 149), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (diff<<2)|count;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (919, 919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear4_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 4 + 1) * 4]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 4; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 4; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * tmp[x] + d * tmp[x + 4] + 4) >> 3; dst += dstride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (642, 642), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (330, 330), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (minorRevision > kMinorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel4_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (583, 583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'f[1] = MAX16(f[1], tmp)((f[1]) > (tmp) ? (f[1]) : (tmp));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1067, 1067), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'ref_coded_width[i] == f->cur.p.w &&', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3421, 3421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (fieldSet[i] != fieldSet[i - 1])', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unicode/unistr.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': '(int16_t)((fUnion.fFields.fLengthAndFlags & kAllStorageFlags) | (len << kLengthShift));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4542, 4542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if ((yyvsp[-3]) != 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1248, 1248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationweights.cpp', 'desc': "The result of the left shift is undefined due to shifting by '32', which is greater or equal to the width of type 'unsigned int'", 'code': 'return (uint32_t)(weight&(0xffffffff<<(8*(4-length))));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1278, 1278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear8_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 8 + 1) * 8]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 8; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 8; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * tmp[x] + d * tmp[x + 8] + 4) >> 3; dst += dstride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (641, 641), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel16_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (572, 572), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20530); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20530; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20528, 20528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The left operand of '&' is a garbage value", 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel8_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (576, 576), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (185, 185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (unscaled == NULL)(unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3214, 3214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestDoublyLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x.mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x.mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x.mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x.mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestDoublyLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "The left operand of '/' is a garbage value", 'code': 'ssize_t len = (ssize_t)(data.mv_size / sizeof(MDB_ID)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3267, 3267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'cost0 = importance[0]*abs(metric[0]-2*tf_select_table[LM][4*isTransient+2*sel+0]);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (676, 676), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel16_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (575, 575), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'temp2W32 = (R_hi[1] << 16) + (R_low[1] << 1); /* R[1] in Q31 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "The right operand of '>>' is a garbage value", 'code': 'keyUsage |= (0x80 >> value);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if ((yyvsp[-3]) == 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1280, 1280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel8_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "The right operand of '!=' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (8693, 8693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1054, 1054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 's->mv_bounds.mv_max.x = ((s->mb_width - 1) << 6) + MARGIN(16 << 2);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2287, 2287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The left operand of '*' is a garbage value", 'code': 'tf.e = tf.c*tf.d + tf.f', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1860, 1860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (sys_fstat(fd, &st) == -1 || st.st_size < 0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20434); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20434; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20432, 20432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/fdlibm/src/e_hypot.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'SET_HIGH_WORD(t1,high+(k<<20))do { ieee_double_shape_type sh_u; sh_u.value = (t1); sh_u.parts.msw = (high+(k<<20)); (t1) = sh_u.value; } while (0);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (xtraps[0].left.p1.y < xtraps[0].left.p2.y) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel16_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip_u8((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel4_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel8_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixel((mid_ptr[x] + intermediate_rnd) >>iclip((mid_ptr[x] + intermediate_rnd) >> intermediate_bits, 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'K_low = (int16_t)((temp3W32 - ((int32_t)K_hi << 16)) >> 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x->mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x->mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x->mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x->mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The right operand of '+' is a garbage value", 'code': 'memcpy(off + mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)), cp, (u_int)mlen);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1160, 1160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (cmp.lsu[0]==0) a->exponent=0; /* yes, exact 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (5813, 5813), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value due to array index out of bounds", 'code': 'while (mvd[j] == -1) j--;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (355, 355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(array[i] == static_cast<IntType2>(aBegin + i),do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aBegin + i))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aBegin + i)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aBegin + i)" " (" "Should iterate integers in [aBegin, aEnd) in order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 84); do { } while (false); do { *((volatile int*)__null) = 84; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (83, 83), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aEnd - i - 1))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aEnd - i - 1)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aEnd - i - 1)" " (" "Should iterate integers in [aBegin, aEnd) in reverse order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 105); do { } while (false); do { *((volatile int*)__null) = 105; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip_u8((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3108, 3108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/olsontz.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'return dst != 0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (603, 603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear16_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 16 + 1) * 16]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 16; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 16; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * tmp[x] + d * tmp[x + 16] + 4) >> 3; dst += dstride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-trap.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'e->x += n * e->stepx;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (*var1==0 && var1units==1) { /* residue is 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4622, 4622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixeliclip_u8((mid_ptr[x] + intermediate_rnd) >>', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The result of the left shift is undefined due to shifting by '2147483646', which is greater or equal to the width of type 'Bitmask'", 'code': 'Bitmask m = MASKBIT(i)(((Bitmask)1)<<(i)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (147769, 147769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (majorRevision != kMajorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'while (context->nextChar + len > AES_BLOCK_SIZE16) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collation.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (index << 13) | SPECIAL_CE32_LOW_BYTE | tag;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/pixdesc.c', 'desc': 'The result of the right shift is undefined because the right operand is negative', 'code': 'score -= (nb_components * 65536) >> FFMIN(dst_desc->comp[0].depth - 1, src_desc->comp[0].depth - 1)((dst_desc->comp[0].depth - 1) > (src_desc->comp[0].depth - 1) ? (src_desc->comp[0].depth - 1) : (dst_desc->comp[0].depth - 1));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2779, 2779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2788, 2788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rhigh << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (366, 366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1143, 1143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel4_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (577, 577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_pcb.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (net_tmp != NULL((void*)0) && stcb_tmp == stcb) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (7229, 7229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'float min_cost = (posdata->cost + ZopfliCostModelGetMinCostCmd(model) +', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (427, 427), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmaster.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (last_bitpos[ci][0] < 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/ssse3-scaler.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (line0->y != y0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (magicInt != mozilla::gfx::kMagicInt) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (50, 50), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (947, 947), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (status || unscaled == NULL)(status || unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3147, 3147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel16_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (581, 581), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/formattedvalue.cpp', 'desc': "Address of stack memory associated with local variable 'readOnlyAlias' returned to caller", 'code': 'return readOnlyAlias.getBuffer();', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (212, 212), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Address of stack memory associated with local variable 'zBase' returned to caller", 'code': 'return sqlite3StrAccumFinish(&out);', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (84759, 84759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/cmemory.h', 'desc': 'Returning null reference', 'code': 'T &operator[](ptrdiff_t i) const { return LocalPointerBase<T>::ptr[i]; }', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/usetiter.cpp', 'desc': 'Returning null reference', 'code': 'return *string;', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (147, 147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': 'Returning null reference', 'code': 'return localeCache[locid]; /*operating on NULL*/', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFFont.cpp', 'desc': 'Returning null reference', 'code': 'return *canon->fToUnicodeMap.set(id, std::move(buffer));', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (167, 167), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'dav1d_thread_picture_ref(out_delayed, &f->sr_cur);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3387, 3387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'setMatrixStride(node, storage, rowMajor);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (431, 431), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '4th function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->output,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2587, 2587), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->length_depths[lencode], code->length_bits[lencode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (764, 764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'tools/power/rapl.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'mPkg = new Domain("pkg", type);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1375, 1375), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'testing/mochitest/ssltunnel/ssltunnel.cpp', 'desc': '4th function call argument is an uninitialized value', 'code': '} else if (!ConfigureSSLServerSocket(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-display.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'xrender_format = XRenderFindStandardFormat (display->display,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (620, 620), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(o, caddr_t)((caddr_t)((o)->m_hdr.mh_data)), mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)) + off, hlen);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'do_equal_mat_mat(result, op[1], op[0],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (425, 425), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/bspatch/bspatch.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'ctrlsrc->x = ntohl(ctrlsrc->x);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearNoisyFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'rv = newFile->CreateAndKeepOpen(NORMAL_FILE_TYPE,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1706, 1706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '4th function call argument is an uninitialized value', 'code': 'm_copydata(m, off, len, mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (788, 788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'register_recv_cb(so, receive_cb);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1442, 1442), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtcSpl_FreeRealFFT(aecm->real_fft);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'DebugOnly<bool> result = journalQuotaObject->MaybeUpdateSize(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11322, 11322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->type_depths[typecode], code->type_bits[typecode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (759, 759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'errno(*__errno_location ()) = user_connect(so, sa);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2144, 2144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '3rd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'sqlite3_free(p->term.a);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (178889, 178889), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsGlobalWindowInner.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'msg.AppendInt(lineno);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (4882, 4882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode(0, (uint16_t)sorted[0]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (145, 145), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2204, 2204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '4th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'font_face = _cairo_ft_font_face_create (unscaled, &ft_options);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3299, 3299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)) + off, (u_int)n->m_lenm_hdr.mh_len);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1035, 1035), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': '1st function call argument is an uninitialized value', 'code': '*dst = composite_over_8888_0565pixel (*src, *dst);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (5863, 5863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'bool success = RecordedEvent::DoWithEvent(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': '12th function call argument is an uninitialized value', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (8009, 8009), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_scaled_glyph_set_surface (scaled_glyph,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2460, 2460), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memset(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), 0, MLEN((int)(256 - sizeof(struct m_hdr))));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1152, 1152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (392, 392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[2]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (78, 78), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'pixel_copy(top, dst_top, px_have)memcpy(top, dst_top, (px_have) << 1);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'GetBlockMemberInfoByType(node->getType(), storage, rowMajor).arrayStride;', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (429, 429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode((uint8_t)bits, (uint16_t)sorted[symbol++]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[3]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'expr(pack_opcode, result[i]),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'status = _cairo_hash_table_insert (dict, &op->base);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (515, 515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ustrenum.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return setChars(s, length, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'status = cairo_type1_font_generate (font, name);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (720, 720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': 'cairo_matrix_translate_moz_cairo_matrix_translate (&pdf_p2d, 0.0, height);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3383, 3383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->stream,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3026, 3026), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '5th function call argument is an uninitialized value', 'code': 'LOG(("TRR Resolve %s type %d\\n", typeRec->host.get(), (int)rectype));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1358, 1358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearCleanFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (542, 542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '5th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->outFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'result = quotaObject->MaybeUpdateSize(fileSize, /* aTruncate */ true);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11326, 11326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'trr = pushedTRR ? pushedTRR : new TRR(this, rec, rectype);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1361, 1361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/nsinstall.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'if (ftruncate(tofd, sb.st_size) < 0) fail("cannot truncate %s", toname);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (153, 153), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[1], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (393, 393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeDelayEstimator(aecm->delay_estimator);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->farendBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'Dead store': [{'fname': 'media/libsoundtouch/src/TDStretch.cpp', 'desc': "Value stored to 'bestCorr' is never read", 'code': 'bestCorr = -FLT_MAX3.40282347e+38F;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/modutil/install.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = PK11_INSTALL_UNSPECIFIED;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsencode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NSS_CMSEncoder_Cancel(p7ecx->childp7ecx); /* frees p7ecx->childp7ecx */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (663, 663), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/vr/ipc/VRManagerChild.cpp', 'desc': "Value stored to 'found' is never read", 'code': 'found = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("r1", frame_ppc->context.gpr[1], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'success' is never read", 'code': 'success = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1934, 1934), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, encrypt_p->encrypt_key, sizeof(encrypt_p->encrypt_key), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1046, 1046), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4019, 4019), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = l->action;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2119, 2119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (&pattern->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (964, 964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (549, 549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestFilePreferencesUnix.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = blacklistedFile->Create(nsIFile::NORMAL_FILE_TYPE, 0666);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'iface_type_name' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7927, 7927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/tzfmt.cpp', 'desc': "Value stored to 'numDigits' is never read", 'code': 'numDigits = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2131, 2131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (916, 916), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/mtransport/third_party/nICEr/src/stun/stun_codec.c', 'desc': "Value stored to 'padding_bytes' is never read", 'code': 'padding_bytes = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->unbounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/jar/jarsign.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7AddSigningTime(cinfo);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_longest_match_quickly_inc.h', 'desc': "Value stored to 'compare_char' is never read", 'code': 'compare_char = data[cur_ix_masked + best_len];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags.cc', 'desc': "Value stored to 'program_name' is never read", 'code': 'program_name = (program_name == NULL__null ? (*argv)[0] : program_name+1);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/imgutils.c', 'desc': "Value stored to 'dst_size' is never read", 'code': 'dst_size = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/RestyleManager.cpp', 'desc': "Value stored to 'frame' is never read", 'code': 'frame = content->GetPrimaryFrame();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1484, 1484), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (123, 123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (639, 639), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (307, 307), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/decoders/icon/nsIconURI.cpp', 'desc': "Value stored to 'foundInterface' is never read", 'code': 'foundInterface = static_cast<nsIURI*>(this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = GetString(arena, "Enter value for the authCertSerial field, "', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1133, 1133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font-subsets.c', 'desc': "Value stored to 'type1_font' is never read", 'code': 'type1_font = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (766, 766), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (102, 102), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset_props.cpp', 'desc': "Value stored to 'lastItem' is never read", 'code': 'lastItem = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (417, 417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/double-conversion-double-to-string.cpp', 'desc': "Value stored to 'fast_worked' is never read", 'code': 'fast_worked = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (435, 435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1901, 1901), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/tests/unit/tlsserver/lib/TLSServer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ReplyToRequest(&conn);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2217, 2217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3589, 3589), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3549, 3549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/webbrowserpersist/nsWebBrowserPersist.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dataDirParent->GetParent(getter_AddRefs(newDataDirParent));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1526, 1526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/base/nsAsyncRedirectVerifyHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = DelegateOnChannelRedirect(sink, mOldChan, mNewChan, mFlags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/harfbuzz/src/hb-ot-shape-complex-myanmar-machine.hh', 'desc': "Value stored to 'te' is never read", 'code': 'te = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'opaque' is never read", 'code': 'opaque = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1363, 1363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NULL_POINTER);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1418, 1418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' is never read", 'code': 'trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsCORSListenerProxy.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = http->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2505, 2505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (88, 88), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3543, 3543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/do_plc.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (279, 279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/find/nsFind.cpp', 'desc': "Value stored to 'prevChar' is never read", 'code': 'prevChar = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (236, 236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1764, 1764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/ValueNumbering.cpp', 'desc': "Value stored to 'def' is never read", 'code': 'def = rep;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (865, 865), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (string_array_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2052, 2052), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/sksl/SkSLByteCodeGenerator.cpp', 'desc': "Value stored to 'discard' is never read", 'code': 'discard = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3360, 3360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/fft.c', 'desc': "Value stored to 'ispan' is never read", 'code': 'ispan = kspan;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (485, 485), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prtime.c', 'desc': "Value stored to 'zone' is never read", 'code': 'zone = TT_GMT;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1669, 1669), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tempDirectory->AppendNative(tempDirName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediate_set' is never read", 'code': 'immediate_set = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (500, 500), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libpref/Preferences.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4006, 4006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, BEGIN_CMD, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1520, 1520), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (712, 712), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&clip_path->extents,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (503, 503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (630, 630), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2356, 2356), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/glslang_tab.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2223, 2223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteDWORD(cursor, msg.flags & NTLM_TYPE1_FLAGS(0x00000001 | 0x00000002 | 0x00000004 | 0x00000200 | 0x00008000 | 0x00080000));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSASN1Object.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = buildASN1ObjectFromDER(data, (len == 0) ? end : data + len,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (152, 152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1155, 1155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2240, 2240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/mediasource/MediaSourceDecoder.cpp', 'desc': "Value stored to 'checkedDuration' is never read", 'code': 'checkedDuration = INT64_MAX(9223372036854775807L) - 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (222, 222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3198, 3198), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/vp8_impl.cc', 'desc': "Value stored to 'img' is never read", 'code': 'img = vpx_codec_get_frame(decoder_, &iter);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1171, 1171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (596, 596), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceNameUTF8' is never read", 'code': 'deviceNameUTF8 = const_cast<char*>(kDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1279, 1279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, clone->base.status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (154, 154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'was_previous' is never read", 'code': 'was_previous = scaled_font == cr->gstate->previous_scaled_font;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3220, 3220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, sdp_p->owner_addr, sizeof(sdp_p->owner_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (202, 202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/auth/nsAuthGSSAPI.cpp', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = gss_display_status_ptr((gss_display_status_type)*gssFuncs[0].func)(&new_stat, maj_stat, GSS_C_GSS_CODE1,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (235, 235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-polygon.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_polygon_line_to (polygon, &polygon->first_point);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (480, 480), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2494, 2494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (surface->stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1006, 1006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "sslv3Used";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3410, 3410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pathops/SkPathOpsCommon.cpp', 'desc': "Value stored to 'segment' is never read", 'code': 'segment = angle->segment();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8525, 8525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_arm->context.iregs[15], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/rbbi.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1227, 1227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/pdf/SkPDFDevice.cpp', 'desc': "Value stored to 'pathIsMutable' is never read", 'code': 'pathIsMutable = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModePrecise0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Value stored to 'pdst' is never read", 'code': 'pdst = cdst->mc_pg[cdst->mc_top];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8079, 8079), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'uriloader/prefetch/nsOfflineCacheUpdate.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cache->Discard();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2051, 2051), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/decode.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (303, 303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("s7",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'startupcache/StartupCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(NS_ConvertUTF8toUTF16(env), false,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, conn_p->conn_addr, sizeof(conn_p->conn_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (530, 530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/usprep.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (531, 531), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2503, 2503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/vr/service/OpenVRSession.cpp', 'desc': "Value stored to 'hand' is never read", 'code': 'hand = dom::GamepadHand::_empty;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, timespec_p->stop_time, sizeof(timespec_p->stop_time), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (890, 890), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12e.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7EncoderFinish(innerP7ecx, p12ecx->p12exp->pwfn,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1815, 1815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1793, 1793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_parser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2135, 2135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_USER_PROFILE_LOCAL_50_DIR"ProfLD",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2156, 2156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (267, 267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1504, 1504), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=rhs->bits; /* be clean */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3943, 3943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _get_source_surface_size (source, &surface_entry->width,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1185, 1185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsDocumentViewer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = InitPresentationStuff(mDocument->MayStartLayout());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2176, 2176), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1154, 1154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/pp.c', 'desc': "Value stored to 'search_start' is never read", 'code': 'search_start = shader;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1040, 1040), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/x86_disasm.c', 'desc': "Value stored to 'next_addr' is never read", 'code': 'next_addr = -1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9123, 9123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.cc', 'desc': "Value stored to 'targetEnergy' is never read", 'code': 'targetEnergy = dec_used_energy_;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_truetype_font_set_error (font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (319, 319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/layers/apz/src/AsyncPanZoomController.cpp', 'desc': "Value stored to 'needContentRepaint' is never read", 'code': 'needContentRepaint = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4681, 4681), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModeImprecise1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1109, 1109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'num_charstrings' is never read", 'code': 'num_charstrings = strtol (p, &glyph_count_end, 10);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1039, 1039), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (364, 364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numbreak' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4312, 4312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'separator' is never read", 'code': 'separator = field[0] = fullName;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(scriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Value stored to 'noOfLostFrames' is never read", 'code': '(void)(noOfLostFrames = 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (276, 276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_rsid' is never read", 'code': 'has_rsid = packet.GetExtension<RtpStreamId>(&packet_rsid);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3131, 3131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.kekRecipientInfo.encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'type' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5858, 5858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/printing/nsPrintJob.cpp', 'desc': "Value stored to 'remotePrintJobListening' is never read", 'code': 'remotePrintJobListening = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1513, 1513), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/debugger/Debugger.cpp', 'desc': "Value stored to 'dbg' is never read", 'code': 'dbg = next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3858, 3858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pdf_operators_flush (&surface->pdf_operators);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3784, 3784), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': "Value stored to 'hasRealData' is never read", 'code': 'hasRealData = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (740, 740), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7decode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CERT_SaveSMimeProfile(cert, profile, encoded_stime);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1707, 1707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'err' is never read", 'code': 'err = NPN_GetURL(npp, "about:blank", frame);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (593, 593), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/FaviconHelpers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = stmt->GetInt32(0, &width);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (433, 433), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/ogg/OggDemuxer.cpp', 'desc': "Value stored to 'mustBackoff' is never read", 'code': 'mustBackoff = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1989, 1989), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scan_converter_set_error (converter, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_NewFrameTraversal(getter_AddRefs(frameTraversal),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8633, 8633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (273, 273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = aBoxSizes;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (685, 685), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = PR_SUCCESS;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (789, 789), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'var_mode' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7926, 7926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_EncryptUpdate(context->session, random, sizeof(random), out, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (808, 808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92154, 92154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (668, 668), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/putil.cpp', 'desc': "Value stored to 'sizeFileRead' is never read", 'code': 'sizeFileRead = fread(tzInfo->defaultTZBuffer, 1, tzInfo->defaultTZFileSize, tzInfo->defaultTZFilePtr);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (923, 923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'res' is never read", 'code': 'res = in.Read(buf, 2);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (652, 652), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1119, 1119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/Realm.cpp', 'desc': "Value stored to 'obj' is never read", 'code': 'obj = SetNewObjectMetadata(cx_, obj);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (827, 827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceUniqueIdUTF8' is never read", 'code': 'deviceUniqueIdUTF8 = const_cast<char*>(kUniqueDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (30, 30), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (null_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4434, 4434), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/filteredbrk.cpp', 'desc': "Value stored to 'uch' is never read", 'code': 'uch = utext_next32utext_next32_67(fText.getAlias());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (274, 274), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1366, 1366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'nummap' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4209, 4209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': "Value stored to 'samplingFreq' is never read", 'code': 'samplingFreq = 8000;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStringStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (43, 43), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'len' is never read", 'code': 'len = wav.Read(&_wavFormatObj, sizeof(WAVE_FMTINFO_header));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (118, 118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3632, 3632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/CodeGenerator.cpp', 'desc': "Value stored to 'op' is never read", 'code': 'op = JSOp::Eq;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8886, 8886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/number_utils.cpp', 'desc': "Value stored to 'patternKey' is never read", 'code': 'patternKey = "decimalFormat"; // silence compiler error', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'widget/gtk/nsGtkKeyUtils.cpp', 'desc': "Value stored to 'handlingState' is never read", 'code': 'handlingState = KeyHandlingState::eNotHandledButEventDispatched;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1494, 1494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheStorageService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CacheEntry::HashingKey(contextKey, aIdExtension, aURI, fileKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1646, 1646), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_DecryptUpdate(context->session, (CK_BYTE_PTR)in, sizeof(random), random, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (815, 815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 16;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2810, 2810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_span_renderer_set_error (renderer, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (707, 707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=1; /* show have a unit .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4643, 4643), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11skey.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = slot->wrapMechanism;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (378, 378), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/harfbuzz/src/hb-ot-layout-gsub-table.hh', 'desc': "Value stored to 'count' is never read", 'code': 'count = substitute.len;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1187, 1187), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/freebl/mpi/montmulf.c', 'desc': "Value stored to 't' is never read", 'code': 't = (a >> 32);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (107, 107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2118, 2118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (282, 282), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (525, 525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = LaunchUIAction(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsXREDirProvider.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tmp;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_bind_text(stmt, 1, id, PORT_Strlen(id)strlen(id), SQLITE_STATIC((sqlite3_destructor_type)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1687, 1687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'dataFound' is never read", 'code': 'dataFound = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1437, 1437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'chrome/nsChromeProtocolHandler.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = url->GetPathQueryRef(path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'result' is never read", 'code': 'result = SDP_INVALID_TOKEN_ORDERING;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1141, 1141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_MATRIX);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1170, 1170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3352, 3352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/BaselineBailouts.cpp', 'desc': "Value stored to 'prevFramePtr' is never read", 'code': 'prevFramePtr = builder.virtualPointerAtStackOffset(0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1197, 1197), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'inTransaction' is never read", 'code': 'inTransaction = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2324, 2324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2863, 2863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/nsinstall.c', 'desc': "Value stored to 'tdlen' is never read", 'code': 'tdlen = strlen(todir);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-user-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (291, 291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/utils/SkPolyUtils.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex = currIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (211, 211), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3583, 3583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12d.c', 'desc': "Value stored to 'setNickname' is never read", 'code': 'setNickname = PR_FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2248, 2248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5075, 5075), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ProcessRawBytes(&extension->value, extvalue, false);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1393, 1393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/cache/Manager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = db::GetKnownBodyIds(aConn, knownBodyIdList);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1203, 1203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_search.c', 'desc': "Value stored to 'range' is never read", 'code': 'range = WebRtcIlbcfix_kSearchRange[block][stage];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (241, 241), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = extents.width == 0 || extents.height == 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2318, 2318), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = SQLITE_OK0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (69536, 69536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (953, 953), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/neteq/neteq_impl.cc', 'desc': "Value stored to 'num_output_samples' is never read", 'code': 'num_output_samples = AudioFrame::kMaxDataSizeSamples;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (986, 986), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3164, 3164), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (613, 613), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidout,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3693, 3693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (618, 618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sftkdb_CheckPasswordNull(handle, &tokenRemoved);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4135, 4135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xul/nsXULPrototypeCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = PutPrototype(newProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3113, 3113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9346, 9346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/ycbcr/yuv_convert.cpp', 'desc': "Value stored to 'source_dy' is never read", 'code': 'source_dy = original_dx;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (426, 426), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'best_i' is never read", 'code': 'best_i = i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (807, 807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("efl", frame_x86->context.eflags, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (311, 311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/notification/Notification.cpp', 'desc': "Value stored to 'blocked' is never read", 'code': 'blocked = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (528, 528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1096, 1096), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (553, 553), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "weakCryptoUsed";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1144, 1144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1057, 1057), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'D' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (755, 755), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=D2U(accdigits)((accdigits)<=49?d2utable[accdigits]:((accdigits)+1 -1)/1); /* and recalculate the units for copy */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4803, 4803), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = showResponse->Init(aRequestId, responseStatus, EmptyString(), nullptr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnv_io.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_clip_apply_clip_path (clip, path->prev);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/stsearch.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3619, 3619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libsoundtouch/src/RateTransposer.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = pTransposer->transpose(outputBuffer, inputBuffer);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (143, 143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (960, 960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1943, 1943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(absolutePath, false, getter_AddRefs(location));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocRootFrame' is never read", 'code': 'subdocRootFrame = frame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-toy-font-face.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (432, 432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11slot.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(slot)((CK_FUNCTION_LIST_3_0_PTR)((slot)->functionList))->C_SeedRandom(slot->session,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1404, 1404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_sparc->context.pc, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (368, 368), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_a_scan(scanptr, 0, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-device.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_device_set_error (device, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'comma' is never read", 'code': 'comma = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1273, 1273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=lhs->bits; /* .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3907, 3907), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3224, 3224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteSecBuf(cursor, 0, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (381, 381), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/encoder/OpusTrackEncoder.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStorageStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (150, 150), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsDocumentEncoder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = EncodeToString(buf);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1217, 1217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (586, 586), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1118, 1118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_function.cpp', 'desc': "Value stored to 'ir' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (363, 363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1998, 1998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_scans(scanptr, ncomps, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/cryptohi/secvfy.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sec_DecodeRSAPSSParams(&tmpArena.arena, param,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (584, 584), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = srtp_auth_update(session_keys->rtp_auth, (uint8_t *)auth_start,(((session_keys->rtp_auth)->type)->update((session_keys->rtp_auth)->state, ((uint8_t *)auth_start), (*pkt_octet_len - tag_len - mki_size)))', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2605, 2605), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/nsNavHistory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aRow->GetString(kGetInfoIndex_ItemTags, tags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (532, 532), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1430, 1430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, cmd, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1598, 1598), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'storage/mozStorageConnection.cpp', 'desc': "Value stored to 'srv' is never read", 'code': 'srv = ::sqlite3_close(aNativeConnection);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1073, 1073), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'prevSecondary' is never read", 'code': 'prevSecondary = s;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (509, 509), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aParentDir->Clone(getter_AddRefs(tempDirectory));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (564, 564), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'image/test/gtest/TestAnimationFrameBuffer.cpp', 'desc': "Value stored to 'restartDecoder' is never read", 'code': 'restartDecoder = buffer.MarkComplete(IntRect(0, 0, 1, 1));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, port, sizeof(port), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1364, 1364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (451, 451), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, filePath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (885, 885), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (546, 546), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1194, 1194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2103, 2103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6055, 6055), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11obj.c', 'desc': "Value stored to 'nextObject' is never read", 'code': 'nextObject = objects->next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1615, 1615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'ter' is never read", 'code': 'ter = CollationFastLatin::COMMON_TER;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (510, 510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_confid,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3734, 3734), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.keyAgreeRecipientInfo.recipientEncryptedKeys[subIndex]->encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (surface, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3125, 3125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = currentBox;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (688, 688), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (&surface->base, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (684, 684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/string/nsSubstring.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = mRefCount.load(std::memory_order_acquire);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (933, 933), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3256, 3256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/websocket/WebSocketChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mHttpChannel->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2550, 2550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/opt.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1337, 1337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1912, 1912), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/md/unix/uxshm.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = PR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c', 'desc': "Value stored to 'totalStreamLen' is never read", 'code': 'totalStreamLen = streamLenLB;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-recording-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1107, 1107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'ccp' is never read", 'code': '= (char const *const *) p;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (22, 22), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsFocusManager.cpp', 'desc': "Value stored to 'startFrame' is never read", 'code': 'startFrame = newCaretFrame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2960, 2960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("rip", frame_amd64->context.rip, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1103, 1103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'rtp_xtn_hdr_keylen' is never read", 'code': 'rtp_xtn_hdr_keylen = rtp_keylen;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1050, 1050), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_type1_font_subset_fini (&font);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1392, 1392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (852, 852), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'sourceIndex' is never read", 'code': 'sourceIndex=nextSourceIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1049, 1049), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/glue/mozHunspell.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewNativeLocalFile(extDictPath, true, getter_AddRefs(dictDir));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (239, 239), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocView' is never read", 'code': 'subdocView = nextView;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (619, 619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1456, 1456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'encalgtag' is never read", 'code': 'encalgtag = SECOID_GetAlgorithmTagSECOID_GetAlgorithmTag_Util(&(ri->ri.kekRecipientInfo.keyEncAlg));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri), true);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (188, 188), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mTrashDirEnumerator->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.subnet.addr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2435, 2435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/base/nsInputStreamPump.cpp', 'desc': "Value stored to 'nextState' is never read", 'code': 'nextState = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (437, 437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': "Value stored to 'length' is never read", 'code': 'length = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1733, 1733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'glyph_array' is never read", 'code': 'glyph_array = &(range_offset[num_segments]);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1220, 1220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 8;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2808, 2808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/pitch_estimator_c.c', 'desc': "Value stored to 'x' is never read", 'code': 'x = in + PITCH_MAX_LAG140 / 2 + 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnv_bld.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/forms/nsDateTimeControlFrame.cpp', 'desc': "Value stored to 'contentBoxBSize' is never read", 'code': 'contentBoxBSize = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (116, 116), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), "\\r\\n", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4462, 4462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (730, 730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'error_emitted' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5332, 5332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2369, 2369), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/base/PluginFinder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = nssPKIObject_AddInstance(node->object, instance);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (769, 769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/RangeAnalysis.cpp', 'desc': "Value stored to 'first' is never read", 'code': 'first = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_forceAttribute(key, CKA_VALUE0x00000011UL, okm, keySize);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6914, 6914), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (216, 216), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/lowpbe.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_DSC_COMMENT);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/util/sha1/sha1.c', 'desc': "Value stored to 'a' is never read", 'code': 'a = b = c = d = e = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &sampled_area);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2291, 2291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (463, 463), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/normalizer2impl.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset=nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2657, 2657), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3537, 3537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1134, 1134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92244, 92244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidin,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3653, 3653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2540, 2540), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "Value stored to 'stab' is never read", 'code': 'stab=WebRtcSpl_LevinsonW32_JSK(corrlo2QQ, a_LOQ11, k_vecloQ15, 8);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (821, 821), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (399, 399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_CACHE_PARENT_DIR"cachePDir",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1311, 1311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/udata.cpp', 'desc': "Value stored to 'didUpdate' is never read", 'code': 'didUpdate = /* no longer using this result */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (860, 860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->bounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1428, 1428), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileContextEvictor.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dirEnum->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (347, 347), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/utext.cpp', 'desc': "Value stored to 'limit32' is never read", 'code': 'limit32 = si;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2547, 2547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/base/nsPluginHost.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/wrappers/WrapperFactory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = wn->GetScriptable()->PreCreate(wn->Native(), cx, currentScope,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (296, 296), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_AddAttributeType(key, CKA_NSS_PQG_COUNTER((0x80000000UL | 0x4E534350) + 20),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4154, 4154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/mtransport/third_party/nICEr/src/ice/ice_candidate_pair.c', 'desc': "Value stored to '_status' is never read", 'code': '_status=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'startPos' is never read", 'code': 'startPos = curLoc;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2402, 2402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/presentation/PresentationService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = enumerator->GetNext(getter_AddRefs(isupports));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (683, 683), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = Store16(dst, offset, y_max);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/bsf.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (310, 310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'valid' is never read", 'code': 'valid = PR_TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/base/strings/safe_sprintf.cc', 'desc': "Value stored to 'padding' is never read", 'code': 'padding = max_padding;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'C' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (754, 754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (405, 405), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/core/SkPath.cpp', 'desc': "Value stored to 'verb' is never read", 'code': 'verb = kDone_Verb; // stop the loop', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1898, 1898), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/breakpad-client/linux/minidump_writer/cpu_set.h', 'desc': "Value stored to 'item_len' is never read", 'code': 'item_len = static_cast<size_t>(item_next - item);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Value stored to 'size' is never read", 'code': 'size = 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'curElem' is never read", 'code': 'curElem = curElem->next.getAlias();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2043, 2043), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numdefcpd' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4106, 4106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediateSet' is never read", 'code': 'immediateSet = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (538, 538), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/smooth.c', 'desc': "Value stored to 'w00' is never read", 'code': 'w00 = w10 = w11 = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (47, 47), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-gstate.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1514, 1514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/number_modifiers.cpp', 'desc': "Value stored to 'infixLength' is never read", 'code': 'infixLength = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (535, 535), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_ASN1DecodeItemSEC_ASN1DecodeItem_Util(pfx->poolp, asafe,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/reputationservice/ApplicationReputation.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mQuery->GetRedirects(getter_AddRefs(redirects));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1417, 1417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'ipc/testshell/XPCShellEnvironment.cpp', 'desc': "Value stored to 'ok' is never read", 'code': 'ok = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (302, 302), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3595, 3595), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_mem_energy.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (65, 65), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3119, 3119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'productUniqueIdUTF8' is never read", 'code': 'productUniqueIdUTF8 = const_cast<char*>(kProductUniqueId);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (parent_surface, &extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (709, 709), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.msid.appdata,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5008, 5008), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1142, 1142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/nsUrlClassifierUtils.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = Base64Decode(prefix, prefixBinary);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (505, 505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1012, 1012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (778, 778), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'lengthInfix' is never read", 'code': 'lengthInfix += mod.apply(string, UPRV_INDEX_0(lengthPrefix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/jitter_buffer.cc', 'desc': "Value stored to 'dropped_frames' is never read", 'code': 'dropped_frames += decodable_frames_.RecycleFramesUntilKeyFrame(', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1161, 1161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/frontend/BytecodeEmitter.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += ENVCOORD_SLOT_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (978, 978), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (334, 334), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (793, 793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (876, 876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'pPtr' is never read", 'code': 'memcpy(pPtr, "-wal", 4); pPtr += 4 + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (56322, 56322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (812, 812), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 's' is never read", 'code': 's += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4799, 4799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (445, 445), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1528, 1528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (830, 830), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4798, 4798), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/debugger/Script.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1137, 1137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (819, 819), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_base64.c', 'desc': "Value stored to 'line_count' is never read", 'code': 'line_count += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (206, 206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2421, 2421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (811, 811), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/simulcast_rate_allocator.cc', 'desc': "Value stored to 'left_to_allocate' is never read", 'code': 'left_to_allocate -= allocation;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'npc' is never read", 'code': 'npc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3059, 3059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libvorbis/lib/vorbis_floor1.c', 'desc': "Value stored to 'y2b' is never read", 'code': 'y2b+= *y1 * *y1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (487, 487), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestSTLWrappers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv += v.at(1) ? 1 : 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4800, 4800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/security/SRICheck.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset += sizeof(mHashLength);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (498, 498), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2163, 2163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (800, 800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'size' is never read", 'code': 'size += ksize + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-bits-image.c', 'desc': "Value stored to 'x' is never read", 'code': 'x += w;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1262, 1262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/enh_upsample.c', 'desc': "Value stored to 'pu11' is never read", 'code': 'pu11+=ENH_UPS04;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/tdcache.c', 'desc': "Value stored to 'added' is never read", 'code': 'added += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (782, 782), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (785, 785), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags_completions.cc', 'desc': "Value stored to 'lines_so_far' is never read", 'code': 'lines_so_far += group.SizeInLines();', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3459, 3459), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcdctmgr.c', 'desc': "Value stored to 'val' is never read", 'code': 'val <<= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/md/unix/uxrng.c', 'desc': "Value stored to 'size' is never read", 'code': 'size -= s;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/rtp_rtcp/source/rtp_utility.cc', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'length2' is never read", 'code': 'length2 += micros2.modOuter->apply(string, UPRV_INDEX_2(lengthPrefix + length1 + lengthInfix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3458, 3458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (796, 796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libtheora/lib/decode.c', 'desc': "Value stored to 'zzi' is never read", 'code': 'zzi=OC_MINI(zzi,64)((zzi)+((64)-(zzi)&-((64)<(zzi))));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1578, 1578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (287, 287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex += len;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1402, 1402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Value stored to 'variantSize' is never read", 'code': 'variantSize += posixVariantSize;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1674, 1674), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/digital_agc.c', 'desc': "Value stored to 'zeroGainLvl' is never read", 'code': 'zeroGainLvl += (analogTarget - digCompGaindB + kSoftLimiterLeft);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (101, 101), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/svg/SVGTextFrame.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'uint32_t end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4768, 4768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/jit/MIR.cpp', 'desc': "Value stored to 'ret' during its initialization is never read", 'code': 'double ret = JS::GenericNaN();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (104, 104), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/antitracking/URLDecorationStripper.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Preferences::GetString(kPrefName, tokenList);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (28, 28), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/reporting/ReportDeliver.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = NS_NewCStringInputStream(getter_AddRefs(streamBody), body);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLOperators.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/PublicKeyPinningService.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = FindPinningInformation(hostname, time, originAttributes,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (220, 220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aDatabaseFile->GetLeafName(filename);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (887, 887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5083, 5083), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/RsdparsaSdpAttributeList.cpp', 'desc': "Value stored to '[codec, defaults]' during its initialization is never read", 'code': 'auto [codec, defaults] = strToCodecType(name);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (702, 702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' during its initialization is never read", 'code': 'nscoord trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (297, 297), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = mMainConn->ExecuteSimpleSQL(NS_LITERAL_CSTRING(static_cast<const nsLiteralCString&>(nsLiteralCString("" "UPDATE moz_places " "SET url = IFNULL(\'place:tag=\' || ( " "SELECT title FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT) " "), url) " "WHERE url_hash BETWEEN hash(\'place\', \'prefix_lo\') AND " "hash(\'place\', \'prefix_hi\') " "AND url LIKE \'%type=7%\' " "AND EXISTS(SELECT 1 FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT)) "))', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2033, 2033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrameSelection.cpp', 'desc': "Value stored to 'tHint' during its initialization is never read", 'code': 'CaretAssociateHint tHint(mCaret.mHint); // temporary variable so we dont set', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (774, 774), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/ia32_insn.c', 'desc': "Value stored to 'op' during its initialization is never read", 'code': "unsigned char *next, op = buf[0]; /* byte value -- 'opcode' */", 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'last' during its initialization is never read", 'code': 'char16_t* last = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (380, 380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constCStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1974, 1974), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': "Value stored to 'subEnd' during its initialization is never read", 'code': 'int32_t subEnd = subStart;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (477, 477), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'caps/ExpandedPrincipal.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aStream->Read32(&version);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_cpu_info' during its initialization is never read", 'code': 'bool has_cpu_info = GetCPUInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (97, 97), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/presentation/PresentationSessionInfo.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = UNWRAP_OBJECT(Element, &obj, frame)mozilla::dom::binding_detail::UnwrapObjectWithCrossOriginAsserts< mozilla::dom::prototypes::id::Element, mozilla::dom::Element_Binding::NativeType>(&obj, frame);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1482, 1482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5557, 5557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': "Value stored to 'uniqueId' during its initialization is never read", 'code': 'int uniqueId = mUniqueId.get();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (59, 59), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'f' during its initialization is never read", 'code': 'const Dav1dFrameContext *const f = t->f;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2398, 2398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'ppFrom' during its initialization is never read", 'code': 'Index **ppFrom = &pTab->pIndex;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (113070, 113070), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_process_create_time' during its initialization is never read", 'code': 'bool has_process_create_time =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_os_info' during its initialization is never read", 'code': 'bool has_os_info = GetOSInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'foo' during its initialization is never read", 'code': 'foo = res_ninit__res_ninit(&_res(*__res_state()));', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (13, 13), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/strutil.cc', 'desc': "Value stored to 'hex_start' during its initialization is never read", 'code': 'const char *hex_start = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'ref' during its initialization is never read", 'code': 'const struct mv ref = b->mv[0];', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Value stored to 'is_lod' during its initialization is never read", 'code': 'const bool is_lod = (ir->op == ir_txl);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'dst_offset' during its initialization is never read", 'code': 'uint64_t dst_offset = first_table_offset;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1177, 1177), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Value stored to 'name' during its initialization is never read", 'code': 'const char *name = this->var_name;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1338, 1338), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'const char* end = begin;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (708, 708), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/src/core/SkConvolver.cpp', 'desc': "Value stored to 'filterValues' during its initialization is never read", 'code': 'const SkConvolutionFilter1D::ConvolutionFixed* filterValues =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/src/mozEnglishWordUtils.cpp', 'desc': "Value stored to 'startWord' during its initialization is never read", 'code': 'const char16_t* startWord = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (46, 46), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constArrRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (863, 863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{string};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1964, 1964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prnetdb.c', 'desc': "Value stored to 'md_af' during its initialization is never read", 'code': 'PRUint16 md_af = addr->raw.family;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2390, 2390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = intercepted->Init(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (10132, 10132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'clip_extents' during its initialization is never read", 'code': 'const cairo_rectangle_int_t *clip_extents = &clip_path->extents;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2243, 2243), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/TunnelUtils.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Flush(count, countRead);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1323, 1323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/js/src/conftest.c', 'desc': "Value stored to 'cs' during its initialization is never read", 'code': 'cs = nl_langinfo(CODESETCODESET);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5, 5), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_mid' during its initialization is never read", 'code': 'bool has_mid = packet.GetExtension<RtpMid>(&packet_mid);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmoFrame.cpp', 'desc': "Value stored to 'embellishAncestor' during its initialization is never read", 'code': 'nsIFrame* embellishAncestor = this;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{cstring};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1980, 1980), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/base/nsBidiPresUtils.cpp', 'desc': "Value stored to 'dir' during its initialization is never read", 'code': 'nsBidiDirection dir = aBidiEngine->GetVisualRun(i, &start, &length);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2183, 2183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'high_word' during its initialization is never read", 'code': 'uint32_t high_word = in_word;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5588, 5588), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/MediaManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = docURI->GetHost(host);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2388, 2388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2226, 2226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'tools/profiler/core/VTuneProfiler.cpp', 'desc': "Value stored to 'testEvent' during its initialization is never read", 'code': '__itt_event testEvent =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/tables/nsTableFrame.cpp', 'desc': "Value stored to 'rg' during its initialization is never read", 'code': 'nsTableRowGroupFrame* rg = mRowGroup;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4422, 4422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] = createBufferAndData<FillContents::Uninitialized>(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1257, 1257), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{arr};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFlexContainerFrame.cpp', 'desc': "Value stored to '[maxBlockEndEdgeOfChildren, areChildrenComplete]' during its initialization is never read", 'code': 'const auto [maxBlockEndEdgeOfChildren, areChildrenComplete] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4452, 4452), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'Memory error': [{'fname': 'obj-ff-dbg/dist/include/mozilla/ServoStyleConstsForwards.h', 'desc': 'Attempt to delete released memory', 'code': 'delete mRaw;', 'bug_type': 'Memory error', 'severity': 'Double delete', 'locs': (140, 140), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'control'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (940, 940), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Potential leak of memory pointed to by 'expr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (466, 466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 446); do { } while (false); do { *((volatile int*)__null) = 446; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (446, 446), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'nc'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "1", Foo::total_queries_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 335, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (335, 335), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestCOMPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(raw_foo1p, foo1p)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(raw_foo1p)) == 1)>::Compare("raw_foo1p", "foo1p", raw_foo1p, foo1p))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestCOMPtr.cpp", 312, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Potential leak of memory pointed to by 'new_trap_array'", 'code': 'trap_array_ = new_trap_array;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (352, 352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foo2P.mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP.mRawPtr'", 'code': 'RefPtr<Foo> fooP;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (339, 339), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 461); do { } while (false); do { *((volatile int*)__null) = 461; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (461, 461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': "Potential leak of memory pointed to by 'oldPtr'", 'code': '}', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': "Potential leak of memory pointed to by 'sa'", 'code': 'return (-1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (2142, 2142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo2p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (387, 387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p2)do { bool cond = !!(n1.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 464); do { } while (false); do { *((volatile int*)__null) = 464; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (464, 464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': "Potential leak of memory pointed to by 'x'", 'code': 'MOZ_RELEASE_ASSERT(IsRunning())do { static_assert( mozilla::detail::AssertionConditionType<decltype(IsRunning())>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(IsRunning()))), 0))) { MOZ_ReportAssertionFailure("IsRunning()", "/home/edwjchen/gecko-dev/memory/replace/dmd/test/SmokeDMD.cpp", 351); AnnotateMozCrashReason("MOZ_RELEASE_ASSERT" "(" "IsRunning()" ")"); do { *((volatile int*)__null) = 351; ::abort(); } while (false); } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (351, 351), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (201, 201), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> fooP(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (232, 232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_destructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_destructions_)) == 1)>::Compare("Foo::total_destructions_", "2", Foo::total_destructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 229, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (229, 229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsAppRunner.cpp', 'desc': "Potential leak of memory pointed to by 'canonArgs'", 'code': 'if (NS_FAILED(rv)((bool)(__builtin_expect(!!(NS_FAILED_impl(rv)), 0)))) return NS_ERROR_FAILURE;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4883, 4883), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP2.mRawPtr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p2)do { bool cond = !!(n2.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 128); do { } while (false); do { *((volatile int*)__null) = 128; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 129); do { } while (false); do { *((volatile int*)__null) = 129; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (129, 129), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Potential memory leak', 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (3215, 3215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo1p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (262, 262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_constructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_constructions_)) == 1)>::Compare("Foo::total_constructions_", "2", Foo::total_constructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 207, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "2", Foo::total_queries_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 341, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (341, 341), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 111); do { } while (false); do { *((volatile int*)__null) = 111; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (111, 111), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/xre/nsEmbedFunctions.cpp', 'desc': 'Potential memory leak', 'code': 'rv = gDirServiceProvider->Initialize(aAppDirectory, aLibXULDirectory,', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/ots/tests/cff_charstring_test.cc', 'desc': "Potential leak of memory pointed to by 'local_subrs_index'", 'code': 'return false;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (134, 134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Bar::total_destructions_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Bar::total_destructions_)) == 1)>::Compare("Bar::total_destructions_", "1", Bar::total_destructions_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 253, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (253, 253), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo1p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/libmar/src/mar_create.c', 'desc': "Potential leak of memory pointed to by 'stack.head'", 'code': 'fclose(fp);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (386, 386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/Tokenizer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(0x80 | (aNumber & 0x7f));', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (632, 632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (3823, 3823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'browser/components/shell/nsGNOMEShellSearchProvider.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*aDst = *aSrc & 0xff00ff00;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (74, 74), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (2244, 2244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(aNumber);', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (635, 635), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/freebl/mpi/mpi.c', 'desc': 'Use of memory after it is freed', 'code': 's_mp_setz(DIGITS(mp)((mp)->dp), ALLOC(mp)((mp)->alloc));', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/base/nsCOMPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'T* get() const { return reinterpret_cast<T*>(mRawPtr); }', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (839, 839), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/gmock/gmock-spec-builders.h', 'desc': 'Use of memory after it is freed', 'code': 'return function_mocker_->AddNewExpectation(', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (chk->rec.data.rcv_flags & SCTP_DATA_FIRST_FRAG0x02) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (5489, 5489), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (SCTP_TSN_GT(control->sinfo_tsn, liste->tsn)(((control->sinfo_tsn < liste->tsn) && ((uint32_t)(liste->tsn - control->sinfo_tsn) > (1U<<31))) || ((control->sinfo_tsn > liste->tsn) && ((uint32_t)(control->sinfo_tsn - liste->tsn) < (1U<<31))))) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (2310, 2310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-list-private.h', 'desc': 'Use of memory after it is freed', 'code': '__cairo_list_del (entry->prev, entry->next);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'Security': [{'fname': 'toolkit/crashreporter/client/crashreporter_gtk_common.cpp', 'desc': "Call to function 'vfork' is insecure as it can lead to denial of service situations in the parent process. Replace calls to vfork with calls to the safer 'posix_spawn' function", 'code': 'pid_t pID = vfork();', 'bug_type': 'Security', 'severity': "Potential insecure implementation-specific behavior in call 'vfork'", 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}]}, 'file_map': {'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcEncoderInstance', which is incompatible with sizeof operand type 'IlbcEncoder'", 'code': '*iLBC_encinst=(IlbcEncoderInstance*)malloc(sizeof(IlbcEncoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'IlbcDecoderInstance', which is incompatible with sizeof operand type 'IlbcDecoder'", 'code': '*iLBC_decinst=(IlbcDecoderInstance*)malloc(sizeof(IlbcDecoder));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/ilbc.c', 'desc': "Value stored to 'noOfLostFrames' is never read", 'code': '(void)(noOfLostFrames = 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (276, 276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722EncInst', which is incompatible with sizeof operand type 'G722EncoderState'", 'code': '*G722enc_inst=(G722EncInst*)malloc(sizeof(G722EncoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_interface.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'G722DecInst', which is incompatible with sizeof operand type 'G722DecoderState'", 'code': '*G722dec_inst=(G722DecInst*)malloc(sizeof(G722DecoderState));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/pr/src/misc/prdtoa.c': [{'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'Bigint', which is incompatible with sizeof operand type 'double'", 'code': 'rv = (Bigint*)MALLOCmalloc(len*sizeof(double));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2356, 2356), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/pr/src/misc/prdtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2421, 2421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-pattern.c': [{'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_solid_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_solid_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (388, 388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_radial_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_radial_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_surface_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_surface_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (391, 391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'cairo_pattern_t', which is incompatible with sizeof operand type 'cairo_linear_pattern_t'", 'code': 'pattern = malloc (sizeof (cairo_linear_pattern_t));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (394, 394), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (&pattern->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (964, 964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'opaque' is never read", 'code': 'opaque = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1363, 1363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1155, 1155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = extents.width == 0 || extents.height == 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2318, 2318), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &sampled_area);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2291, 2291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pattern.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pattern_set_error (pattern, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/sdb.c': [{'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'malloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = malloc(schemaAttrsCapacity * sizeof(CK_ATTRIBUTE));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2236, 2236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Result of 'realloc' is converted to a pointer of type 'CK_ATTRIBUTE_TYPE', which is incompatible with sizeof operand type 'CK_ATTRIBUTE'", 'code': 'sdb_p->schemaAttrs = realloc(sdb_p->schemaAttrs,', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (2249, 2249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, BEGIN_CMD, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1520, 1520), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_bind_text(stmt, 1, id, PORT_Strlen(id)strlen(id), SQLITE_STATIC((sqlite3_destructor_type)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1687, 1687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'inTransaction' is never read", 'code': 'inTransaction = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2324, 2324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (553, 553), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_prepare_v2(sqlDB, cmd, -1, &stmt, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1598, 1598), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sdb.c', 'desc': "Value stored to 'sqlerr' is never read", 'code': 'sqlerr = sqlite3_exec(sqlDB, newStr, NULL((void*)0), 0, NULL((void*)0));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (535, 535), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'image/decoders/nsPNGDecoder.cpp': [{'fname': 'image/decoders/nsPNGDecoder.cpp', 'desc': "Result of 'malloc' is converted to a pointer of type 'uint8_t', which is incompatible with sizeof operand type 'uint32_t'", 'code': 'static_cast<uint8_t*>(malloc(sizeof(uint32_t) * frameRect.Width()));', 'bug_type': 'Unix API', 'severity': 'Allocator sizeof operand mismatch', 'locs': (725, 725), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'qsort(tfeedback_decls, num_tfeedback_decls, sizeof(*tfeedback_decls),', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1464, 1464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_varyings.cpp', 'desc': "Value stored to 'name' during its initialization is never read", 'code': 'const char *name = this->var_name;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1338, 1338), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/./block_splitter_inc.h': [{'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint8_t,{ if (split->types_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->types_alloc_size == 0) ? (split->num_blocks + 1) : split->types_alloc_size; uint8_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint8_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint8_t))) : ((void*)0)); if (!(!!0) && split->types_alloc_size != 0) memcpy(new_array, split->types, split->types_alloc_size * sizeof(uint8_t)); { BrotliFree(((m)), (split->types)); split->types = ((void*)0); }; split->types = new_array; split->types_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (split->num_blocks + 1)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (split->num_blocks + 1) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (split->num_blocks + 1)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'lengths') results in a null pointer dereference", 'code': 'split->lengths[split->num_blocks] = (uint32_t)length;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (from variable 'new_id') results in a null pointer dereference", 'code': 'if (new_id[block_ids[i]] == kInvalidId) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (165, 165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./block_splitter_inc.h', 'desc': "Array access (via field 'types') results in a null pointer dereference", 'code': 'split->types[split->num_blocks] = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/uloc.cpp': [{'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(script, result.data(), std::min(reslen, scriptCapacity)):: memcpy(script, result.data(), std::min(reslen, scriptCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1254, 1254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(country, result.data(), std::min(reslen, countryCapacity)):: memcpy(country, result.data(), std::min(reslen, countryCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1303, 1303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(language, result.data(), std::min(reslen, languageCapacity)):: memcpy(language, result.data(), std::min(reslen, languageCapacity));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1206, 1206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uloc.cpp', 'desc': "Value stored to 'variantSize' is never read", 'code': 'variantSize += posixVariantSize;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1674, 1674), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'config/pathsub.c': [{'fname': 'config/pathsub.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'if (!(ep = readdir(dp))) fail("cannot find current directory");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': "Access to field 'd_ino' results in a dereference of a null pointer (loaded from variable 'ep')", 'code': 'if (ep->d_ino == ino) break;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/pathsub.c', 'desc': 'Size argument is greater than the length of the destination buffer', 'code': 'strncpy(cp, "../", 3);', 'bug_type': 'Logic error', 'severity': 'Out-of-bound array access', 'locs': (172, 172), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/encode.c': [{'fname': 'modules/brotli/enc/encode.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_commands, commands, sizeof(Command) * num_commands);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1260, 1260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1301, 1301), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/encode.c', 'desc': "Array access (from variable 'storage') results in a null pointer dereference", 'code': 'storage[0] = (uint8_t)last_bytes;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1329, 1329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/./histogram_inc.h': [{'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(self->data_, 0, sizeof(self->data_));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (19, 19), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/./histogram_inc.h', 'desc': "Array access (via field 'data_') results in a null pointer dereference", 'code': '++self->data_[val];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str.data(), str.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (21, 21), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(mData + mPos, str, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.cpp', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = c;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/collationdatawriter.cpp': [{'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, indexes, indexesLength * 4):: memcpy(dest, indexes, indexesLength * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationdatawriter.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest + start, src, limit - start):: memcpy(dest + start, src, limit - start);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/bprint.c': [{'fname': 'media/ffvpx/libavutil/bprint.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(new_str, buf->str, buf->len + 1);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/metablock.c': [{'fname': 'modules/brotli/enc/metablock.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'BROTLI_ENSURE_CAPACITY(m, uint32_t,{ if (split->lengths_alloc_size < (max_num_blocks)) { size_t _new_size = (split->lengths_alloc_size == 0) ? (max_num_blocks) : split->lengths_alloc_size; uint32_t* new_array; while (_new_size < (max_num_blocks)) _new_size *= 2; new_array = ((_new_size) > 0 ? ((uint32_t*)BrotliAllocate(((m)), (_new_size) * sizeof(uint32_t))) : ((void*)0)); if (!(!!0) && split->lengths_alloc_size != 0) memcpy(new_array, split->lengths, split->lengths_alloc_size * sizeof(uint32_t)); { BrotliFree(((m)), (split->lengths)); split->lengths = ((void*)0); }; split->lengths = new_array; split->lengths_alloc_size = _new_size; } }', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (367, 367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/metablock.c', 'desc': "Array access (via field 'literal_context_map') results in a null pointer dereference", 'code': 'mb->literal_context_map[(i << BROTLI_LITERAL_CONTEXT_BITS6) + j] =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/nsContentUtils.cpp': [{'fname': 'dom/base/nsContentUtils.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memset(GetSurfaceDataContext::GetBuffer(surfaceData) + bufLen, 0,', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7692, 7692), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'imageDetails.stride() = stride;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (7519, 7519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(definition->mType));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9204, 9204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentUtils.cpp', 'desc': 'Called C++ object pointer is null', 'code': '(*aResult)->SetCustomElementData(new CustomElementData(typeAtom));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (9165, 9165), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/jpakesftk.c': [{'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGV, gv.data, gv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (54, 54), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(out->pGX, gx.data, gx.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (53, 53), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/jpakesftk.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = CKR_HOST_MEMORY0x00000002UL;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (150, 150), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/sqlite3/src/sqlite3.c': [{'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&p->zText[p->nChar], z, N);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (28919, 28919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92154, 92154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = SQLITE_OK0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (69536, 69536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'res' is never read", 'code': 'res = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (92244, 92244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'pPtr' is never read", 'code': 'memcpy(pPtr, "-wal", 4); pPtr += 4 + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (56322, 56322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Value stored to 'ppFrom' during its initialization is never read", 'code': 'Index **ppFrom = &pTab->pIndex;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (113070, 113070), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pWith' results in a dereference of a null pointer (loaded from variable 'pPrior')", 'code': 'assert( pPrior->pWith==0 )((void) sizeof ((pPrior->pWith==0) ? 1 : 0), __extension__ ({ if (pPrior->pWith==0) ; else __assert_fail ("pPrior->pWith==0", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 132654, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (132654, 132654), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'pRead' results in a dereference of a null pointer (loaded from variable 'pIter')", 'code': 'char *pRead = pIter->pRead;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (181982, 181982), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'z') results in a null pointer dereference", 'code': 'assert( z[0]==\'\\0\' && z>zRet )((void) sizeof ((z[0]==\'\\0\' && z>zRet) ? 1 : 0), __extension__ ({ if (z[0]==\'\\0\' && z>zRet) ; else __assert_fail ("z[0]==\'\\\\0\' && z>zRet", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 107178, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (107178, 107178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Access to field 'flags' results in a dereference of a null pointer (loaded from variable 'pExpr')", 'code': 'if( ExprHasProperty(pExpr,EP_Subquery)(((pExpr)->flags&(0x200000))!=0) ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (103237, 103237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] && (N--)>0 ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163349, 163349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Array access (from variable 'zFilename') results in a null pointer dereference", 'code': 'while( zFilename[0] ){', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (163398, 163398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'assert( v!=(-2147483647-1) )((void) sizeof ((v!=(-2147483647-1)) ? 1 : 0), __extension__ ({ if (v!=(-2147483647-1)) ; else __assert_fail ("v!=(-2147483647-1)", "/home/edwjchen/gecko-dev/third_party/sqlite3/src/sqlite3.c", 100906, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (100906, 100906), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "The result of the left shift is undefined due to shifting by '2147483646', which is greater or equal to the width of type 'Bitmask'", 'code': 'Bitmask m = MASKBIT(i)(((Bitmask)1)<<(i)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (147769, 147769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': "Address of stack memory associated with local variable 'zBase' returned to caller", 'code': 'return sqlite3StrAccumFinish(&out);', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (84759, 84759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/sqlite3/src/sqlite3.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'sqlite3_free(p->term.a);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (178889, 178889), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'Could not parse from HTML', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (3876, 3876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (8718, 8718), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'iface_type_name' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7927, 7927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'type' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5858, 5858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'var_mode' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (7926, 7926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Value stored to 'error_emitted' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5332, 5332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "Access to field 'type' results in a dereference of a null pointer (loaded from variable 'from')", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': "The right operand of '!=' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (8693, 8693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_to_hir.cpp', 'desc': '12th function call argument is an uninitialized value', 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (8009, 8009), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11cxt.c': [{'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(tag, out + length, taglen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1223, 1223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_EncryptUpdate(context->session, random, sizeof(random), out, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (808, 808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11cxt.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(context->slot)((CK_FUNCTION_LIST_3_0_PTR)((context->slot)->functionList))->C_DecryptUpdate(context->session, (CK_BYTE_PTR)in, sizeof(random), random, &length);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (815, 815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/ucol_sit.cpp': [{'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncat(destination,s->entries[i].data(), s->entries[i].length()):: strncat(destination, s->entries[i].data(), s->entries[i].length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (377, 377), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strcat(destination, "_"):: strcat(destination, "_");', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (362, 362), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol_sit.cpp', 'desc': "Array access (from variable 'destination') results in a null pointer dereference", 'code': 'destination[len+j] = uprv_toupperuprv_toupper_67(s->entries[i][j]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/rulebasedcollator.cpp': [{'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcmp(reorderCodes, settings->reorderCodes, length * 4):: memcmp(reorderCodes, settings->reorderCodes,length * 4) == 0) {', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(dest, settings->reorderCodes, length * 4):: memcpy(dest, settings->reorderCodes, length * 4);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_memcpy(buffer, result.data(), result.length()):: memcpy(buffer, result.data(), result.length());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1604, 1604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/rulebasedcollator.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nfdQCYesLimit')", 'code': 'if(*nfdQCYesLimit == 0) { return; }', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/netinet/sctp_asconf.c': [{'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(lookup->addr, addr_ptr, addr_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (2732, 2732), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = l->action;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2119, 2119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_asconf.c', 'desc': "Value stored to 'sa' is never read", 'code': 'sa = &store.sa;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/avstring.c': [{'fname': 'media/ffvpx/libavutil/avstring.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'av_bprint_append_data(&pbuf, pstr, strlen(pstr));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/include/private/SkMalloc.h': [{'fname': 'gfx/skia/skia/include/private/SkMalloc.h', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(dst,src,len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (122, 122), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/sftkike.c': [{'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(buf, context->macBuf, len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (430, 430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/sftkike.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'while (context->nextChar + len > AES_BLOCK_SIZE16) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/ssl/sslprimitive.c': [{'fname': 'security/nss/lib/ssl/sslprimitive.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(label, labelPrefix, labelPrefixLen);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (70, 70), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11mech.c': [{'fname': 'security/nss/lib/pk11wrap/pk11mech.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'PORT_Memcpymemcpy(mech->data, iv.data, iv.len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (1556, 1556), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/block_splitter.c': [{'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, insert_len);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/block_splitter.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(literals + pos, data + from_pos, head_size);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/unum.cpp': [{'fname': 'intl/icu/source/i18n/unum.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'uprv_strncpy(outBuf, sp.data(), sp.size()):: strncpy(outBuf, sp.data(), sp.size());', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (454, 454), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/cmd/modutil/pk11.c': [{'fname': 'security/nss/cmd/modutil/pk11.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'strcpy(buf, string);', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/sftkpwd.c': [{'fname': 'security/nss/lib/softoken/sftkpwd.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'SHA1_Update(cx, (unsigned char *)pw, PORT_Strlen(pw)strlen(pw));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (109, 109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c': [{'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&mx->mx_db, NODEDATA(node)(void *)((char *)(node)->mn_data + (node)->mn_ksize), sizeof(MDB_db));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (7530, 7530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'env->me_psize = meta.mm_psizemm_dbs[0].md_pad;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (4400, 4400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Value stored to 'pdst' is never read", 'code': 'pdst = cdst->mc_pg[cdst->mc_top];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8079, 8079), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mn_flags' results in a dereference of a null pointer (loaded from variable 'leaf')", 'code': 'if (F_ISSET(leaf->mn_flags, F_DUPDATA)(((leaf->mn_flags) & (0x04)) == (0x04))) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (6171, 6171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_db.md_pad = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7537, 7537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (from variable 'mop') results in a null pointer dereference", 'code': 'save = mop[0];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3277, 3277), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5998, 5998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Access to field 'mv_size' results in a dereference of a null pointer (loaded from variable 'key')", 'code': 'key->mv_size = mc->mc_db->md_pad;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5915, 5915), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "Array access (via field 'mt_spill_pgs') results in a null pointer dereference", 'code': 'if (x == txn->mt_spill_pgs[0])', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2386, 2386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': 'Dereference of null pointer', 'code': 'mx->mx_cursor.mc_xcursor = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (7502, 7502), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/lmdb-rkv-sys/lmdb/libraries/liblmdb/mdb.c', 'desc': "The left operand of '/' is a garbage value", 'code': 'ssize_t len = (ssize_t)(data.mv_size / sizeof(MDB_ID)) - 1;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3267, 3267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mozglue/misc/Printf.cpp': [{'fname': 'mozglue/misc/Printf.cpp', 'desc': "Null pointer passed as an argument to a 'nonnull' parameter", 'code': 'memcpy(&pattern[1], dolPt, size_t(i));', 'bug_type': 'API', 'severity': "Argument with 'nonnull' attribute passed null", 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/dtitvinf.cpp': [{'fname': 'intl/icu/source/i18n/dtitvinf.cpp', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '++skeletonFieldWidth[ch - PATTERN_CHAR_BASE];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-sse2.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_8888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5679, 5679), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_x888_8888_normal_SRC,static void fast_composite_scaled_bilinear_sse2_x888_8888_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_x888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5744, 5744), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(sse2_8888_0565_normal_OVER,static void fast_composite_scaled_bilinear_sse2_8888_0565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (op_bilinear_over_8888_0565 != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (op_bilinear_over_8888_0565 != ((void*)0)) { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) op_bilinear_over_8888_0565) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_sse2_8888_8888_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (5881, 5881), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 's' is never read", 'code': 's += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4799, 4799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4798, 4798), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (4800, 4800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'd' is never read", 'code': 'd += 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3459, 3459), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': "Value stored to 'w' is never read", 'code': 'w -= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3458, 3458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-sse2.c', 'desc': '1st function call argument is an uninitialized value', 'code': '*dst = composite_over_8888_0565pixel (*src, *dst);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (5863, 5863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-fast-path.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_8888_normal_OVER,static void fast_composite_scaled_bilinear_8888_8888_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint32_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint32_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (dst_line) = ((uint32_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_8888_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint32_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_8888_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(8888_565_normal_OVER,static void fast_composite_scaled_bilinear_8888_565_normal_OVER (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint32_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (src_first_line) = ((uint32_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint32_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint32_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint32_t *src1, *src2; uint32_t buf1[2]; uint32_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint32_t * src_line_top; uint32_t * src_line_bottom; uint32_t buf1[2]; uint32_t buf2[2]; uint32_t extended_src_line0[64*2]; uint32_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_8888_565_OVER ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint32_t *, int)) ((void*)0)) ((dst), (mask), (uint32_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_8888_565_OVER ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1406, 1406), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Assigned value is garbage or undefined', 'code': '(565_565_normal_SRC,static void fast_composite_scaled_bilinear_565_565_normal_SRC (pixman_implementation_t *imp, pixman_composite_info_t *info) { __attribute__((unused)) pixman_op_t op = info->op; __attribute__((unused)) pixman_image_t * src_image = info->src_image; __attribute__((unused)) pixman_image_t * mask_image = info->mask_image; __attribute__((unused)) pixman_image_t * dest_image = info->dest_image; __attribute__((unused)) int32_t src_x = info->src_x; __attribute__((unused)) int32_t src_y = info->src_y; __attribute__((unused)) int32_t mask_x = info->mask_x; __attribute__((unused)) int32_t mask_y = info->mask_y; __attribute__((unused)) int32_t dest_x = info->dest_x; __attribute__((unused)) int32_t dest_y = info->dest_y; __attribute__((unused)) int32_t width = info->width; __attribute__((unused)) int32_t height = info->height; uint16_t *dst_line; uint32_t *mask_line; uint16_t *src_first_line; int y1, y2; pixman_fixed_t max_vx = (2147483647); pixman_vector_t v; pixman_fixed_t vx, vy; pixman_fixed_t unit_x, unit_y; int32_t left_pad, left_tz, right_tz, right_pad; uint16_t *dst; uint32_t solid_mask; const uint32_t *mask = &solid_mask; int src_stride, mask_stride, dst_stride; int src_width; pixman_fixed_t src_width_fixed; int max_x; pixman_bool_t need_src_extension; uint64_t stack_scanline_buffer[3072]; uint8_t *scanline_buffer = (uint8_t *) stack_scanline_buffer; do { uint32_t *__bits__; int __stride__; __bits__ = dest_image->bits.bits; __stride__ = dest_image->bits.rowstride; (dst_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (dst_line) = ((uint16_t *) __bits__) + (dst_stride) * (dest_y) + (1) * (dest_x); } while (0); if ((0) & (1 << 1)) { solid_mask = _pixman_image_get_solid (imp, mask_image, dest_image->bits.format); mask_stride = 0; } else if ((0) & (1 << 2)) { do { uint32_t *__bits__; int __stride__; __bits__ = mask_image->bits.bits; __stride__ = mask_image->bits.rowstride; (mask_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint32_t); (mask_line) = ((uint32_t *) __bits__) + (mask_stride) * (mask_y) + (1) * (mask_x); } while (0); } do { uint32_t *__bits__; int __stride__; __bits__ = src_image->bits.bits; __stride__ = src_image->bits.rowstride; (src_stride) = __stride__ * (int) sizeof (uint32_t) / (int) sizeof (uint16_t); (src_first_line) = ((uint16_t *) __bits__) + (src_stride) * (0) + (1) * (0); } while (0); v.vector[0] = ((pixman_fixed_t) ((uint32_t)(src_x) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] = ((pixman_fixed_t) ((uint32_t)(src_y) << 16)) + (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[2] = (((pixman_fixed_t) ((uint32_t)(1) << 16))); if (!_moz_pixman_transform_point_3d (src_image->common.transform, &v)) return; unit_x = src_image->common.transform->matrix[0][0]; unit_y = src_image->common.transform->matrix[1][1]; v.vector[0] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; v.vector[1] -= (((pixman_fixed_t) ((uint32_t)(1) << 16))) / 2; vy = v.vector[1]; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD || PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { bilinear_pad_repeat_get_scanline_bounds (src_image->bits.width, v.vector[0], unit_x, &left_pad, &left_tz, &width, &right_tz, &right_pad); if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { left_pad += left_tz; right_pad += right_tz; left_tz = right_tz = 0; } v.vector[0] += left_pad * unit_x; } if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { vx = v.vector[0]; repeat (PIXMAN_REPEAT_NORMAL, &vx, ((pixman_fixed_t) ((uint32_t)(src_image->bits.width) << 16))); max_x = ((int) ((vx + (width - 1) * (int64_t)unit_x) >> 16)) + 1; if (src_image->bits.width < 64) { src_width = 0; while (src_width < 64 && src_width <= max_x) src_width += src_image->bits.width; need_src_extension = 1; } else { src_width = src_image->bits.width; need_src_extension = 0; } src_width_fixed = ((pixman_fixed_t) ((uint32_t)(src_width) << 16)); } if (((void*)0) != ((void*)0) && width * sizeof(uint16_t) > sizeof(stack_scanline_buffer)) { scanline_buffer = pixman_malloc_ab (width, sizeof(uint16_t)); if (!scanline_buffer) return; } while (--height >= 0) { int weight1, weight2; dst = dst_line; dst_line += dst_stride; vx = v.vector[0]; if ((0) & (1 << 2)) { mask = mask_line; mask_line += mask_stride; } y1 = ((int) ((vy) >> 16)); weight2 = pixman_fixed_to_bilinear_weight (vy); if (weight2) { y2 = y1 + 1; weight1 = (1 << 7) - weight2; } else { y2 = y1; weight1 = weight2 = (1 << 7) / 2; } vy += unit_y; if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_PAD) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; repeat (PIXMAN_REPEAT_PAD, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_PAD, &y2, src_image->bits.height); src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = src1[0]; buf2[0] = buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; } if (right_pad > 0) { buf1[0] = buf1[1] = src1[src_image->bits.width - 1]; buf2[0] = buf2[1] = src2[src_image->bits.width - 1]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (0)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NONE) { uint16_t *src1, *src2; uint16_t buf1[2]; uint16_t buf2[2]; if (y1 < 0) { weight1 = 0; y1 = 0; } if (y1 >= src_image->bits.height) { weight1 = 0; y1 = src_image->bits.height - 1; } if (y2 < 0) { weight2 = 0; y2 = 0; } if (y2 >= src_image->bits.height) { weight2 = 0; y2 = src_image->bits.height - 1; } src1 = src_first_line + src_stride * y1; src2 = src_first_line + src_stride * y2; if (left_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); dst += left_pad; if ((0) & (1 << 2)) mask += left_pad; } if (left_tz > 0) { buf1[0] = 0; buf1[1] = src1[0]; buf2[0] = 0; buf2[1] = src2[0]; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (left_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (left_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += left_tz; if ((0) & (1 << 2)) mask += left_tz; vx += left_tz * unit_x; } if (width > 0) { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src1), (src2), (width), (weight1), (weight2), (vx), (unit_x), (0), (0)); } } while (0); dst += width; if ((0) & (1 << 2)) mask += width; vx += width * unit_x; } if (right_tz > 0) { buf1[0] = src1[src_image->bits.width - 1]; buf1[1] = 0; buf2[0] = src2[src_image->bits.width - 1]; buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_tz)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_tz), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (0), (0)); } } while (0); dst += right_tz; if ((0) & (1 << 2)) mask += right_tz; } if (right_pad > 0) { buf1[0] = buf1[1] = 0; buf2[0] = buf2[1] = 0; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (right_pad)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (right_pad), (weight1), (weight2), (0), (0), (0), (1)); } } while (0); } } else if (PIXMAN_REPEAT_NORMAL == PIXMAN_REPEAT_NORMAL) { int32_t num_pixels; int32_t width_remain; uint16_t * src_line_top; uint16_t * src_line_bottom; uint16_t buf1[2]; uint16_t buf2[2]; uint16_t extended_src_line0[64*2]; uint16_t extended_src_line1[64*2]; int i, j; repeat (PIXMAN_REPEAT_NORMAL, &y1, src_image->bits.height); repeat (PIXMAN_REPEAT_NORMAL, &y2, src_image->bits.height); src_line_top = src_first_line + src_stride * y1; src_line_bottom = src_first_line + src_stride * y2; if (need_src_extension) { for (i=0; i<src_width;) { for (j=0; j<src_image->bits.width; j++, i++) { extended_src_line0[i] = src_line_top[j]; extended_src_line1[i] = src_line_bottom[j]; } } src_line_top = &extended_src_line0[0]; src_line_bottom = &extended_src_line1[0]; } buf1[0] = src_line_top[src_width - 1]; buf1[1] = src_line_top[0]; buf2[0] = src_line_bottom[src_width - 1]; buf2[1] = src_line_bottom[0]; width_remain = width; while (width_remain > 0) { repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); if (((int) ((vx) >> 16)) == src_width - 1) { num_pixels = ((src_width_fixed - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (buf1), (buf2), (num_pixels), (weight1), (weight2), (((vx) & ((((pixman_fixed_t) ((uint32_t)(1) << 16))) - ((pixman_fixed_t) 1)))), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; repeat (PIXMAN_REPEAT_NORMAL, &vx, src_width_fixed); } if (((int) ((vx) >> 16)) != src_width - 1 && width_remain > 0) { num_pixels = ((src_width_fixed - (((pixman_fixed_t) ((uint32_t)(1) << 16))) - vx - ((pixman_fixed_t) 1)) / unit_x) + 1; if (num_pixels > width_remain) num_pixels = width_remain; do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (num_pixels)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_line_top), (src_line_bottom), (num_pixels), (weight1), (weight2), (vx), (unit_x), (src_width_fixed), (0)); } } while (0); width_remain -= num_pixels; vx += num_pixels * unit_x; dst += num_pixels; if ((0) & (1 << 2)) mask += num_pixels; } } } else { do { if (((void*)0) != ((void*)0)) { scaled_bilinear_scanline_565_565_SRC ((void *)scanline_buffer, (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); ((void (*)(uint16_t *, const uint32_t *, const uint16_t *, int)) ((void*)0)) ((dst), (mask), (uint16_t *)scanline_buffer, (width)); } else { scaled_bilinear_scanline_565_565_SRC ((void*)(dst), (mask), (src_first_line + src_stride * y1), (src_first_line + src_stride * y2), (width), (weight1), (weight2), (vx), (unit_x), (max_vx), (0)); } } while (0); } } if (scanline_buffer != (uint8_t *) stack_scanline_buffer) free (scanline_buffer); }', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-fast-path.c', 'desc': 'Division by zero', 'code': 'sx = MOD (sx, src_width)((sx) < 0 ? ((src_width) - ((-(sx) - 1) % (src_width))) - 1 : (sx) % (src_width));', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1508, 1508), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/unormcmp.cpp': [{'fname': 'intl/icu/source/common/unormcmp.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (332, 332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/user_mbuf.c': [{'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'n->m_flagsm_hdr.mh_flags |= M_EXT0x0001;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (968, 968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'M_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(256 - sizeof(struct m_hdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1399, 1399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, remain)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (remain)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'MH_ALIGN(n, 0)do { ; ; (n)->m_hdr.mh_data += (((int)(((int)(256 - sizeof(struct m_hdr))) - sizeof(struct pkthdr))) - (0)) & ~(sizeof(long) - 1); } while (0);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1380, 1380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if (m->m_flagsm_hdr.mh_flags & M_EXT0x0001) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (250, 250), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'if ((off == 0 || offp) && M_LEADINGSPACE(n->m_next)((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001 ? ((!((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0008) && (!(((n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0001)) || (*((n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ref_cnt) == 1)) ) ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_ext.ext_buf : 0): (n->m_hdr.mh_next)->m_hdr.mh_flags & 0x0002 ? (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.MH.MH_dat.MH_databuf : (n->m_hdr.mh_next)->m_hdr.mh_data - (n->m_hdr.mh_next)->M_dat.M_databuf) >= hlen', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (896, 896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': 'Dereference of null pointer', 'code': 'count = min(m->m_len - off, len)((m->m_hdr.mh_len - off)>(len)?(len):(m->m_hdr.mh_len - off));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1235, 1235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The left operand of '&' is a garbage value", 'code': 'to->m_flagsm_hdr.mh_flags = (from->m_flagsm_hdr.mh_flags & M_COPYFLAGS(0x0002|0x0004|0x0008|0x0010|0x0010|0x0020| 0x0040|0x0080|0x0100| 0x0200|0x0400|0x0800|0x1000|0x2000| 0x10000|0x20000)) | (to->m_flagsm_hdr.mh_flags & M_EXT0x0001);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1086, 1086), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': "The right operand of '+' is a garbage value", 'code': 'memcpy(off + mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)), cp, (u_int)mlen);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1160, 1160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(o, caddr_t)((caddr_t)((o)->m_hdr.mh_data)), mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)) + off, hlen);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '4th function call argument is an uninitialized value', 'code': 'm_copydata(m, off, len, mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (788, 788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memcpy(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), mtod(m, caddr_t)((caddr_t)((m)->m_hdr.mh_data)) + off, (u_int)n->m_lenm_hdr.mh_len);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1035, 1035), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_mbuf.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'memset(mtod(n, caddr_t)((caddr_t)((n)->m_hdr.mh_data)), 0, MLEN((int)(256 - sizeof(struct m_hdr))));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1152, 1152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/opt.c': [{'fname': 'media/ffvpx/libavutil/opt.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'char *av_uninit(parsed_key)parsed_key=parsed_key, *av_uninit(value)value=value;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1512, 1512), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/opt.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ucnvscsu.cpp': [{'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1926, 1926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c>>=8*length; /* length was reduced by targetCapacity */', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1478, 1478), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1504, 1504), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvscsu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1943, 1943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int a = dst[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (304, 304), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int b = dst[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'int c = dst[2];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (398, 398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int a = SIX_NEIGHBORS(B, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'const int b = SIX_NEIGHBORS(A, i);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_looprestoration_tmpl.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'int sum = (hor[(j + 3) * REST_UNIT_STRIDE(390) + i] << 7) - round_offset;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (178, 178), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/vp8.c': [{'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'VP8Frame *av_uninit(curframe)curframe=curframe, *prev_frame;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2623, 2623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 's->mv_bounds.mv_max.x = ((s->mb_width - 1) << 6) + MARGIN(16 << 2);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2287, 2287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/calendar.cpp': [{'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'max <<= 1;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (2353, 2353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'Calendar *c = (*shared)->clone();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (988, 988), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/calendar.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'uprv_strncpy(typeBuffer, (*shared)->getType(), typeBufferSize):: strncpy(typeBuffer, (*shared)->getType(), typeBufferSize);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1027, 1027), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'parser/expat/lib/xmltok.c': [{'fname': 'parser/expat/lib/xmltok.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*(*toP)++ = *utf8++;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1424, 1424), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/conftest.c': [{'fname': 'obj-ff-dbg/conftest.c', 'desc': 'The expression is an uninitialized value. The computed value will also be garbage', 'code': '*t++ = 0;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (27, 27), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'ccp' is never read", 'code': '= (char const *const *) p;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (22, 22), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/conftest.c', 'desc': "Value stored to 'foo' during its initialization is never read", 'code': 'foo = res_ninit__res_ninit(&_res(*__res_state()));', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (13, 13), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/x86/mpegaudiodsp.c': [{'fname': 'media/ffvpx/libavcodec/x86/mpegaudiodsp.c', 'desc': 'The left expression of the compound assignment is an uninitialized value. The computed value will also be garbage', 'code': 'SUM8(MACS, suma[0], win + 32, in + 48){ suma[0]+=((win + 32)[0 * 64])*((in + 48)[0 * 64]); suma[0]+=((win + 32)[1 * 64])*((in + 48)[1 * 64]); suma[0]+=((win + 32)[2 * 64])*((in + 48)[2 * 64]); suma[0]+=((win + 32)[3 * 64])*((in + 48)[3 * 64]); suma[0]+=((win + 32)[4 * 64])*((in + 48)[4 * 64]); suma[0]+=((win + 32)[5 * 64])*((in + 48)[5 * 64]); suma[0]+=((win + 32)[6 * 64])*((in + 48)[6 * 64]); suma[0]+=((win + 32)[7 * 64])*((in + 48)[7 * 64]); };', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (146, 146), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/uniset.cpp': [{'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1925, 1925), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1756, 1756), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'b = other[j++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1954, 1954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uniset.cpp', 'desc': 'Forming reference to null pointer', 'code': 'stringSpan = new UnicodeSetStringSpan(*o.stringSpan, *strings);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ustrcase.cpp': [{'fname': 'intl/icu/source/common/ustrcase.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'c2=*(s2-1);', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/umutablecptrie.cpp': [{'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'uint32_t hashCode = blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (847, 847), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/umutablecptrie.cpp', 'desc': "The right operand of '+' is a garbage value", 'code': 'hashCode = 37 * hashCode + blockData[blockStart++];', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (849, 849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/qcms/iccread.c': [{'fname': 'gfx/qcms/iccread.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'float a = curve->parameter[1];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (482, 482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'expanded_src[i] = expanded_src[0];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (226, 226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_int64.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'expr(pack_opcode, result[i]),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/unames.cpp': [{'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'elements[i]=elementBases[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1169, 1169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 's=elements[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (1162, 1162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unames.cpp', 'desc': "The left operand of '+' is a garbage value due to array index out of bounds", 'code': 'idx=(uint16_t)(indexes[--i]+1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1158, 1158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/imgconvert.c': [{'fname': 'media/ffvpx/libavcodec/imgconvert.c', 'desc': 'Assigned value is garbage or undefined', 'code': '*loss_ptr = loss;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/16bd_film_grain_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/16bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/8bd_film_grain_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/8bd_film_grain_tmpl.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'const int randval = offsets[bx][by];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/flacdec.c': [{'fname': 'media/ffvpx/libavcodec/flacdec.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'unsigned av_uninit(a)a=a, av_uninit(b)b=b, av_uninit(c)c=c, av_uninit(d)d=d;', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/stringtriebuilder.cpp': [{'fname': 'intl/icu/source/common/stringtriebuilder.cpp', 'desc': 'Assigned value is garbage or undefined', 'code': 'start=starts[unitNumber];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (183, 183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/frame.c': [{'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Assigned value is garbage or undefined', 'code': 'frame->data[i] += offsets[i];', 'bug_type': 'Logic error', 'severity': 'Assigned value is garbage or undefined', 'locs': (937, 937), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/frame.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'int log2_align = offsets[i] ? ff_ctz(offsets[i])__builtin_ctz(offsets[i]) : INT_MAX2147483647;', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (921, 921), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/io/nsLocalFileUnix.cpp': [{'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (symLink) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1515, 1515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (specialFile) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (isSymLink || !S_ISDIR(mCachedStat.st_mode)((((mCachedStat.st_mode)) & 0170000) == (0040000))) {', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (1033, 1033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/io/nsLocalFileUnix.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'rv = newFile->CreateAndKeepOpen(NORMAL_FILE_TYPE,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jcmaster.c': [{'fname': 'media/libjpeg/jcmaster.c', 'desc': 'Branch condition evaluates to a garbage value', 'code': 'if (!component_sent[ci])', 'bug_type': 'Logic error', 'severity': 'Branch condition evaluates to a garbage value', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcmaster.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (last_bitpos[ci][0] < 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/WrapSwitchStatementsInBlocks.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/WrapSwitchStatementsInBlocks.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'EOpAssign, declaratorAsBinary->getLeft(), declaratorAsBinary->getRight());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1215, 1215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(~operandArray[i].getUConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2687, 2687), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packUnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2510, 2510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isInf(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2867, 2867), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(gl::bitCast<int32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2872, 2872), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2991, 2991), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2948, 2948), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackUnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2518, 2518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kDegreesToRadiansMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2697, 2697), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() %', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2230, 2230), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(-operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(leftArray[i] != rightArray[i]);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2319, 2319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2653, 2653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'basicType = argConstant->getType().getBasicType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3084, 3084), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray < *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2355, 2355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2286, 2286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray > *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2367, 2367), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == 0x80000000u)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2633, 2633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(!(*leftArray < *rightArray));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2373, 2373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int iConst = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2807, 2807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] | rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2337, 2337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3012, 3012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[col * matrixRows + matrixRow].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2262, 2262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(declarator->getAsSymbolNode() != nullptr ||(declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize) ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 875, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/IntermNode.cpp" << ":" << 875 << "): " << "declarator->getAsSymbolNode() != nullptr || (declarator->getAsBinaryNode() != nullptr && declarator->getAsBinaryNode()->getOp() == EOpInitialize)"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (873, 873), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2720, 2720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (cond->getQualifier() == EvqConst && trueExpression->getQualifier() == EvqConst &&', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1389, 1389), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2855, 2855), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2837, 2837), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackSnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2557, 2557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2896, 2896), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2656, 2656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackSnorm2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2499, 2499), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float x = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2954, 2954), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) >= 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2769, 2769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2923, 2923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] && rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2298, 2298), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::unpackHalf2x16(operandArray[0].getUConst(), &f1, &f2);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2537, 2537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2936, 2936), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] ^ rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2332, 2332), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'elements.push_back(paramArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (126, 126), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray->setBConst(*leftArray > *rightArray);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2361, 2361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(leftArray[i].getUConst() /', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2224, 2224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2882, 2882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (fabsf(operandArray[i].getFConst()) > 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2730, 2730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(kRadiansToDegreesMultiplier * operandArray[i].getFConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2702, 2702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packHalf2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] & rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2327, 2327), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermTyped *argCopy = typedArg->deepCopy();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(!operandArray[i].getBConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2672, 2672), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackUnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2566, 2566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float dividend = leftArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2112, 2112), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() <= 0.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2911, 2911), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'leftArray[i * leftRows + row].getFConst() *', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2094, 2094), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i].getFConst() < 1.0f)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2759, 2759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (leftArray[i] != rightArray[i])', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2383, 2383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(abs(operandArray[i].getIConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2783, 2783), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::PackUnorm4x8(operandArray[0].getFConst(), operandArray[1].getFConst(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(fabsf(operandArray[i].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2780, 2780), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setIConst(~operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2684, 2684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = static_cast<uint32_t>(operandArray[i].getIConst());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3007, 3007), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mOperand->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1416, 1416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (operandArray[i] == std::numeric_limits<int>::min())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2618, 2618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'float fConst = operandArray[i].getFConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2796, 2796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3034, 3034), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'value = operandArray[i].getUConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2996, 2996), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'static_cast<int>(operandArray[i].getUConst())));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2660, 2660), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setBConst(gl::isNaN(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2862, 2862), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::UnpackSnorm4x8(operandArray[0].getUConst(), f);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2578, 2578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int lhs = leftArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2169, 2169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'falseExpression->getQualifier() == EvqConst)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1390, 1390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i] = leftArray[i] || rightArray[i];', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2308, 2308), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setFConst(gl::bitCast<float>(operandArray[0].getUConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2887, 2887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'resultArray[i].setUConst(gl::bitCast<uint32_t>(operandArray[0].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2877, 2877), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'gl::packSnorm2x16(operandArray[0].getFConst(), operandArray[1].getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2491, 2491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int intValue = operandArray[i].getIConst();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3022, 3022), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Called function pointer is null (null dereference)', 'code': 'result->setFConst(builtinFunc(parameter.getFConst()));', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (3062, 3062), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &ceilf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2849, 2849), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::sub(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2060, 2060), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &asinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2754, 2754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &atanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2738, 2738), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::add(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2054, 2054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &roundf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2831, 2831), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &cosf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2710, 2710), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2742, 2742), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &coshf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2746, 2746), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &expf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2891, 2891), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::lshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2343, 2343), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2714, 2714), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::mul(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2069, 2069), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &sinf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2706, 2706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &floorf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2823, 2823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &tanhf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2750, 2750), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'TConstantUnion::rshift(leftArray[i], rightArray[i], diagnostics, line);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2349, 2349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'leftArray = Vectorize(*leftArray, rightType.getObjectSize());', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2042, 2042), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &exp2f, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2904, 2904), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/IntermNode.cpp', 'desc': 'Forming reference to null pointer', 'code': 'foldFloatTypeUnary(operandArray[i], &truncf, &resultArray[i]);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (2827, 2827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() == EvqConst ||(symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 67, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp" << ":" << 67 << "): " << "symbolNode->getQualifier() == EvqConst || symbolNode->getQualifier() == EvqGlobal"))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (66, 66), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/DeferGlobalInitializers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbolNode->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacement.parent->replaceChildNode(replacement.original, replacement.replacement);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (524, 524), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(position < parent->getChildCount())(position < parent->getChildCount() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 290, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp" << ":" << 290 << "): " << "position < parent->getChildCount()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'bool replaced = replacement.parent->replaceChildNodeWithMultiple(replacement.original,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (630, 630), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (364, 364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (432, 432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermTraverse.cpp', 'desc': "Value stored to 'visit' is never read", 'code': 'visit = node->visit(PostVisit, this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (405, 405), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (634, 634), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasUniformBlock(uniformBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (536, 536), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getBuiltInResourcesString();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (340, 340), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &(compiler->getNameMap());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderMaxVertices() >= 0;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->compile(shaderStrings, numStrings, compileOptions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getReadonlyImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (402, 402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TInfoSink &infoSink = compiler->getInfoSink();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (390, 390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getShaderStorageBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getNumViews();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (496, 496), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (612, 612), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInvocations();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (659, 659), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUsedImage2DFunctionNames();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (590, 590), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getUniformRegisterMap();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (554, 554), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getOutputType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getShaderVersion();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'compiler->clearResults();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (656, 656), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getComputeShaderLocalSize();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderInputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return translator->getImage2DRegisterIndex();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return compiler->getGeometryShaderOutputPrimitiveType() != EptUndefined;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderOutputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (648, 648), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return &compiler->getUniformBlocks();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (465, 465), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (601, 601), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return GetGeometryShaderPrimitiveTypeEnum(compiler->getGeometryShaderInputPrimitiveType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (462, 462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TCompiler *compiler = base->getAsCompiler();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!translator->hasShaderStorageBlock(shaderStorageBlockName))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'int maxVertices = compiler->getGeometryShaderMaxVertices();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (670, 670), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getUniformBlockRegister(uniformBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderLang.cpp', 'desc': "Dereference of null pointer (loaded from variable 'indexOut')", 'code': '*indexOut = translator->getShaderStorageBlockRegister(shaderStorageBlockName);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/plugins/ipc/PluginInstanceChild.cpp': [{'fname': 'dom/plugins/ipc/PluginInstanceChild.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!(object = actor->GetObject(false))) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'unsigned int fieldIndex = static_cast<unsigned int>(constantUnion->getIConst(0));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (929, 929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::AngleInternal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'interfaceBlock->name = blockType->name().data();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (711, 711), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'InterfaceBlock *namedBlock = FindVariable(interfaceBlock->name(), infoList);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (95, 95), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *interfaceIndexingNode = blockNode->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &interfaceType = interfaceNode->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (909, 909), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'varyings->push_back(info);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (293, 293), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': 'Forming reference to null pointer', 'code': 'mSymbolTable->isStaticallyUsed(*static_cast<const TVariable *>(blockSymbol));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (727, 727), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'ASSERT(namedBlock->staticUse)(namedBlock->staticUse ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 927, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp" << ":" << 927 << "): " << "namedBlock->staticUse"));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (927, 927), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/CollectVariables.cpp', 'desc': "Access to field 'staticUse' results in a dereference of a null pointer (loaded from variable 'namedBlock')", 'code': 'namedBlock->staticUse = true;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TType *type = new TType(original->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (originalArg->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ScalarizeVecAndMatConstructorArgs.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'child->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName + "." + originalFieldName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (214, 214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = this->name;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*originalFullName = originalName;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = fieldVar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (191, 191), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderVars.cpp', 'desc': "Dereference of null pointer (loaded from variable 'leafVar')", 'code': '*leafVar = this;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (structure->symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputGLSLBase.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'curNode->traverse(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = symbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2237, 2237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (IsVaryingOut(declarator->getQualifier()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2232, 2232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue())(symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 1458, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp" << ":" << 1458 << "): " << "symbolNode->getQualifier() != EvqGlobal || initializer->hasConstantValue()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1458, 1458), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ensureStructDefined(declarator->getType());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2194, 2194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return (variable->getQualifier() == EvqTemporary || variable->getQualifier() == EvqGlobal ||', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (61, 61), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (constUnion->getType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type->getBasicType() != EbtBool || !type->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5603, 5603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (argTyped->getBasicType() == EbtStruct)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (810, 810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (argTyped->getMemoryQualifier().writeonly)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (733, 733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (type.getBasicType() != EbtStruct && IsOpaqueType(argTyped->getBasicType()))', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (726, 726), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'size_t dimensionalityFromElement = element->getType().getNumArraySizes() + 1u;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (3577, 3577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'switch (sampler->getBasicType())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5678, 5678), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (folded->getQualifier() == expression->getQualifier())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (5059, 5059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ParseContext.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (fieldSet[i] != fieldSet[i - 1])', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (size_t index = 0; index < block->fields.size(); ++index)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (mReferencedShaderStorageBlocks.count(interfaceBlock->uniqueId().get()) == 0)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (491, 491), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': 'Called C++ object pointer is null', 'code': '*storage = interfaceBlock->blockStorage();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'setMatrixStride(node, storage, rowMajor);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (431, 431), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'GetBlockMemberInfoByType(node->getType(), storage, rowMajor).arrayStride;', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (429, 429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/uspoof.cpp': [{'fname': 'intl/icu/source/i18n/uspoof.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return result->asUSpoofChecker();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TQualifier qualifier = declarator->getQualifier();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (240, 240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveUnreferencedVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'for (const auto &field : block->fields())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TConstantUnion *constantUnion = intermConstantUnion->getConstantValue();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&it);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (696, 696), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/OutputTree.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TFieldList &fields = structure ? structure->fields() : interfaceBlock->fields();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveDynamicIndexing.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rootBlock->insertChildNodes(0, insertions);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/ArrayReturnValueToOutParameter.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/ArrayReturnValueToOutParameter.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'replacementAssignment->setLine(expression->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (symbol->variable().symbolType() == SymbolType::Empty)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/InitializeVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (initializedNode->isArray())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (48, 48), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteStructSamplers.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteStructSamplers.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TVariable &variable = asSymbol->variable();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/nfrule.cpp': [{'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'UBool success = sub->doParse(subText, tempPP, _baseValue, upperBound,', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1192, 1192), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/nfrule.cpp', 'desc': "Value stored to 'subEnd' during its initialization is never read", 'code': 'int32_t subEnd = subStart;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (477, 477), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'else if (left->isVector() && right->isScalar())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (left->isScalar() && right->isVector())', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/VectorizeVectorScalarArithmetic.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!argument->isScalar() || argument->getBasicType() != EbtFloat)', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/dns/nsHostResolver.cpp': [{'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'c->remove();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1202, 1202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '5th function call argument is an uninitialized value', 'code': 'LOG(("TRR Resolve %s type %d\\n", typeRec->host.get(), (int)rectype));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1358, 1358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/dns/nsHostResolver.cpp', 'desc': '3rd function call argument is an uninitialized value', 'code': 'trr = pushedTRR ? pushedTRR : new TRR(this, rec, rectype);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1361, 1361), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'accessible/atk/nsMaiInterfaceDocument.cpp': [{'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->MimeType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (133, 133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->URL(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (127, 127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'accessible/atk/nsMaiInterfaceDocument.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'proxy->DocType(attrValue);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_util/FindMain.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/FindMain.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBlock *mainBody = main->getBody();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (49, 49), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'mParametersVector->push_back(p);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (182, 182), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/Symbol.cpp', 'desc': "Value stored to 'uniqueId' during its initialization is never read", 'code': 'int uniqueId = mUniqueId.get();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (59, 59), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/smpdtfmt.cpp': [{'fname': 'intl/icu/source/i18n/smpdtfmt.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'toAppend->isBogus()) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return node->getAsConstantUnion() != nullptr && node->getAsTyped()->getQualifier() == EvqConst;', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateLimitations.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'node->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/ucol.cpp': [{'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const UnicodeString &rules = rbc->getRules();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (550, 550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'rbc->getRules(delta, rules);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'result = rbc->internalGetLocaleID(type, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (594, 594), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/ucol.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return rbc->cloneBinary(buffer, capacity, *status);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (75, 75), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RegenerateStructNames.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RegenerateStructNames.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const TType &type = symbol->getType();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'firstDeclaration->shareParameters(*function);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (121, 121), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (278, 278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/SymbolTable.cpp', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return target;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/linker.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/linker.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'const unsigned slots = var->type->count_attribute_slots(target_index == MESA_SHADER_VERTEX);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2929, 2929), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/ReplaceShadowingVariables.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'std::string varName = std::string(symNode->variable().name().data());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dom/bindings/TestCodeGenBinding.cpp': [{'fname': 'obj-ff-dbg/dom/bindings/TestCodeGenBinding.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'if (!JS_GetPropertyById(cx, *object, atomsCache->c_id, temp.ptr())) {', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1411, 1411), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'return setFunctionCalled(function->uniqueId().get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (108, 108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/BuiltInFunctionEmulator.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&marker);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (141, 141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ValidateSwitch.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateSwitch.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&validate);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'offsetNode = TIntermAggregate::CreateConstructor(texCoordNode->getType(),', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (114, 114), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteTexelFetchOffset.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'add->setLine(texCoordNode->getLine());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveSwitchFallThrough.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RemoveSwitchFallThrough.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'statementList->traverse(&rm);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/third_party/compiler/ArrayBoundsClamper.cpp': [{'fname': 'gfx/angle/checkout/src/third_party/compiler/ArrayBoundsClamper.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'root->traverse(&clamper);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermNode_util.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_util/IntermNode_util.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TOperator op = fn->getBuiltInOp();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (283, 283), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/dtfmtsym.cpp': [{'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'DateFormatSymbols *result = new DateFormatSymbols(shared->get());', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (256, 256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtfmtsym.cpp', 'desc': "Value stored to 'length' is never read", 'code': 'length = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1733, 1733), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/base/nsRefreshDriver.cpp': [{'fname': 'layout/base/nsRefreshDriver.cpp', 'desc': 'Called C++ object pointer is null', 'code': ': std::max(mActiveTimer->MostRecentRefresh(), mMostRecentRefresh);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (1461, 1461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'TIntermBinary *arrayExpression = parent->getAsBinaryNode();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (275, 275), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/events/EventStateManager.cpp': [{'fname': 'dom/events/EventStateManager.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'nsCOMPtr<nsIContent> dragTarget = aDataTransfer->GetDragTarget();', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (2132, 2132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/Types.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/Types.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'ASSERT(arrayDimension < mArraySizes->size())(arrayDimension < mArraySizes->size() ? static_cast<void>(0) : (!((::gl::priv::ShouldCreatePlatformLogMessage(::gl::LOG_FATAL))) ? static_cast<void>(0) : ::gl::priv::LogMessageVoidify() & (::gl::LogMessage(__FUNCTION__, 698, ::gl::LOG_FATAL).stream()) << "\\t! Assert failed in " << __FUNCTION__ << " (" << "/home/edwjchen/gecko-dev/gfx/angle/checkout/src/compiler/translator/Types.cpp" << ":" << 698 << "): " << "arrayDimension < mArraySizes->size()"));', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (698, 698), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_constant_propagation.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_constant_propagation.cpp', 'desc': 'Called C++ object pointer is null', 'code': 'param->accept(this);', 'bug_type': 'Logic error', 'severity': 'Called C++ object pointer is null', 'locs': (326, 326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-glyph.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (486, 486), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-glyph.c', 'desc': 'Called function pointer is null (null dereference)', 'code': 'func (implementation, &info);', 'bug_type': 'Logic error', 'severity': 'Called function pointer is null (null dereference)', 'locs': (606, 606), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libsoundtouch/src/TDStretch.cpp': [{'fname': 'media/libsoundtouch/src/TDStretch.cpp', 'desc': "Value stored to 'bestCorr' is never read", 'code': 'bestCorr = -FLT_MAX3.40282347e+38F;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/cmd/modutil/install.c': [{'fname': 'security/nss/cmd/modutil/install.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = PK11_INSTALL_UNSPECIFIED;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/lib/ds/plvrsion.c': [{'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/ds/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/smime/cmsencode.c': [{'fname': 'security/nss/lib/smime/cmsencode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NSS_CMSEncoder_Cancel(p7ecx->childp7ecx); /* frees p7ecx->childp7ecx */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (663, 663), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestTuple.cpp': [{'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (87, 87), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (102, 102), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (88, 88), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (228, 228), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'y' is never read", 'code': 'y = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestTuple.cpp', 'desc': "Value stored to 'x' is never read", 'code': 'x = 42;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/vr/ipc/VRManagerChild.cpp': [{'fname': 'gfx/vr/ipc/VRManagerChild.cpp', 'desc': "Value stored to 'found' is never read", 'code': 'found = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc': [{'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("r1", frame_ppc->context.gpr[1], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (320, 320), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_arm->context.iregs[15], sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("s7",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("efl", frame_x86->context.eflags, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (311, 311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister("pc", frame_sparc->context.pc, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (368, 368), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (546, 546), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/stackwalk_common.cc', 'desc': "Value stored to 'sequence' is never read", 'code': 'sequence = PrintRegister64("rip", frame_amd64->context.rip, sequence);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (358, 358), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/plugins/test/testplugin/nptest.cpp': [{'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'success' is never read", 'code': 'success = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1934, 1934), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/plugins/test/testplugin/nptest.cpp', 'desc': "Value stored to 'err' is never read", 'code': 'err = NPN_GetURL(npp, "about:blank", frame);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (593, 593), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c': [{'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, encrypt_p->encrypt_key, sizeof(encrypt_p->encrypt_key), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1046, 1046), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, sdp_p->owner_addr, sizeof(sdp_p->owner_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (202, 202), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, conn_p->conn_addr, sizeof(conn_p->conn_addr), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (530, 530), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, timespec_p->stop_time, sizeof(timespec_p->stop_time), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (890, 890), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_token.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, port, sizeof(port), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1364, 1364), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c': [{'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4019, 4019), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (280, 280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2217, 2217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2505, 2505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2548, 2548), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2118, 2118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidout,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3693, 3693), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1998, 1998), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_confid,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3734, 3734), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1912, 1912), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.subnet.addr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2435, 2435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), "\\r\\n", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4462, 4462), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.stream_data.x_sidin,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3653, 3653), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.string_val,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (399, 399), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, tmp, sizeof(tmp), " \\t", &result);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3119, 3119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr = sdp_getnextstrtok(ptr, attr_p->attr.msid.appdata,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5008, 5008), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_attr.c', 'desc': "Dereference of null pointer (loaded from variable 'fmtp_ptr')", 'code': "if (*fmtp_ptr == '\\n') {", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1391, 1391), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs12/p12dec.c': [{'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (549, 549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'valid' is never read", 'code': 'valid = PR_TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs12/p12dec.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_ASN1DecodeItemSEC_ASN1DecodeItem_Util(pfx->poolp, asafe,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestFilePreferencesUnix.cpp': [{'fname': 'xpcom/tests/gtest/TestFilePreferencesUnix.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = blacklistedFile->Create(nsIFile::NORMAL_FILE_TYPE, 0666);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/tzfmt.cpp': [{'fname': 'intl/icu/source/i18n/tzfmt.cpp', 'desc': "Value stored to 'numDigits' is never read", 'code': 'numDigits = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2131, 2131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/dictbe.cpp': [{'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (916, 916), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (273, 273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictbe.cpp', 'desc': "Value stored to 'wordsMatched' is never read", 'code': 'wordsMatched = 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (707, 707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/mtransport/third_party/nICEr/src/stun/stun_codec.c': [{'fname': 'media/mtransport/third_party/nICEr/src/stun/stun_codec.c', 'desc': "Value stored to 'padding_bytes' is never read", 'code': 'padding_bytes = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-clip.c': [{'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->unbounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&clip_path->extents,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (397, 397), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_clip_apply_clip_path (clip, path->prev);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents->bounded, &rect);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1428, 1428), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-clip.c', 'desc': "Value stored to 'clip_extents' during its initialization is never read", 'code': 'const cairo_rectangle_int_t *clip_extents = &clip_path->extents;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/jar/jarsign.c': [{'fname': 'security/nss/lib/jar/jarsign.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7AddSigningTime(cinfo);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (237, 237), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/hash_longest_match_quickly_inc.h': [{'fname': 'modules/brotli/enc/hash_longest_match_quickly_inc.h', 'desc': "Value stored to 'compare_char' is never read", 'code': 'compare_char = data[cur_ix_masked + best_len];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/third_party/gflags/src/gflags.cc': [{'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags.cc', 'desc': "Value stored to 'program_name' is never read", 'code': 'program_name = (program_name == NULL__null ? (*argv)[0] : program_name+1);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1020, 1020), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/imgutils.c': [{'fname': 'media/ffvpx/libavutil/imgutils.c', 'desc': "Value stored to 'dst_size' is never read", 'code': 'dst_size = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (522, 522), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/base/RestyleManager.cpp': [{'fname': 'layout/base/RestyleManager.cpp', 'desc': "Value stored to 'frame' is never read", 'code': 'frame = content->GetPrimaryFrame();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1484, 1484), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (857, 857), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/analog_agc.c', 'desc': "Value stored to 'tmp32' is never read", 'code': 'tmp32 = inMicLevelTmp - stt->minLevel;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (960, 960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc': [{'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (123, 123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/source_line_resolver_base.cc', 'desc': "Value stored to 'error_code' is never read", 'code': 'error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-tee-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (639, 639), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (596, 596), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (613, 613), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (586, 586), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (626, 626), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-tee-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (619, 619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (307, 307), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/fft.c', 'desc': "Value stored to 'ee' is never read", 'code': 'ee = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c': [{'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'result' is never read", 'code': 'result = SDP_INVALID_TOKEN_ORDERING;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1141, 1141), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1096, 1096), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'last_token' is never read", 'code': 'last_token = (sdp_token_e)i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1144, 1144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1057, 1057), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_main.c', 'desc': "Value stored to 'end_found' is never read", 'code': 'end_found = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1103, 1103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'image/decoders/icon/nsIconURI.cpp': [{'fname': 'image/decoders/icon/nsIconURI.cpp', 'desc': "Value stored to 'foundInterface' is never read", 'code': 'foundInterface = static_cast<nsIURI*>(this);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (63, 63), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/cmd/certutil/certext.c': [{'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = GetString(arena, "Enter value for the authCertSerial field, "', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1133, 1133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/cmd/certutil/certext.c', 'desc': "The right operand of '>>' is a garbage value", 'code': 'keyUsage |= (0x80 >> value);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-scaled-font-subsets.c': [{'fname': 'gfx/cairo/cairo/src/cairo-scaled-font-subsets.c', 'desc': "Value stored to 'type1_font' is never read", 'code': 'type1_font = FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (766, 766), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/uniset_props.cpp': [{'fname': 'intl/icu/source/common/uniset_props.cpp', 'desc': "Value stored to 'lastItem' is never read", 'code': 'lastItem = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (417, 417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/double-conversion-double-to-string.cpp': [{'fname': 'intl/icu/source/i18n/double-conversion-double-to-string.cpp', 'desc': "Value stored to 'fast_worked' is never read", 'code': 'fast_worked = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (435, 435), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1229, 1229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3198, 3198), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1279, 1279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2494, 2494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2503, 2503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1040, 1040), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3131, 3131), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1119, 1119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1366, 1366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_MATRIX);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1374, 1374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, _cairo_error (CAIRO_STATUS_SURFACE_FINISHED));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1170, 1170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3164, 3164), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3113, 3113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2615, 2615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3224, 3224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1194, 1194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (surface, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3125, 3125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3256, 3256), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (730, 730), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2529, 2529), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2540, 2540), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/entropy_coding.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1901, 1901), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/manager/ssl/tests/unit/tlsserver/lib/TLSServer.cpp': [{'fname': 'security/manager/ssl/tests/unit/tlsserver/lib/TLSServer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ReplyToRequest(&conn);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (337, 337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-xlib-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3589, 3589), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3549, 3549), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3543, 3543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModePrecise0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'precision' is never read", 'code': 'precision = PolyModeImprecise1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1109, 1109), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3632, 3632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3583, 3583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1203, 1203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3619, 3619), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (&surface->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1456, 1456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3537, 3537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (abstract_surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3595, 3595), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "Access to field 'grayscale_font' results in a dereference of a null pointer (loaded from variable 'font_private')", 'code': 'needs_font = !font_private->grayscale_font;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4722, 4722), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-xlib-surface.c', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (xtraps[0].left.p1.y < xtraps[0].left.p2.y) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2973, 2973), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/webbrowserpersist/nsWebBrowserPersist.cpp': [{'fname': 'dom/webbrowserpersist/nsWebBrowserPersist.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dataDirParent->GetParent(getter_AddRefs(newDataDirParent));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1526, 1526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/base/nsAsyncRedirectVerifyHelper.cpp': [{'fname': 'netwerk/base/nsAsyncRedirectVerifyHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = DelegateOnChannelRedirect(sink, mOldChan, mNewChan, mFlags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (265, 265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/harfbuzz/src/hb-ot-shape-complex-myanmar-machine.hh': [{'fname': 'gfx/harfbuzz/src/hb-ot-shape-complex-myanmar-machine.hh', 'desc': "Value stored to 'te' is never read", 'code': 'te = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/loclikelysubtags.cpp': [{'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/loclikelysubtags.cpp', 'desc': "Value stored to 'state' is never read", 'code': 'state = iter.getState64();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-pdf-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _get_source_surface_size (source, &surface_entry->width,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1185, 1185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (null_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4434, 4434), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (525, 525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (output);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (532, 532), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (519, 519), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2788, 2788), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '4th function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->output,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2587, 2587), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-pdf-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': 'cairo_matrix_translate_moz_cairo_matrix_translate (&pdf_p2d, 0.0, height);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3383, 3383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-ps-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NULL_POINTER);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1418, 1418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status2' is never read", 'code': 'status2 = _cairo_output_stream_destroy (string_array_stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2052, 2052), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (surface->stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1006, 1006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1154, 1154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_pdf_operators_flush (&surface->pdf_operators);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3784, 3784), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1437, 1437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1430, 1430), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1147, 1147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, CAIRO_STATUS_INVALID_DSC_COMMENT);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1423, 1423), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1134, 1134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_surface_set_error (surface, target->status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1142, 1142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_output_stream_destroy (stream);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1012, 1012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (stops[0].offset > COLOR_STOP_EPSILON1e-6) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3108, 3108), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ps-surface.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_output_stream_printf (surface->stream,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3026, 3026), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp': [{'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' is never read", 'code': 'trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/mathml/nsMathMLmmultiscriptsFrame.cpp', 'desc': "Value stored to 'trySupScriptShift' during its initialization is never read", 'code': 'nscoord trySupScriptShift = supScriptShift;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (297, 297), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/protocol/http/nsCORSListenerProxy.cpp': [{'fname': 'netwerk/protocol/http/nsCORSListenerProxy.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = http->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-analysis-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (668, 668), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (282, 282), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, &source_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &glyph_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (584, 584), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (&surface->base, extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-analysis-surface.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, &mask_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (463, 463), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/decode.c', 'desc': "Value stored to 'len' is never read", 'code': 'len = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (267, 267), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/do_plc.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/do_plc.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (279, 279), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/find/nsFind.cpp': [{'fname': 'toolkit/components/find/nsFind.cpp', 'desc': "Value stored to 'prevChar' is never read", 'code': 'prevChar = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (645, 645), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/dictionarydata.cpp': [{'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (236, 236), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (238, 238), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (216, 216), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/dictionarydata.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/profile/nsToolkitProfileService.cpp': [{'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1764, 1764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/profile/nsToolkitProfileService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = localDir->SetRelativeDescriptor(mTempData, filePath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (885, 885), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-region.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/libpixman/src/pixman-region.c', 'desc': "Value stored to 'part_out' is never read", 'code': 'part_out = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2218, 2218), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/jit/ValueNumbering.cpp': [{'fname': 'js/src/jit/ValueNumbering.cpp', 'desc': "Value stored to 'def' is never read", 'code': 'def = rep;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (865, 865), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/sksl/SkSLByteCodeGenerator.cpp': [{'fname': 'gfx/skia/skia/src/sksl/SkSLByteCodeGenerator.cpp', 'desc': "Value stored to 'discard' is never read", 'code': 'discard = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-ft-font.c': [{'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3360, 3360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3352, 3352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Value stored to 'best_i' is never read", 'code': 'best_i = i;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (807, 807), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "Access to field 'lock_count' results in a dereference of a null pointer (loaded from variable 'unscaled')", 'code': 'assert (unscaled->lock_count > 0)do { if (!(unscaled->lock_count > 0)) fprintf(stderr, "Assertion failed at %s:%d: %s\\n", "/home/edwjchen/gecko-dev/gfx/cairo/cairo/src/cairo-ft-font.c", 745, "unscaled->lock_count > 0"); } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (745, 745), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': 'Undefined or garbage value returned to caller', 'code': 'return font_face;', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (3222, 3222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (unscaled == NULL)(unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3214, 3214), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (unlikely (status || unscaled == NULL)(status || unscaled == ((void*)0))) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3147, 3147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'font_face = _cairo_ft_font_face_create (unscaled, &ft_options);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3299, 3299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-ft-font.c', 'desc': '3rd function call argument is an uninitialized value', 'code': '_cairo_scaled_glyph_set_surface (scaled_glyph,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2460, 2460), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/fft.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/fft.c', 'desc': "Value stored to 'ispan' is never read", 'code': 'ispan = kspan;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (485, 485), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/pr/src/misc/prtime.c': [{'fname': 'nsprpub/pr/src/misc/prtime.c', 'desc': "Value stored to 'zone' is never read", 'code': 'zone = TT_GMT;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1669, 1669), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/url-classifier/Classifier.cpp': [{'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tempDirectory->AppendNative(tempDirName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/url-classifier/Classifier.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aParentDir->Clone(getter_AddRefs(tempDirectory));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (564, 564), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediate_set' is never read", 'code': 'immediate_set = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (500, 500), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/libpref/Preferences.cpp': [{'fname': 'modules/libpref/Preferences.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4006, 4006), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo.c': [{'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (&extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (712, 712), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'was_previous' is never read", 'code': 'was_previous = scaled_font == cr->gstate->previous_scaled_font;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3220, 3220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2863, 2863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_surface_get_extents (parent_surface, &extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (709, 709), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/Location.cpp': [{'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (503, 503), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/Location.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = GetURI(getter_AddRefs(uri), true);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (188, 188), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/glslang_tab.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/glslang_tab.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2223, 2223), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/manager/ssl/nsNTLMAuthModule.cpp': [{'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteDWORD(cursor, msg.flags & NTLM_TYPE1_FLAGS(0x00000001 | 0x00000002 | 0x00000004 | 0x00000200 | 0x00008000 | 0x00080000));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (902, 902), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNTLMAuthModule.cpp', 'desc': "Value stored to 'cursor' is never read", 'code': 'cursor = WriteSecBuf(cursor, 0, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (381, 381), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/manager/ssl/nsNSSASN1Object.cpp': [{'fname': 'security/manager/ssl/nsNSSASN1Object.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = buildASN1ObjectFromDER(data, (len == 0) ? end : data + len,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (152, 152), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/cache2/CacheIndex.cpp': [{'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2240, 2240), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheIndex.cpp', 'desc': "Value stored to 'pos' is never read", 'code': 'pos = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2369, 2369), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/media/mediasource/MediaSourceDecoder.cpp': [{'fname': 'dom/media/mediasource/MediaSourceDecoder.cpp', 'desc': "Value stored to 'checkedDuration' is never read", 'code': 'checkedDuration = INT64_MAX(9223372036854775807L) - 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (222, 222), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/vp8_impl.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/vp8_impl.cc', 'desc': "Value stored to 'img' is never read", 'code': 'img = vpx_codec_get_frame(decoder_, &iter);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1171, 1171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/media/systemservices/video_engine/browser_capture_impl.h': [{'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceNameUTF8' is never read", 'code': 'deviceNameUTF8 = const_cast<char*>(kDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'deviceUniqueIdUTF8' is never read", 'code': 'deviceUniqueIdUTF8 = const_cast<char*>(kUniqueDeviceName);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (30, 30), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/media/systemservices/video_engine/browser_capture_impl.h', 'desc': "Value stored to 'productUniqueIdUTF8' is never read", 'code': 'productUniqueIdUTF8 = const_cast<char*>(kProductUniqueId);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (31, 31), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-surface-snapshot.c': [{'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, clone->base.status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (154, 154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-surface-snapshot.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'extensions/auth/nsAuthGSSAPI.cpp': [{'fname': 'extensions/auth/nsAuthGSSAPI.cpp', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = gss_display_status_ptr((gss_display_status_type)*gssFuncs[0].func)(&new_stat, maj_stat, GSS_C_GSS_CODE1,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (235, 235), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-polygon.c': [{'fname': 'gfx/cairo/cairo/src/cairo-polygon.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_polygon_line_to (polygon, &polygon->first_point);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (480, 480), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'docshell/base/nsDocShell.cpp': [{'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "sslv3Used";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3410, 3410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'docshell/base/nsDocShell.cpp', 'desc': "Value stored to 'error' is never read", 'code': 'error = "weakCryptoUsed";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/pathops/SkPathOpsCommon.cpp': [{'fname': 'gfx/skia/skia/src/pathops/SkPathOpsCommon.cpp', 'desc': "Value stored to 'segment' is never read", 'code': 'segment = angle->segment();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/generic/nsFrame.cpp': [{'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8525, 8525), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9123, 9123), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = NS_NewFrameTraversal(getter_AddRefs(frameTraversal),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8633, 8633), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsFrame.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result =', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (9346, 9346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/rbbi.cpp': [{'fname': 'intl/icu/source/common/rbbi.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1227, 1227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'err' is never read", 'code': 'err = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1793, 1793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1118, 1118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'poss' is never read", 'code': 'poss = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (933, 933), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/entropy_coding.c', 'desc': "Value stored to 'posg' is never read", 'code': 'posg = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1337, 1337), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/pdf/SkPDFDevice.cpp': [{'fname': 'gfx/skia/skia/src/pdf/SkPDFDevice.cpp', 'desc': "Value stored to 'pathIsMutable' is never read", 'code': 'pathIsMutable = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/prototype/PrototypeDocumentContentSink.cpp': [{'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (706, 706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(scriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/prototype/PrototypeDocumentContentSink.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ExecuteScript(aScriptProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (684, 684), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs7/p7common.c': [{'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pkcs7/p7common.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECSuccess;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (451, 451), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'uriloader/prefetch/nsOfflineCacheUpdate.cpp': [{'fname': 'uriloader/prefetch/nsOfflineCacheUpdate.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cache->Discard();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2051, 2051), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/decode.c': [{'fname': 'media/ffvpx/libavcodec/decode.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (303, 303), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'startupcache/StartupCache.cpp': [{'fname': 'startupcache/StartupCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(NS_ConvertUTF8toUTF16(env), false,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/usprep.cpp': [{'fname': 'intl/icu/source/common/usprep.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (531, 531), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/vr/service/OpenVRSession.cpp': [{'fname': 'gfx/vr/service/OpenVRSession.cpp', 'desc': "Value stored to 'hand' is never read", 'code': 'hand = dom::GamepadHand::_empty;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (132, 132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs12/p12e.c': [{'fname': 'security/nss/lib/pkcs12/p12e.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SEC_PKCS7EncoderFinish(innerP7ecx, p12ecx->p12exp->pwfn,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1815, 1815), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_parser.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_parser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2135, 2135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/cache2/CacheFileIOManager.cpp': [{'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_USER_PROFILE_LOCAL_50_DIR"ProfLD",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1316, 1316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2156, 2156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mTrashDirEnumerator->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3414, 3414), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/cache2/CacheFileIOManager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_GetSpecialDirectory(NS_APP_CACHE_PARENT_DIR"cachePDir",', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1311, 1311), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/decNumber.cpp': [{'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=rhs->bits; /* be clean */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3943, 3943), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=1; /* show have a unit .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4643, 4643), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'accunits' is never read", 'code': 'accunits=D2U(accdigits)((accdigits)<=49?d2utable[accdigits]:((accdigits)+1 -1)/1); /* and recalculate the units for copy */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4803, 4803), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "Value stored to 'bits' is never read", 'code': 'bits=lhs->bits; /* .. */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3907, 3907), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (cmp.lsu[0]==0) a->exponent=0; /* yes, exact 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (5813, 5813), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/decNumber.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if (*var1==0 && var1units==1) { /* residue is 0 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4622, 4622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/base/nsDocumentViewer.cpp': [{'fname': 'layout/base/nsDocumentViewer.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = InitPresentationStuff(mDocument->MayStartLayout());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2176, 2176), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/pp.c': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/pp.c', 'desc': "Value stored to 'search_start' is never read", 'code': 'search_start = shader;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/x86_disasm.c': [{'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/x86_disasm.c', 'desc': "Value stored to 'next_addr' is never read", 'code': 'next_addr = -1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/cng/webrtc_cng.cc', 'desc': "Value stored to 'targetEnergy' is never read", 'code': 'targetEnergy = dec_used_energy_;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-truetype-subset.c': [{'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_truetype_font_set_error (font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (319, 319), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Value stored to 'glyph_array' is never read", 'code': 'glyph_array = &(range_offset[num_segments]);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1220, 1220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-truetype-subset.c', 'desc': "Access to field 'scaled_font_subset' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'for (i = 0; i < font->scaled_font_subset->num_glyphs; i++) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1059, 1059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/layers/apz/src/AsyncPanZoomController.cpp': [{'fname': 'gfx/layers/apz/src/AsyncPanZoomController.cpp', 'desc': "Value stored to 'needContentRepaint' is never read", 'code': 'needContentRepaint = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4681, 4681), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-type1-subset.c': [{'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'num_charstrings' is never read", 'code': 'num_charstrings = strtol (p, &glyph_count_end, 10);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1039, 1039), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-subset.c', 'desc': "Value stored to 'status_ignored' is never read", 'code': 'status_ignored = _cairo_type1_font_subset_fini (&font);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1392, 1392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'extensions/spellcheck/hunspell/src/affixmgr.cxx': [{'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numbreak' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4312, 4312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'nummap' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4209, 4209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'extensions/spellcheck/hunspell/src/affixmgr.cxx', 'desc': "Value stored to 'numdefcpd' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4106, 4106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/locid.cpp': [{'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'separator' is never read", 'code': 'separator = field[0] = fullName;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (602, 602), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'size' is never read", 'code': 'size += ksize + 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'const char* end = begin;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (708, 708), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/locid.cpp', 'desc': 'Returning null reference', 'code': 'return localeCache[locid]; /*operating on NULL*/', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc': [{'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_rsid' is never read", 'code': 'has_rsid = packet.GetExtension<RtpStreamId>(&packet_rsid);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/call/rtp_demuxer.cc', 'desc': "Value stored to 'has_mid' during its initialization is never read", 'code': 'bool has_mid = packet.GetExtension<RtpMid>(&packet_mid);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (171, 171), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/smime/cmsrecinfo.c': [{'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.kekRecipientInfo.encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (566, 566), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'enckey' is never read", 'code': 'enckey = &(ri->ri.keyAgreeRecipientInfo.recipientEncryptedKeys[subIndex]->encKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsrecinfo.c', 'desc': "Value stored to 'encalgtag' is never read", 'code': 'encalgtag = SECOID_GetAlgorithmTagSECOID_GetAlgorithmTag_Util(&(ri->ri.kekRecipientInfo.keyEncAlg));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (565, 565), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/printing/nsPrintJob.cpp': [{'fname': 'layout/printing/nsPrintJob.cpp', 'desc': "Value stored to 'remotePrintJobListening' is never read", 'code': 'remotePrintJobListening = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-scaled-font.c': [{'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1513, 1513), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-scaled-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (scaled_font, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1429, 1429), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/debugger/Debugger.cpp': [{'fname': 'js/src/debugger/Debugger.cpp', 'desc': "Value stored to 'dbg' is never read", 'code': 'dbg = next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (3858, 3858), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/uresbund.cpp': [{'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': "Value stored to 'hasRealData' is never read", 'code': 'hasRealData = TRUE1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (740, 740), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1375, 1375), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1706, 1706), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uresbund.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return ures_toUTF8String(s16, length16, dest, pLength, forceCopy, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2204, 2204), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs7/p7decode.c': [{'fname': 'security/nss/lib/pkcs7/p7decode.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CERT_SaveSMimeProfile(cert, profile, encoded_stime);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1707, 1707), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/places/FaviconHelpers.cpp': [{'fname': 'toolkit/components/places/FaviconHelpers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = stmt->GetInt32(0, &width);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (433, 433), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/media/ogg/OggDemuxer.cpp': [{'fname': 'dom/media/ogg/OggDemuxer.cpp', 'desc': "Value stored to 'mustBackoff' is never read", 'code': 'mustBackoff = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1989, 1989), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-spans.c': [{'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scan_converter_set_error (converter, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-spans.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_span_renderer_set_error (renderer, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/xslt/xslt/txPatternParser.cpp': [{'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/xslt/xslt/txPatternParser.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = unionPattern->addPattern(locPath);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/xul/nsSprocketLayout.cpp': [{'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = aBoxSizes;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (685, 685), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/xul/nsSprocketLayout.cpp', 'desc': "Value stored to 'last' is never read", 'code': 'last = currentBox;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (688, 688), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pki/pkibase.c': [{'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = PR_SUCCESS;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (789, 789), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pki/pkibase.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = nssPKIObject_AddInstance(node->object, instance);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (769, 769), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/putil.cpp': [{'fname': 'intl/icu/source/common/putil.cpp', 'desc': "Value stored to 'sizeFileRead' is never read", 'code': 'sizeFileRead = fread(tzInfo->defaultTZBuffer, 1, tzInfo->defaultTZFileSize, tzInfo->defaultTZFilePtr);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (923, 923), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'res' is never read", 'code': 'res = in.Read(buf, 2);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (652, 652), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'len' is never read", 'code': 'len = wav.Read(&_wavFormatObj, sizeof(WAVE_FMTINFO_header));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (118, 118), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/media_file/media_file_utility.cc', 'desc': "Value stored to 'dataFound' is never read", 'code': 'dataFound = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/vm/Realm.cpp': [{'fname': 'js/src/vm/Realm.cpp', 'desc': "Value stored to 'obj' is never read", 'code': 'obj = SetNewObjectMetadata(cx_, obj);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (827, 827), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/filteredbrk.cpp': [{'fname': 'intl/icu/source/common/filteredbrk.cpp', 'desc': "Value stored to 'uch' is never read", 'code': 'uch = utext_next32utext_next32_67(fText.getAlias());', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (274, 274), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': "Value stored to 'samplingFreq' is never read", 'code': 'samplingFreq = 8000;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (410, 410), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearNoisyFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (541, 541), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtcSpl_FreeRealFFT(aecm->real_fft);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (547, 547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->nearCleanFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (542, 542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->outFrameBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (543, 543), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/aecm_core.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeDelayEstimator(aecm->delay_estimator);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (545, 545), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestStringStream.cpp': [{'fname': 'xpcom/tests/gtest/TestStringStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (43, 43), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/jit/CodeGenerator.cpp': [{'fname': 'js/src/jit/CodeGenerator.cpp', 'desc': "Value stored to 'op' is never read", 'code': 'op = JSOp::Eq;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (8886, 8886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/number_utils.cpp': [{'fname': 'intl/icu/source/i18n/number_utils.cpp', 'desc': "Value stored to 'patternKey' is never read", 'code': 'patternKey = "decimalFormat"; // silence compiler error', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'widget/gtk/nsGtkKeyUtils.cpp': [{'fname': 'widget/gtk/nsGtkKeyUtils.cpp', 'desc': "Value stored to 'handlingState' is never read", 'code': 'handlingState = KeyHandlingState::eNotHandledButEventDispatched;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1494, 1494), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/cache2/CacheStorageService.cpp': [{'fname': 'netwerk/cache2/CacheStorageService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = CacheEntry::HashingKey(contextKey, aIdExtension, aURI, fileKey);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1646, 1646), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 16;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2810, 2810), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl_types.cpp', 'desc': "Value stored to 'vector_elements' is never read", 'code': 'vector_elements = 8;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2808, 2808), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11skey.c': [{'fname': 'security/nss/lib/pk11wrap/pk11skey.c', 'desc': "Value stored to 'type' is never read", 'code': 'type = slot->wrapMechanism;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (378, 378), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/harfbuzz/src/hb-ot-layout-gsub-table.hh': [{'fname': 'gfx/harfbuzz/src/hb-ot-layout-gsub-table.hh', 'desc': "Value stored to 'count' is never read", 'code': 'count = substitute.len;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1187, 1187), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/freebl/mpi/montmulf.c': [{'fname': 'security/nss/lib/freebl/mpi/montmulf.c', 'desc': "Value stored to 't' is never read", 'code': 't = (a >> 32);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (107, 107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/payments/PaymentRequestService.cpp': [{'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = LaunchUIAction(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/payments/PaymentRequestService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = showResponse->Init(aRequestId, responseStatus, EmptyString(), nullptr,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/xre/nsXREDirProvider.cpp': [{'fname': 'toolkit/xre/nsXREDirProvider.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = tmp;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'chrome/nsChromeProtocolHandler.cpp': [{'fname': 'chrome/nsChromeProtocolHandler.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = url->GetPathQueryRef(path);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (174, 174), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/lib/libc/src/plvrsion.c': [{'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = rcsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (90, 90), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'nsprpub/lib/libc/src/plvrsion.c', 'desc': "Value stored to 'dummy' is never read", 'code': 'dummy = sccsid;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (91, 91), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/jit/BaselineBailouts.cpp': [{'fname': 'js/src/jit/BaselineBailouts.cpp', 'desc': "Value stored to 'prevFramePtr' is never read", 'code': 'prevFramePtr = builder.virtualPointerAtStackOffset(0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1197, 1197), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'config/nsinstall.c': [{'fname': 'config/nsinstall.c', 'desc': "Value stored to 'tdlen' is never read", 'code': 'tdlen = strlen(todir);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'config/nsinstall.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'if (ftruncate(tofd, sb.st_size) < 0) fail("cannot truncate %s", toname);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (153, 153), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-user-font.c': [{'fname': 'gfx/cairo/cairo/src/cairo-user-font.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_scaled_font_set_error (&scaled_font->base, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (291, 291), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/utils/SkPolyUtils.cpp': [{'fname': 'gfx/skia/skia/src/utils/SkPolyUtils.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex = currIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (211, 211), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs12/p12d.c': [{'fname': 'security/nss/lib/pkcs12/p12d.c', 'desc': "Value stored to 'setNickname' is never read", 'code': 'setNickname = PR_FALSE0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2248, 2248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/protocol/http/nsHttpChannel.cpp': [{'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (5075, 5075), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/protocol/http/nsHttpChannel.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = intercepted->Init(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (10132, 10132), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/manager/ssl/nsNSSCertHelper.cpp': [{'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = ProcessRawBytes(&extension->value, extvalue, false);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1393, 1393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/manager/ssl/nsNSSCertHelper.cpp', 'desc': "Value stored to 'comma' is never read", 'code': 'comma = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1273, 1273), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/cache/Manager.cpp': [{'fname': 'dom/cache/Manager.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = db::GetKnownBodyIds(aConn, knownBodyIdList);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_search.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_search.c', 'desc': "Value stored to 'range' is never read", 'code': 'range = WebRtcIlbcfix_kSearchRange[block][stage];', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (241, 241), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "Value stored to 'yymsg' is never read", 'code': 'yymsg = "Deleting";', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (953, 953), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if ((yyvsp[-3]) != 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1248, 1248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/preprocessor/ExpressionParser.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'if ((yyvsp[-3]) == 0)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1280, 1280), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/neteq/neteq_impl.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/neteq/neteq_impl.cc', 'desc': "Value stored to 'num_output_samples' is never read", 'code': 'num_output_samples = AudioFrame::kMaxDataSizeSamples;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (986, 986), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/islamcal.cpp': [{'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (618, 618), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/islamcal.cpp', 'desc': "Value stored to 'startDate' is never read", 'code': 'startDate = monthStart(year, month);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (651, 651), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/pkcs11.c': [{'fname': 'security/nss/lib/softoken/pkcs11.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sftkdb_CheckPasswordNull(handle, &tokenRemoved);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4135, 4135), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/xul/nsXULPrototypeCache.cpp': [{'fname': 'dom/xul/nsXULPrototypeCache.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = PutPrototype(newProto);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/ycbcr/yuv_convert.cpp': [{'fname': 'gfx/ycbcr/yuv_convert.cpp', 'desc': "Value stored to 'source_dy' is never read", 'code': 'source_dy = original_dx;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (426, 426), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/notification/Notification.cpp': [{'fname': 'dom/notification/Notification.cpp', 'desc': "Value stored to 'blocked' is never read", 'code': 'blocked = true;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (528, 528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/style/nsStyleTransformMatrix.cpp': [{'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'D' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (755, 755), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/style/nsStyleTransformMatrix.cpp', 'desc': "Value stored to 'C' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (754, 754), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ucnv_io.cpp': [{'fname': 'intl/icu/source/common/ucnv_io.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/stsearch.cpp': [{'fname': 'intl/icu/source/i18n/stsearch.cpp', 'desc': "Value stored to 'status' is never read", 'code': 'status = U_MEMORY_ALLOCATION_ERROR;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libsoundtouch/src/RateTransposer.cpp': [{'fname': 'media/libsoundtouch/src/RateTransposer.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = pTransposer->transpose(outputBuffer, inputBuffer);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (143, 143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/xpconnect/src/XPCShellImpl.cpp': [{'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewLocalFile(absolutePath, false, getter_AddRefs(location));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/xpconnect/src/XPCShellImpl.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (181, 181), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/generic/nsSubDocumentFrame.cpp': [{'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocRootFrame' is never read", 'code': 'subdocRootFrame = frame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'layout/generic/nsSubDocumentFrame.cpp', 'desc': "Value stored to 'subdocView' is never read", 'code': 'subdocView = nextView;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (248, 248), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-toy-font-face.c': [{'fname': 'gfx/cairo/cairo/src/cairo-toy-font-face.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_error (CAIRO_STATUS_NO_MEMORY);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (321, 321), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11slot.c': [{'fname': 'security/nss/lib/pk11wrap/pk11slot.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = PK11_GETTAB(slot)((CK_FUNCTION_LIST_3_0_PTR)((slot)->functionList))->C_SeedRandom(slot->session,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1404, 1404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jcparam.c': [{'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_a_scan(scanptr, 0, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (526, 526), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jcparam.c', 'desc': "Value stored to 'scanptr' is never read", 'code': 'scanptr = fill_scans(scanptr, ncomps, 1, 63, 1, 0);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (537, 537), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-device.c': [{'fname': 'gfx/cairo/cairo/src/cairo-device.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_device_set_error (device, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/media/encoder/OpusTrackEncoder.cpp': [{'fname': 'dom/media/encoder/OpusTrackEncoder.cpp', 'desc': "Value stored to 'result' is never read", 'code': 'result = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestStorageStream.cpp': [{'fname': 'xpcom/tests/gtest/TestStorageStream.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = cloneable->Clone(getter_AddRefs(clone));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/nsDocumentEncoder.cpp': [{'fname': 'dom/base/nsDocumentEncoder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = EncodeToString(buf);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1217, 1217), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_function.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ast_function.cpp', 'desc': "Value stored to 'ir' is never read", 'code': 'Could not parse from HTML', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (363, 363), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/cryptohi/secvfy.c': [{'fname': 'security/nss/lib/cryptohi/secvfy.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = sec_DecodeRSAPSSParams(&tmpArena.arena, param,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/srtp/src/srtp/srtp.c': [{'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = srtp_auth_update(session_keys->rtp_auth, (uint8_t *)auth_start,(((session_keys->rtp_auth)->type)->update((session_keys->rtp_auth)->state, ((uint8_t *)auth_start), (*pkt_octet_len - tag_len - mki_size)))', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2605, 2605), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/srtp/src/srtp/srtp.c', 'desc': "Value stored to 'rtp_xtn_hdr_keylen' is never read", 'code': 'rtp_xtn_hdr_keylen = rtp_keylen;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1050, 1050), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/places/nsNavHistory.cpp': [{'fname': 'toolkit/components/places/nsNavHistory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = aRow->GetString(kGetInfoIndex_ItemTags, tags);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2968, 2968), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'storage/mozStorageConnection.cpp': [{'fname': 'storage/mozStorageConnection.cpp', 'desc': "Value stored to 'srv' is never read", 'code': 'srv = ::sqlite3_close(aNativeConnection);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1073, 1073), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/collationfastlatinbuilder.cpp': [{'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'prevSecondary' is never read", 'code': 'prevSecondary = s;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (509, 509), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/collationfastlatinbuilder.cpp', 'desc': "Value stored to 'ter' is never read", 'code': 'ter = CollationFastLatin::COMMON_TER;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (510, 510), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'image/test/gtest/TestAnimationFrameBuffer.cpp': [{'fname': 'image/test/gtest/TestAnimationFrameBuffer.cpp', 'desc': "Value stored to 'restartDecoder' is never read", 'code': 'restartDecoder = buffer.MarkComplete(IntRect(0, 0, 1, 1));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (667, 667), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/dtoa.c': [{'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2103, 2103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/dtoa.c', 'desc': "Value stored to 'dsign' is never read", 'code': 'dsign = 1 - dsign;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (2163, 2163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/pkcs11c.c': [{'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6055, 6055), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_forceAttribute(key, CKA_VALUE0x00000011UL, okm, keySize);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (6914, 6914), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Value stored to 'crv' is never read", 'code': 'crv = sftk_AddAttributeType(key, CKA_NSS_PQG_COUNTER((0x80000000UL | 0x4E534350) + 20),', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (4154, 4154), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/softoken/pkcs11c.c', 'desc': "Dereference of null pointer (loaded from variable 'phKey')", 'code': '*phKey = key->handle;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (8515, 8515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11obj.c': [{'fname': 'security/nss/lib/pk11wrap/pk11obj.c', 'desc': "Value stored to 'nextObject' is never read", 'code': 'nextObject = objects->next;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1615, 1615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/string/nsSubstring.cpp': [{'fname': 'xpcom/string/nsSubstring.cpp', 'desc': "Value stored to 'count' is never read", 'code': 'count = mRefCount.load(std::memory_order_acquire);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/protocol/websocket/WebSocketChannel.cpp': [{'fname': 'netwerk/protocol/websocket/WebSocketChannel.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mHttpChannel->GetResponseHeader(', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2550, 2550), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/pr/src/md/unix/uxshm.c': [{'fname': 'nsprpub/pr/src/md/unix/uxshm.c', 'desc': "Value stored to 'rc' is never read", 'code': 'rc = PR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (105, 105), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/main/source/isac.c', 'desc': "Value stored to 'totalStreamLen' is never read", 'code': 'totalStreamLen = streamLenLB;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (835, 835), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-recording-surface.c': [{'fname': 'gfx/cairo/cairo/src/cairo-recording-surface.c', 'desc': "Value stored to 'status' is never read", 'code': 'status = _cairo_surface_set_error (surface, status);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1107, 1107), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/nsFocusManager.cpp': [{'fname': 'dom/base/nsFocusManager.cpp', 'desc': "Value stored to 'startFrame' is never read", 'code': 'startFrame = newCaretFrame;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2960, 2960), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ucnvbocu.cpp': [{'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (852, 852), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'sourceIndex' is never read", 'code': 'sourceIndex=nextSourceIndex;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1049, 1049), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': "Value stored to 'targetCapacity' is never read", 'code': 'targetCapacity=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (623, 623), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ucnvbocu.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (diff<<2)|count;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (919, 919), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'extensions/spellcheck/hunspell/glue/mozHunspell.cpp': [{'fname': 'extensions/spellcheck/hunspell/glue/mozHunspell.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_NewNativeLocalFile(extDictPath, true, getter_AddRefs(dictDir));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (239, 239), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/base/nsInputStreamPump.cpp': [{'fname': 'netwerk/base/nsInputStreamPump.cpp', 'desc': "Value stored to 'nextState' is never read", 'code': 'nextState = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (437, 437), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/pitch_estimator_c.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/pitch_estimator_c.c', 'desc': "Value stored to 'x' is never read", 'code': 'x = in + PITCH_MAX_LAG140 / 2 + 2;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (29, 29), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ucnv_bld.cpp': [{'fname': 'intl/icu/source/common/ucnv_bld.cpp', 'desc': "Value stored to 'mid' is never read", 'code': 'mid = limit;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/forms/nsDateTimeControlFrame.cpp': [{'fname': 'layout/forms/nsDateTimeControlFrame.cpp', 'desc': "Value stored to 'contentBoxBSize' is never read", 'code': 'contentBoxBSize = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (116, 116), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/plugins/base/PluginFinder.cpp': [{'fname': 'dom/plugins/base/PluginFinder.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_ERROR_FAILURE;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/jit/RangeAnalysis.cpp': [{'fname': 'js/src/jit/RangeAnalysis.cpp', 'desc': "Value stored to 'first' is never read", 'code': 'first = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (470, 470), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/softoken/lowpbe.c': [{'fname': 'security/nss/lib/softoken/lowpbe.c', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = SECFailure;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1113, 1113), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/util/sha1/sha1.c': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/util/sha1/sha1.c', 'desc': "Value stored to 'a' is never read", 'code': 'a = b = c = d = e = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/normalizer2impl.cpp': [{'fname': 'intl/icu/source/common/normalizer2impl.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset=nextOffset;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2657, 2657), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "Value stored to 'stab' is never read", 'code': 'stab=WebRtcSpl_LevinsonW32_JSK(corrlo2QQ, a_LOQ11, k_vecloQ15, 8);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (821, 821), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'k16[m - 1] = (int16_t)(tmp32[m] << 3); // Q12<<3 => Q15', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (56, 56), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': "The left operand of '<<' is a garbage value", 'code': 'temp2W32 = (R_hi[1] << 16) + (R_low[1] << 1); /* R[1] in Q31 */', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/lpc_masking_model.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'K_low = (int16_t)((temp3W32 - ((int32_t)K_hi << 16)) >> 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/udata.cpp': [{'fname': 'intl/icu/source/common/udata.cpp', 'desc': "Value stored to 'didUpdate' is never read", 'code': 'didUpdate = /* no longer using this result */', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (860, 860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/cache2/CacheFileContextEvictor.cpp': [{'fname': 'netwerk/cache2/CacheFileContextEvictor.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = dirEnum->GetNextFile(getter_AddRefs(file));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (347, 347), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/utext.cpp': [{'fname': 'intl/icu/source/common/utext.cpp', 'desc': "Value stored to 'limit32' is never read", 'code': 'limit32 = si;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2547, 2547), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/plugins/base/nsPluginHost.cpp': [{'fname': 'dom/plugins/base/nsPluginHost.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = NS_OK;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1265, 1265), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/xpconnect/wrappers/WrapperFactory.cpp': [{'fname': 'js/xpconnect/wrappers/WrapperFactory.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = wn->GetScriptable()->PreCreate(wn->Native(), cx, currentScope,', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (296, 296), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/mtransport/third_party/nICEr/src/ice/ice_candidate_pair.c': [{'fname': 'media/mtransport/third_party/nICEr/src/ice/ice_candidate_pair.c', 'desc': "Value stored to '_status' is never read", 'code': '_status=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (396, 396), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/dtptngen.cpp': [{'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'startPos' is never read", 'code': 'startPos = curLoc;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2402, 2402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtptngen.cpp', 'desc': "Value stored to 'curElem' is never read", 'code': 'curElem = curElem->next.getAlias();', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (2043, 2043), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/presentation/PresentationService.cpp': [{'fname': 'dom/presentation/PresentationService.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = enumerator->GetNext(getter_AddRefs(isupports));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (683, 683), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/woff2/src/woff2_dec.cc': [{'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'offset' is never read", 'code': 'offset = Store16(dst, offset, y_max);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (306, 306), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/woff2/src/woff2_dec.cc', 'desc': "Value stored to 'dst_offset' during its initialization is never read", 'code': 'uint64_t dst_offset = first_table_offset;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1177, 1177), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/bsf.c': [{'fname': 'media/ffvpx/libavcodec/bsf.c', 'desc': "Value stored to 'ret' is never read", 'code': 'ret = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (310, 310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/sandbox/chromium/base/strings/safe_sprintf.cc': [{'fname': 'security/sandbox/chromium/base/strings/safe_sprintf.cc', 'desc': "Value stored to 'padding' is never read", 'code': 'padding = max_padding;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (469, 469), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/core/SkPath.cpp': [{'fname': 'gfx/skia/skia/src/core/SkPath.cpp', 'desc': "Value stored to 'verb' is never read", 'code': 'verb = kDone_Verb; // stop the loop', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1898, 1898), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/breakpad-client/linux/minidump_writer/cpu_set.h': [{'fname': 'toolkit/crashreporter/breakpad-client/linux/minidump_writer/cpu_set.h', 'desc': "Value stored to 'item_len' is never read", 'code': 'item_len = static_cast<size_t>(item_next - item);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/mem.c': [{'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Value stored to 'size' is never read", 'code': 'size = 1;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (125, 125), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavutil/mem.c', 'desc': "Potential leak of memory pointed to by 'tab'", 'code': 'return realloc(ptr, size + !size);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (144, 144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/bandwidth_estimator.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/isac/fix/source/bandwidth_estimator.c', 'desc': "Value stored to 'immediateSet' is never read", 'code': 'immediateSet = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (538, 538), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/smooth.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/smooth.c', 'desc': "Value stored to 'w00' is never read", 'code': 'w00 = w10 = w11 = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (47, 47), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-gstate.c': [{'fname': 'gfx/cairo/cairo/src/cairo-gstate.c', 'desc': "Value stored to 'is_empty' is never read", 'code': 'is_empty = _cairo_rectangle_intersect (extents, clip_extents);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1514, 1514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/number_modifiers.cpp': [{'fname': 'intl/icu/source/i18n/number_modifiers.cpp', 'desc': "Value stored to 'infixLength' is never read", 'code': 'infixLength = 0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (260, 260), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/reputationservice/ApplicationReputation.cpp': [{'fname': 'toolkit/components/reputationservice/ApplicationReputation.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = mQuery->GetRedirects(getter_AddRefs(redirects));', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (1417, 1417), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'ipc/testshell/XPCShellEnvironment.cpp': [{'fname': 'ipc/testshell/XPCShellEnvironment.cpp', 'desc': "Value stored to 'ok' is never read", 'code': 'ok = false;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (302, 302), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_mem_energy.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/cb_mem_energy.c', 'desc': "Value stored to 'energy' is never read", 'code': 'energy=0;', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (65, 65), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/url-classifier/nsUrlClassifierUtils.cpp': [{'fname': 'toolkit/components/url-classifier/nsUrlClassifierUtils.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv = Base64Decode(prefix, prefixBinary);', 'bug_type': 'Dead store', 'severity': 'Dead assignment', 'locs': (505, 505), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h': [{'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (778, 778), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (793, 793), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (812, 812), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/numrange_impl.cpp': [{'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'lengthInfix' is never read", 'code': 'lengthInfix += mod.apply(string, UPRV_INDEX_0(lengthPrefix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (472, 472), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/numrange_impl.cpp', 'desc': "Value stored to 'length2' is never read", 'code': 'length2 += micros2.modOuter->apply(string, UPRV_INDEX_2(lengthPrefix + length1 + lengthInfix), UPRV_INDEX_3(lengthPrefix + length1 + lengthInfix + length2), status);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (475, 475), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/video_coding/jitter_buffer.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/jitter_buffer.cc', 'desc': "Value stored to 'dropped_frames' is never read", 'code': 'dropped_frames += decodable_frames_.RecycleFramesUntilKeyFrame(', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1161, 1161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/frontend/BytecodeEmitter.cpp': [{'fname': 'js/src/frontend/BytecodeEmitter.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += ENVCOORD_SLOT_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (978, 978), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/msgpack/src/objectc.c': [{'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (334, 334), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (445, 445), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (383, 383), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (360, 360), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (408, 408), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (281, 281), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (346, 346), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/msgpack/src/objectc.c', 'desc': "Value stored to 'aux_buffer' is never read", 'code': 'aux_buffer = aux_buffer + ret;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (287, 287), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libpng/intel/filter_sse2_intrinsics.c': [{'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (324, 324), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'rb' is never read", 'code': 'rb -= 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'row' is never read", 'code': 'row += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libpng/intel/filter_sse2_intrinsics.c', 'desc': "Value stored to 'prev' is never read", 'code': 'prev += 3;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (322, 322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/vm/BytecodeUtil.cpp': [{'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (876, 876), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'pc2' is never read", 'code': 'pc2 += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1528, 1528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/BytecodeUtil.cpp', 'desc': "Value stored to 'npc' is never read", 'code': 'npc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (3059, 3059), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h': [{'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (830, 830), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (811, 811), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/cs_svg_filter.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (796, 796), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/debugger/Script.cpp': [{'fname': 'js/src/debugger/Script.cpp', 'desc': "Value stored to 'pc' is never read", 'code': 'pc += JUMP_OFFSET_LEN;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1137, 1137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h': [{'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(~(_c20_));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (819, 819), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c15_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (800, 800), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/x86_64-unknown-linux-gnu/debug/build/swgl-c304a57c071a715d/out/brush_mix_blend_ALPHA_PASS.h', 'desc': "Value stored to 'ret_mask' is never read", 'code': 'ret_mask &= ~I32(_c9_);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (785, 785), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/signaling/src/sdp/sipcc/sdp_base64.c': [{'fname': 'media/webrtc/signaling/src/sdp/sipcc/sdp_base64.c', 'desc': "Value stored to 'line_count' is never read", 'code': 'line_count += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (206, 206), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/simulcast_rate_allocator.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/video_coding/codecs/vp8/simulcast_rate_allocator.cc', 'desc': "Value stored to 'left_to_allocate' is never read", 'code': 'left_to_allocate -= allocation;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libvorbis/lib/vorbis_floor1.c': [{'fname': 'media/libvorbis/lib/vorbis_floor1.c', 'desc': "Value stored to 'y2b' is never read", 'code': 'y2b+= *y1 * *y1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (487, 487), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestSTLWrappers.cpp': [{'fname': 'xpcom/tests/gtest/TestSTLWrappers.cpp', 'desc': "Value stored to 'rv' is never read", 'code': 'rv += v.at(1) ? 1 : 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (55, 55), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/security/SRICheck.cpp': [{'fname': 'dom/security/SRICheck.cpp', 'desc': "Value stored to 'offset' is never read", 'code': 'offset += sizeof(mHashLength);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (498, 498), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-bits-image.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-bits-image.c', 'desc': "Value stored to 'x' is never read", 'code': 'x += w;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1262, 1262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/enh_upsample.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/ilbc/enh_upsample.c', 'desc': "Value stored to 'pu11' is never read", 'code': 'pu11+=ENH_UPS04;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pki/tdcache.c': [{'fname': 'security/nss/lib/pki/tdcache.c', 'desc': "Value stored to 'added' is never read", 'code': 'added += 2;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (782, 782), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/third_party/gflags/src/gflags_completions.cc': [{'fname': 'media/webrtc/trunk/third_party/gflags/src/gflags_completions.cc', 'desc': "Value stored to 'lines_so_far' is never read", 'code': 'lines_so_far += group.SizeInLines();', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (604, 604), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jcdctmgr.c': [{'fname': 'media/libjpeg/jcdctmgr.c', 'desc': "Value stored to 'val' is never read", 'code': 'val <<= 1;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (106, 106), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/pr/src/md/unix/uxrng.c': [{'fname': 'nsprpub/pr/src/md/unix/uxrng.c', 'desc': "Value stored to 'size' is never read", 'code': 'size -= s;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (142, 142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/rtp_rtcp/source/rtp_utility.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/rtp_rtcp/source/rtp_utility.cc', 'desc': "Value stored to 'ptr' is never read", 'code': 'ptr += 4;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (159, 159), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libtheora/lib/decode.c': [{'fname': 'media/libtheora/lib/decode.c', 'desc': "Value stored to 'zzi' is never read", 'code': 'zzi=OC_MINI(zzi,64)((zzi)+((64)-(zzi)&-((64)<(zzi))));', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1578, 1578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/msgfmt.cpp': [{'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': "Value stored to 'prevIndex' is never read", 'code': 'prevIndex += len;', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (1402, 1402), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'applyPattern(pattern, *parseError, status);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (518, 518), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1196, 1196), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/msgfmt.cpp', 'desc': 'Dereference of null pointer', 'code': 'const PluralSelectorContext &pluralNumber =', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1030, 1030), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/digital_agc.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/agc/legacy/digital_agc.c', 'desc': "Value stored to 'zeroGainLvl' is never read", 'code': 'zeroGainLvl += (analogTarget - digCompGaindB + kSoftLimiterLeft);', 'bug_type': 'Dead store', 'severity': 'Dead increment', 'locs': (101, 101), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/hash_rolling_inc.h': [{'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/hash_rolling_inc.h', 'desc': "Value stored to 'pos' during its initialization is never read", 'code': 'size_t pos = self->next_ix;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (163, 163), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/svg/SVGTextFrame.cpp': [{'fname': 'layout/svg/SVGTextFrame.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'uint32_t end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4768, 4768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/commandhandler/nsCommandManager.cpp': [{'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/commandhandler/nsCommandManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = GetControllerForCommand(aCommandName, aTargetWindow,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (162, 162), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/jit/MIR.cpp': [{'fname': 'js/src/jit/MIR.cpp', 'desc': "Value stored to 'ret' during its initialization is never read", 'code': 'double ret = JS::GenericNaN();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (104, 104), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/antitracking/URLDecorationStripper.cpp': [{'fname': 'toolkit/components/antitracking/URLDecorationStripper.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Preferences::GetString(kPrefName, tokenList);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (28, 28), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/reporting/ReportDeliver.cpp': [{'fname': 'dom/reporting/ReportDeliver.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = NS_NewCStringInputStream(getter_AddRefs(streamBody), body);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (170, 170), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/mathml/nsMathMLOperators.cpp': [{'fname': 'layout/mathml/nsMathMLOperators.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (161, 161), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/vm/ArrayBufferObject.cpp': [{'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'js/src/vm/ArrayBufferObject.cpp', 'desc': "Value stored to '[buffer, toFill]' during its initialization is never read", 'code': 'auto [buffer, toFill] = createBufferAndData<FillContents::Uninitialized>(', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1257, 1257), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/manager/ssl/PublicKeyPinningService.cpp': [{'fname': 'security/manager/ssl/PublicKeyPinningService.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = FindPinningInformation(hostname, time, originAttributes,', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (220, 220), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/places/Database.cpp': [{'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aDatabaseFile->GetLeafName(filename);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (887, 887), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/places/Database.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = mMainConn->ExecuteSimpleSQL(NS_LITERAL_CSTRING(static_cast<const nsLiteralCString&>(nsLiteralCString("" "UPDATE moz_places " "SET url = IFNULL(\'place:tag=\' || ( " "SELECT title FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT) " "), url) " "WHERE url_hash BETWEEN hash(\'place\', \'prefix_lo\') AND " "hash(\'place\', \'prefix_hi\') " "AND url LIKE \'%type=7%\' " "AND EXISTS(SELECT 1 FROM moz_bookmarks " "WHERE id = CAST(get_query_param(substr(url, 7), \'folder\') AS INT)) "))', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2033, 2033), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc': [{'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5083, 5083), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5557, 5557), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'high_word' during its initialization is never read", 'code': 'uint32_t high_word = in_word;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump.cc', 'desc': "Value stored to 'error_code' during its initialization is never read", 'code': 'int error_code = ErrnoString(&error_string);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5588, 5588), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/signaling/src/sdp/RsdparsaSdpAttributeList.cpp': [{'fname': 'media/webrtc/signaling/src/sdp/RsdparsaSdpAttributeList.cpp', 'desc': "Value stored to '[codec, defaults]' during its initialization is never read", 'code': 'auto [codec, defaults] = strToCodecType(name);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (702, 702), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'editor/libeditor/ChangeStyleTransaction.cpp': [{'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (80, 80), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'editor/libeditor/ChangeStyleTransaction.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/generic/nsFrameSelection.cpp': [{'fname': 'layout/generic/nsFrameSelection.cpp', 'desc': "Value stored to 'tHint' during its initialization is never read", 'code': 'CaretAssociateHint tHint(mCaret.mHint); // temporary variable so we dont set', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (774, 774), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/ia32_insn.c': [{'fname': 'toolkit/crashreporter/google-breakpad/src/third_party/libdisasm/ia32_insn.c', 'desc': "Value stored to 'op' during its initialization is never read", 'code': "unsigned char *next, op = buf[0]; /* byte value -- 'opcode' */", 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (376, 376), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/nsContentSink.cpp': [{'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'last' during its initialization is never read", 'code': 'char16_t* last = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (380, 380), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/base/nsContentSink.cpp', 'desc': "Value stored to 'end' during its initialization is never read", 'code': 'char16_t* end = start;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (379, 379), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestStrings.cpp': [{'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constCStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1974, 1974), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{string};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1964, 1964), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constStringRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1958, 1958), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestStrings.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{cstring};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1980, 1980), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'caps/ExpandedPrincipal.cpp': [{'fname': 'caps/ExpandedPrincipal.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = aStream->Read32(&version);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (227, 227), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc': [{'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_cpu_info' during its initialization is never read", 'code': 'bool has_cpu_info = GetCPUInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (97, 97), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_process_create_time' during its initialization is never read", 'code': 'bool has_process_create_time =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (94, 94), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/crashreporter/google-breakpad/src/processor/minidump_processor.cc', 'desc': "Value stored to 'has_os_info' during its initialization is never read", 'code': 'bool has_os_info = GetOSInfo(dump, &process_state->system_info_);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (98, 98), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/presentation/PresentationSessionInfo.cpp': [{'fname': 'dom/presentation/PresentationSessionInfo.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = UNWRAP_OBJECT(Element, &obj, frame)mozilla::dom::binding_detail::UnwrapObjectWithCrossOriginAsserts< mozilla::dom::prototypes::id::Element, mozilla::dom::Element_Binding::NativeType>(&obj, frame);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1482, 1482), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/dav1d/src/decode.c': [{'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'f' during its initialization is never read", 'code': 'const Dav1dFrameContext *const f = t->f;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2398, 2398), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "Value stored to 'ref' during its initialization is never read", 'code': 'const struct mv ref = b->mv[0];', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1276, 1276), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value", 'code': 'ref_coded_width[i] == f->cur.p.w &&', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (3421, 3421), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': "The left operand of '==' is a garbage value due to array index out of bounds", 'code': 'while (mvd[j] == -1) j--;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (355, 355), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/dav1d/src/decode.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'dav1d_thread_picture_ref(out_delayed, &f->sr_cur);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (3387, 3387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/protobuf/src/google/protobuf/stubs/strutil.cc': [{'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/strutil.cc', 'desc': "Value stored to 'hex_start' during its initialization is never read", 'code': 'const char *hex_start = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Value stored to 'is_lod' during its initialization is never read", 'code': 'const bool is_lod = (ir->op == ir_txl);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (962, 962), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/ir_print_glsl_visitor.cpp', 'desc': "Access to field 'es_shader' results in a dereference of a null pointer (loaded from variable 'state')", 'code': 'ir_print_glsl_visitor v (body, &gtracker, mode, state->es_shader, state);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/core/SkConvolver.cpp': [{'fname': 'gfx/skia/skia/src/core/SkConvolver.cpp', 'desc': "Value stored to 'filterValues' during its initialization is never read", 'code': 'const SkConvolutionFilter1D::ConvolutionFixed* filterValues =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (184, 184), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'extensions/spellcheck/src/mozEnglishWordUtils.cpp': [{'fname': 'extensions/spellcheck/src/mozEnglishWordUtils.cpp', 'desc': "Value stored to 'startWord' during its initialization is never read", 'code': 'const char16_t* startWord = p;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (46, 46), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestTArray.cpp': [{'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{constArrRef};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (863, 863), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestTArray.cpp', 'desc': "Value stored to 'span' during its initialization is never read", 'code': 'auto span = Span{arr};', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (869, 869), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'nsprpub/pr/src/misc/prnetdb.c': [{'fname': 'nsprpub/pr/src/misc/prnetdb.c', 'desc': "Value stored to 'md_af' during its initialization is never read", 'code': 'PRUint16 md_af = addr->raw.family;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2390, 2390), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/gtest/TestSpan.cpp': [{'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2243, 2243), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/gtest/TestSpan.cpp', 'desc': "Value stored to 'constSpan' during its initialization is never read", 'code': 'auto constSpan = span.AsConst();', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2226, 2226), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/protocol/http/TunnelUtils.cpp': [{'fname': 'netwerk/protocol/http/TunnelUtils.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = Flush(count, countRead);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (1323, 1323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/js/src/conftest.c': [{'fname': 'obj-ff-dbg/js/src/conftest.c', 'desc': "Value stored to 'cs' during its initialization is never read", 'code': 'cs = nl_langinfo(CODESETCODESET);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (5, 5), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/mathml/nsMathMLmoFrame.cpp': [{'fname': 'layout/mathml/nsMathMLmoFrame.cpp', 'desc': "Value stored to 'embellishAncestor' during its initialization is never read", 'code': 'nsIFrame* embellishAncestor = this;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (266, 266), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/base/nsBidiPresUtils.cpp': [{'fname': 'layout/base/nsBidiPresUtils.cpp', 'desc': "Value stored to 'dir' during its initialization is never read", 'code': 'nsBidiDirection dir = aBidiEngine->GetVisualRun(i, &start, &length);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2183, 2183), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/media/MediaManager.cpp': [{'fname': 'dom/media/MediaManager.cpp', 'desc': "Value stored to 'rv' during its initialization is never read", 'code': 'nsresult rv = docURI->GetHost(host);', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (2388, 2388), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'tools/profiler/core/VTuneProfiler.cpp': [{'fname': 'tools/profiler/core/VTuneProfiler.cpp', 'desc': "Value stored to 'testEvent' during its initialization is never read", 'code': '__itt_event testEvent =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (23, 23), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/tables/nsTableFrame.cpp': [{'fname': 'layout/tables/nsTableFrame.cpp', 'desc': "Value stored to 'rg' during its initialization is never read", 'code': 'nsTableRowGroupFrame* rg = mRowGroup;', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4422, 4422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[0] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (799, 799), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_recon_tmpl.c', 'desc': "Value stored to 'eob' during its initialization is never read", 'code': 'const int eob = cbi[t->bx].eob[1 + pl] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (842, 842), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'layout/generic/nsFlexContainerFrame.cpp': [{'fname': 'layout/generic/nsFlexContainerFrame.cpp', 'desc': "Value stored to '[maxBlockEndEdgeOfChildren, areChildrenComplete]' during its initialization is never read", 'code': 'const auto [maxBlockEndEdgeOfChildren, areChildrenComplete] =', 'bug_type': 'Dead store', 'severity': 'Dead initialization', 'locs': (4452, 4452), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/brotli_bit_stream.c': [{'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (903, 903), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': "Array access (via field 'depths_') results in a null pointer dereference", 'code': 'BrotliWriteBits(self->depths_[ix], self->bits_[ix], storage_ix, storage);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (926, 926), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->length_depths[lencode], code->length_bits[lencode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (764, 764), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/brotli_bit_stream.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'BrotliWriteBits(code->type_depths[typecode], code->type_bits[typecode],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (759, 759), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-cff-subset.c': [{'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': "Access to field 'top_dict' results in a dereference of a null pointer (loaded from variable 'font')", 'code': 'status = cff_dict_set_operands (font->top_dict, ROS_OP0x0c1e, buf, p - buf);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1032, 1032), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-cff-subset.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'status = _cairo_hash_table_insert (dict, &op->base);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (515, 515), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/common/utilities.cpp': [{'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = name.length();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (850, 850), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/utilities.cpp', 'desc': "Dereference of null pointer (loaded from variable 'nameLengthWithoutArrayIndexOut')", 'code': '*nameLengthWithoutArrayIndexOut = open;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (844, 844), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/common/event_tracer.cpp': [{'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'monotonicallyIncreasingTime' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'double timestamp = platform->monotonicallyIncreasingTime(platform);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (40, 40), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/common/event_tracer.cpp', 'desc': "Access to field 'getTraceCategoryEnabledFlag' results in a dereference of a null pointer (loaded from variable 'platform')", 'code': 'platform->getTraceCategoryEnabledFlag(platform, name);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (17, 17), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'is_function' results in a dereference of a null pointer (loaded from variable 'macro')", 'code': 'assert(macro->is_function)((void) sizeof ((macro->is_function) ? 1 : 0), __extension__ ({ if (macro->is_function) ; else __assert_fail ("macro->is_function", "src/compiler/glsl/glcpp/glcpp-parse.y", 1857, __extension__ __PRETTY_FUNCTION__); }));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4133, 4133), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-parse.c', 'desc': "Access to field 'token' results in a dereference of a null pointer (loaded from variable 'node_a')", 'code': 'if (node_b == NULL((void*)0) && node_a->token->type == SPACE) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3466, 3466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'array' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'type->fields.array->is_array() ? ub_array->array : NULL__null;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (323, 323), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/link_uniform_blocks.cpp', 'desc': "Access to field 'num_array_elements' results in a dereference of a null pointer (loaded from variable 'ub_array')", 'code': 'ub_array->num_array_elements);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (329, 329), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'parser/expat/lib/xmlparse.c': [{'fname': 'parser/expat/lib/xmlparse.c', 'desc': "Array access (via field 'scaffIndex') results in a null pointer dereference", 'code': 'dtd->scaffIndex[dtd->scaffLevel] = myindex;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (5023, 5023), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_blend_equation_advanced.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_blend_equation_advanced.cpp', 'desc': "Access to field 'swizzle' results in a dereference of a null pointer (loaded from variable 'slot0')", 'code': 'slot0->swizzle = SWIZZLE_XXXX(((0)<<0) | ((0)<<3) | ((0)<<6) | ((0)<<9));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (493, 493), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/cmd/lib/basicutil.c': [{'fname': 'security/nss/cmd/lib/basicutil.c', 'desc': 'Dereference of null pointer', 'code': 'optstatelong = longopts[optstate->longOptIndex].longOptName;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (570, 570), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ubidiwrt.cpp': [{'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (516, 516), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, j, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(j)++]=(uint16_t)(c); } else { (dest)[(j)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(j)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (203, 203), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (233, 233), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=src[j++];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (299, 299), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=*src++;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (73, 73), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (600, 600), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (490, 490), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': "Array access (from variable 'dest') results in a null pointer dereference", 'code': 'U16_APPEND_UNSAFE(dest, k, c)do { if((uint32_t)(c)<=0xffff) { (dest)[(k)++]=(uint16_t)(c); } else { (dest)[(k)++]=(uint16_t)(((c)>>10)+0xd7c0); (dest)[(k)++]=(uint16_t)(((c)&0x3ff)|0xdc00); } } while (0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (622, 622), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (560, 560), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=uc;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (534, 534), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=RLM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (637, 637), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/ubidiwrt.cpp', 'desc': 'Dereference of null pointer', 'code': '*dest++=LRM_CHAR;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (615, 615), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jdapistd.c': [{'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'width')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'input_xoffset = *xoffset;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdapistd.c', 'desc': "Dereference of null pointer (loaded from variable 'xoffset')", 'code': 'if (*width == 0 || *xoffset + *width > cinfo->output_width)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (168, 168), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/libmar/src/mar_read.c': [{'fname': 'modules/libmar/src/mar_read.c', 'desc': "Access to field 'offset' results in a dereference of a null pointer (loaded from variable 'item')", 'code': 'if (mar_insert_offset(mar, item->offset, item->length) == 1) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jmemmgr.c': [{'fname': 'media/libjpeg/jmemmgr.c', 'desc': 'Dereference of null pointer', 'code': 'mem->pub.alloc_small = alloc_small;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (1127, 1127), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from variable 'hdr_ptr')", 'code': 'hdr_ptr->next = mem->large_list[pool_id];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (400, 400), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (886, 886), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jmemmgr.c', 'desc': "Array access (via field 'mem_buffer') results in a null pointer dereference", 'code': 'jzero_far((void *)ptr->mem_buffer[undef_row], bytesperrow);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (970, 970), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'list.h': [{'fname': 'list.h', 'desc': "Access to field 'next' results in a dereference of a null pointer (loaded from field 'prev')", 'code': 'n->prev->next = replacement;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'list.h', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from field 'next')", 'code': 'n->next->prev = n->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (151, 151), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/protobuf/src/google/protobuf/repeated_field.cc': [{'fname': 'toolkit/components/protobuf/src/google/protobuf/repeated_field.cc', 'desc': "Access to field 'allocated_size' results in a dereference of a null pointer (loaded from field 'rep_')", 'code': '++rep_->allocated_size;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (115, 115), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jcmarker.c': [{'fname': 'media/libjpeg/jcmarker.c', 'desc': "Access to field 'sent_table' results in a dereference of a null pointer (loaded from variable 'htbl')", 'code': 'if (!htbl->sent_table) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (205, 205), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/uts46.cpp': [{'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Array access (from variable 'label') results in a null pointer dereference", 'code': 'if(label[0]==0x2d) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (779, 779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/uts46.cpp', 'desc': "Dereference of null pointer (loaded from variable 's')", 'code': 'UChar c=*s;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (932, 932), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/smime/cmsdigest.c': [{'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': "Array access (from variable 'digests') results in a null pointer dereference", 'code': 'digests[i] = NULL((void*)0);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (215, 215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/smime/cmsdigest.c', 'desc': 'Dereference of undefined pointer value', 'code': 'rv = SECITEM_CopyItemSECITEM_CopyItem_Util(poolp, digest, dp[0]);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (252, 252), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/unifiedcache.cpp': [{'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'cachePtr' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'U_ASSERT(value->cachePtr == this)(static_cast <bool> (value->cachePtr == this) ? void (0) : __assert_fail ("value->cachePtr == this", "/home/edwjchen/gecko-dev/intl/icu/source/common/unifiedcache.cpp", 483, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (483, 483), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (313, 313), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/common/unifiedcache.cpp', 'desc': "Access to field 'softRefCount' results in a dereference of a null pointer (loaded from variable 'value')", 'code': 'if (value->softRefCount == 0) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (422, 422), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/angle/checkout/src/compiler/translator/ImmutableStringBuilder.h', 'desc': "Array access (via field 'mData') results in a null pointer dereference", 'code': 'mData[mPos++] = digitChar;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (52, 52), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/get_bits.h': [{'fname': 'media/ffvpx/libavcodec/get_bits.h', 'desc': "Access to field 'l' results in a dereference of a null pointer", 'code': 'UPDATE_CACHE(re, s)re_cache = av_bswap32((((const union unaligned_32 *) ((s)->buffer + (re_index >> 3)))->l)) << (re_index & 7);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jchuff.c': [{'fname': 'media/libjpeg/jchuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (254, 254), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pkcs7/p7encode.c': [{'fname': 'security/nss/lib/pkcs7/p7encode.c', 'desc': "Access to field 'len' results in a dereference of a null pointer (loaded from field 'certList')", 'code': 'for (ci = 0; ci < signerinfo->certList->len; ci++)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (864, 864), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h': [{'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg != '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (234, 234), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Dereference of null pointer (loaded from variable 'arg')", 'code': "if (*arg == '-'", 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/CmdLineAndEnvUtils.h', 'desc': "Potential leak of memory pointed to by 'expr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (466, 466), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': "Dereference of null pointer (loaded from field 'yy_c_buf_p')", 'code': '*yyg->yy_c_buf_p = yyg->yy_hold_char;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (4012, 4012), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glsl_lexer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (3823, 3823), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/pdf/SkPDFType1Font.cpp': [{'fname': 'gfx/skia/skia/src/pdf/SkPDFType1Font.cpp', 'desc': "Dereference of null pointer (loaded from variable 'size')", 'code': '*size = (size_t)buf[2] | ((size_t)buf[3] << 8) | ((size_t)buf[4] << 16) |', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (37, 37), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/2d/ssse3-scaler.c': [{'fname': 'gfx/2d/ssse3-scaler.c', 'desc': 'Dereference of null pointer', 'code': 'if (y0 < 0) *(volatile char*)0 = 9;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (294, 294), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/ssse3-scaler.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (line0->y != y0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_copy_propagation_elements.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_copy_propagation_elements.cpp', 'desc': 'Dereference of null pointer', 'code': 'if (rhs->var->data.mode == ir_var_shader_storage ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (704, 704), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jdicc.c': [{'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_len')", 'code': '*icc_data_len = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (93, 93), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libjpeg/jdicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': '*icc_data_ptr = NULL((void*)0); /* avoid confusion if FALSE return */', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (92, 92), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ResourcesHLSL.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ResourcesHLSL.cpp', 'desc': 'Forming reference to null pointer', 'code': 'if (uniform->name == "angle_DrawID" && uniform->mappedName == "angle_DrawID")', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (158, 158), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/backward_references_hq.c': [{'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': 'Dereference of null pointer', 'code': 'nodes[0].length = 0;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (665, 665), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/enc/backward_references_hq.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'float min_cost = (posdata->cost + ZopfliCostModelGetMinCostCmd(model) +', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (427, 427), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/netinet/sctputil.c': [{'fname': 'netwerk/sctp/src/netinet/sctputil.c', 'desc': "Access to field 'so_state' results in a dereference of a null pointer (loaded from field 'sctp_socket')", 'code': 'if (stcb->sctp_socket->so_state & SS_CANTRCVMORE0x020) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (3768, 3768), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/ValidateGlobalInitializer.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/ValidateGlobalInitializer.cpp', 'desc': "Dereference of null pointer (loaded from variable 'warning')", 'code': '*warning = validate.issueWarning();', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc': [{'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Access to field 'si_code' results in a dereference of a null pointer (loaded from variable 'info')", 'code': 'if (nr != LINUX_SIGSYS31 || info->si_code != SYS_SECCOMP1 || !ctx ||', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (155, 155), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/sandbox/chromium/sandbox/linux/seccomp-bpf/trap.cc', 'desc': "Potential leak of memory pointed to by 'new_trap_array'", 'code': 'trap_array_ = new_trap_array;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (352, 352), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/pk11wrap/pk11util.c': [{'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (395, 395), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'security/nss/lib/pk11wrap/pk11util.c', 'desc': "Access to field 'internal' results in a dereference of a null pointer (loaded from field 'module')", 'code': 'if (!mlp->module->internal) {', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (416, 416), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jdhuff.c': [{'fname': 'media/libjpeg/jdhuff.c', 'desc': "Array access (via field 'bits') results in a null pointer dereference", 'code': 'i = (int)htbl->bits[l];', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/datefmt.cpp': [{'fname': 'intl/icu/source/i18n/datefmt.cpp', 'desc': 'Forming reference to null pointer', 'code': 'UnicodeString result(patternPtr->fPattern);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (444, 444), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/enc/./command.h': [{'fname': 'modules/brotli/enc/./command.h', 'desc': "Access to field 'insert_len_' results in a dereference of a null pointer (loaded from variable 'self')", 'code': 'self->insert_len_ = (uint32_t)insertlen;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_dead_builtin_varyings.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/opt_dead_builtin_varyings.cpp', 'desc': "Access to field 'ir' results in a dereference of a null pointer (loaded from field 'shader')", 'code': 'void *const ctx = shader->ir;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (285, 285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/translator/StructureHLSL.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/translator/StructureHLSL.cpp', 'desc': "Dereference of null pointer (loaded from variable 'parameters')", 'code': 'for (auto parameter : *parameters)', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (373, 373), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'js/src/zydis/Zycore/List.c': [{'fname': 'js/src/zydis/Zycore/List.c', 'desc': "Access to field 'prev' results in a dereference of a null pointer (loaded from variable 'node')", 'code': 'list->tail = node->prev;', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jcicc.c': [{'fname': 'media/libjpeg/jcicc.c', 'desc': "Dereference of null pointer (loaded from variable 'icc_data_ptr')", 'code': 'jpeg_write_m_byte(cinfo, *icc_data_ptr);', 'bug_type': 'Logic error', 'severity': 'Dereference of null pointer', 'locs': (100, 100), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'assert(op[1]->type->is_matrix())(static_cast <bool> (op[1]->type->is_matrix()) ? void (0) : __assert_fail ("op[1]->type->is_matrix()", "glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp", 413, __extension__ __PRETTY_FUNCTION__));', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (413, 413), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[1]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (404, 404), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': 'Dereference of undefined pointer value', 'code': 'if (op[0]->type->is_matrix()) {', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (403, 403), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'do_equal_mat_mat(result, op[1], op[0],', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (425, 425), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i),', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (392, 392), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[0], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (370, 370), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/lower_mat_op_to_vec.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'get_column(op[1], i));', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (393, 393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jccoefct.c': [{'fname': 'media/libjpeg/jccoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (374, 374), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-type1-fallback.c': [{'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': 'Dereference of undefined pointer value', 'code': 'type2_subset->widths = calloc (sizeof (int), font->scaled_font_subset->num_glyphs);', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (824, 824), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-type1-fallback.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'status = cairo_type1_font_generate (font, name);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (720, 720), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jctrans.c': [{'fname': 'media/libjpeg/jctrans.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (328, 328), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': 'Dereference of undefined pointer value', 'code': '*topleft_out = have_top ? dst_top[-1] : dst[-1];', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (195, 195), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_ipred_prepare_tmpl.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'pixel_copy(top, dst_top, px_have)memcpy(top, dst_top, (px_have) << 1);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (169, 169), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jdcoefct.c': [{'fname': 'media/libjpeg/jdcoefct.c', 'desc': 'Dereference of undefined pointer value', 'code': 'buffer_ptr = buffer[ci][yindex + yoffset] + start_col;', 'bug_type': 'Logic error', 'severity': 'Dereference of undefined pointer value', 'locs': (224, 224), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], '': [{'fname': '', 'desc': 'Division by zero', 'code': 'return (a + align - 1) / align * align;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (1353, 1353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/nfrs.cpp': [{'fname': 'intl/icu/source/i18n/nfrs.cpp', 'desc': 'Division by zero', 'code': 'return x / gcd * y;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (117, 117), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jquant1.c': [{'fname': 'media/libjpeg/jquant1.c', 'desc': 'Division by zero', 'code': 'return (int)(((JLONG)j * MAXJSAMPLE255 + maxj / 2) / maxj);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/zlib/src/gzwrite.c': [{'fname': 'modules/zlib/src/gzwrite.c', 'desc': 'Division by zero', 'code': 'return len ? gz_writeMOZ_Z_gz_write(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (300, 300), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/zlib/src/gzread.c': [{'fname': 'modules/zlib/src/gzread.c', 'desc': 'Division by zero', 'code': 'return len ? gz_readMOZ_Z_gz_read(state, buf, len) / size : 0;', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (438, 438), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libjpeg/jquant2.c': [{'fname': 'media/libjpeg/jquant2.c', 'desc': 'Division by zero', 'code': 'cinfo->colormap[0][icolor] = (JSAMPLE)((c0total + (total >> 1)) / total);', 'bug_type': 'Logic error', 'severity': 'Division by zero', 'locs': (511, 511), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/mozilla/ServoStyleConstsForwards.h': [{'fname': 'obj-ff-dbg/dist/include/mozilla/ServoStyleConstsForwards.h', 'desc': 'Attempt to delete released memory', 'code': 'delete mRaw;', 'bug_type': 'Memory error', 'severity': 'Double delete', 'locs': (140, 140), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/mozilla/Maybe.h': [{'fname': 'obj-ff-dbg/dist/include/mozilla/Maybe.h', 'desc': 'Undefined or garbage value returned to caller', 'code': 'constexpr bool isSome() const { return mIsSome; }', 'bug_type': 'Logic error', 'severity': 'Garbage return value', 'locs': (456, 456), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/netinet/sctp_indata.c': [{'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'control'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (940, 940), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': "Potential leak of memory pointed to by 'nc'", 'code': 'return (1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (922, 922), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (chk->rec.data.rcv_flags & SCTP_DATA_FIRST_FRAG0x02) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (5489, 5489), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/netinet/sctp_indata.c', 'desc': 'Use of memory after it is freed', 'code': 'if (SCTP_TSN_GT(control->sinfo_tsn, liste->tsn)(((control->sinfo_tsn < liste->tsn) && ((uint32_t)(liste->tsn - control->sinfo_tsn) > (1U<<31))) || ((control->sinfo_tsn > liste->tsn) && ((uint32_t)(control->sinfo_tsn - liste->tsn) < (1U<<31))))) {', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (2310, 2310), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestUniquePtr.cpp': [{'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 446); do { } while (false); do { *((volatile int*)__null) = 446; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (446, 446), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 461); do { } while (false); do { *((volatile int*)__null) = 461; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (461, 461), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p2)do { bool cond = !!(n1.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 464); do { } while (false); do { *((volatile int*)__null) = 464; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (464, 464), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n2.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p2)do { bool cond = !!(n2.get() == p2); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p2" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 128); do { } while (false); do { *((volatile int*)__null) = 128; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (128, 128), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n1.get() == p3)do { bool cond = !!(n1.get() == p3); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n1.get() == p3" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 129); do { } while (false); do { *((volatile int*)__null) = 129; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (129, 129), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUniquePtr.cpp', 'desc': "Potential leak of memory pointed to by 'n1.mTuple.mFirstA'", 'code': 'CHECK(n2.get() == p1)do { bool cond = !!(n2.get() == p1); do { static_assert( mozilla::detail::AssertionConditionType<decltype(cond)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(cond))), 0))) { MOZ_ReportAssertionFailure("cond" " (" "Failed assertion: " "n2.get() == p1" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestUniquePtr.cpp", 111); do { } while (false); do { *((volatile int*)__null) = 111; ::abort(); } while (false); } } while (false); if (!cond) { return false; } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (111, 111), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/mozapps/update/updater/updater.cpp': [{'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/mozapps/update/updater/updater.cpp', 'desc': "Potential leak of memory pointed to by 'action'", 'code': 'free(buf);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4393, 4393), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestNsRefPtr.cpp': [{'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "1", Foo::total_queries_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 335, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (335, 335), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foo2P.mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP.mRawPtr'", 'code': 'RefPtr<Foo> fooP;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (339, 339), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo2p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (263, 263), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (249, 249), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (201, 201), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> fooP(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (232, 232), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Bar> barP(do_QueryObject(new Bar));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (349, 349), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_destructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_destructions_)) == 1)>::Compare("Foo::total_destructions_", "2", Foo::total_destructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 229, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (229, 229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'fooP2.mRawPtr'", 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (242, 242), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foo1p(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (262, 262), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_constructions_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_constructions_)) == 1)>::Compare("Foo::total_constructions_", "2", Foo::total_constructions_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 207, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'ASSERT_EQ(Foo::total_queries_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_queries_)) == 1)>::Compare("Foo::total_queries_", "2", Foo::total_queries_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 341, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (341, 341), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by field 'mRawPtr'", 'code': 'RefPtr<Foo> foop(do_QueryObject(new Foo));', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (119, 119), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'foop.mRawPtr'", 'code': 'ASSERT_EQ(Bar::total_destructions_, 1)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Bar::total_destructions_)) == 1)>::Compare("Bar::total_destructions_", "1", Bar::total_destructions_, 1))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 253, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (253, 253), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'xpcom/tests/gtest/TestNsRefPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo1p'", 'code': 'ASSERT_EQ(Foo::total_addrefs_, 2)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(Foo::total_addrefs_)) == 1)>::Compare("Foo::total_addrefs_", "2", Foo::total_addrefs_, 2))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestNsRefPtr.cpp", 305, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (305, 305), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/tests/gtest/TestCOMPtr.cpp': [{'fname': 'xpcom/tests/gtest/TestCOMPtr.cpp', 'desc': "Potential leak of memory pointed to by 'raw_foo2p'", 'code': 'ASSERT_EQ(raw_foo1p, foo1p)switch (0) case 0: default: if (const ::testing::AssertionResult gtest_ar = (::testing::internal:: EqHelper<(sizeof(::testing::internal::IsNullLiteralHelper(raw_foo1p)) == 1)>::Compare("raw_foo1p", "foo1p", raw_foo1p, foo1p))) ; else return ::testing::internal::AssertHelper(::testing::TestPartResult::kFatalFailure, "/home/edwjchen/gecko-dev/xpcom/tests/gtest/TestCOMPtr.cpp", 312, gtest_ar.failure_message()) = ::testing::Message();', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (312, 312), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/mozilla/RefPtr.h': [{'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': "Potential leak of memory pointed to by 'oldPtr'", 'code': '}', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (81, 81), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return already_AddRefed<T>(temp);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (259, 259), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'ConstRemovingRefPtrTraits<T>::Release(oldPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (69, 69), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/RefPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'return const_cast<T*>(mRawPtr);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (286, 286), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/user_socket.c': [{'fname': 'netwerk/sctp/src/user_socket.c', 'desc': "Potential leak of memory pointed to by 'sa'", 'code': 'return (-1);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (2142, 2142), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '1st function call argument is an uninitialized value', 'code': 'register_recv_cb(so, receive_cb);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (1442, 1442), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'netwerk/sctp/src/user_socket.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'errno(*__errno_location ()) = user_connect(so, sa);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (2144, 2144), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h': [{'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (387, 387), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (271, 271), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/dist/include/mozilla/UniquePtr.h', 'desc': 'Potential memory leak', 'code': 'return *this;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (258, 258), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'memory/replace/dmd/test/SmokeDMD.cpp': [{'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': "Potential leak of memory pointed to by 'x'", 'code': 'MOZ_RELEASE_ASSERT(IsRunning())do { static_assert( mozilla::detail::AssertionConditionType<decltype(IsRunning())>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(IsRunning()))), 0))) { MOZ_ReportAssertionFailure("IsRunning()", "/home/edwjchen/gecko-dev/memory/replace/dmd/test/SmokeDMD.cpp", 351); AnnotateMozCrashReason("MOZ_RELEASE_ASSERT" "(" "IsRunning()" ")"); do { *((volatile int*)__null) = 351; ::abort(); } while (false); } } while (false);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (351, 351), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[2]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (78, 78), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'memory/replace/dmd/test/SmokeDMD.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'Report(a[3]); // reported', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (89, 89), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/xre/nsAppRunner.cpp': [{'fname': 'toolkit/xre/nsAppRunner.cpp', 'desc': "Potential leak of memory pointed to by 'canonArgs'", 'code': 'if (NS_FAILED(rv)((bool)(__builtin_expect(!!(NS_FAILED_impl(rv)), 0)))) return NS_ERROR_FAILURE;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (4883, 4883), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c': [{'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Potential memory leak', 'code': '', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (3215, 3215), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'third_party/rust/glslopt/glsl-optimizer/src/compiler/glsl/glcpp/glcpp-lex.c', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (2244, 2244), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/xre/nsEmbedFunctions.cpp': [{'fname': 'toolkit/xre/nsEmbedFunctions.cpp', 'desc': 'Potential memory leak', 'code': 'rv = gDirServiceProvider->Initialize(aAppDirectory, aLibXULDirectory,', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (193, 193), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/ots/tests/cff_charstring_test.cc': [{'fname': 'gfx/ots/tests/cff_charstring_test.cc', 'desc': "Potential leak of memory pointed to by 'local_subrs_index'", 'code': 'return false;', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (134, 134), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/libmar/src/mar_create.c': [{'fname': 'modules/libmar/src/mar_create.c', 'desc': "Potential leak of memory pointed to by 'stack.head'", 'code': 'fclose(fp);', 'bug_type': 'Memory error', 'severity': 'Memory leak', 'locs': (386, 386), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/client/crashreporter_gtk_common.cpp': [{'fname': 'toolkit/crashreporter/client/crashreporter_gtk_common.cpp', 'desc': "Call to function 'vfork' is insecure as it can lead to denial of service situations in the parent process. Replace calls to vfork with calls to the safer 'posix_spawn' function", 'code': 'pid_t pID = vfork();', 'bug_type': 'Security', 'severity': "Potential insecure implementation-specific behavior in call 'vfork'", 'locs': (345, 345), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS8192;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixel((mid_ptr[x] + intermediate_rnd) >>iclip((mid_ptr[x] + intermediate_rnd) >> intermediate_bits, 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/16bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)), 0, bitdepth_max)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libopus/celt/celt_decoder.c': [{'fname': 'media/libopus/celt/celt_decoder.c', 'desc': "The left operand of '*' is a garbage value", 'code': 'y[j*C] = SCALEOUT(SIG2WORD16(scratch[j*downsample]))(((scratch[j*downsample]))*(1/32768.f));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (353, 353), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c': [{'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my >> 6, 128,iclip_u8((((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (479, 479), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (139, 139), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': ': mid_ptr[x]) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (317, 317), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'int t = DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (246, 246), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'dst[x] = FILTER_BILIN_CLIP(mid_ptr, x, my, 128,iclip_u8((((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4 + intermediate_bits)) >> 1)) >> (4 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (418, 418), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'tmp[x] = (fv ? DAV1D_FILTER_8TAP_RND(mid_ptr, x, fv, 128, 6)(((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6)) >> 1)) >> (6))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (316, 316), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my >> 6, 128, 4)(((16 * mid_ptr[x] + ((my >> 6) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) - PREP_BIAS0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '+' is a garbage value", 'code': 'iclip_pixeliclip_u8((mid_ptr[x] + intermediate_rnd) >>', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (209, 209), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'tmp[x] = FILTER_BILIN_RND(mid_ptr, x, my, 128, 4)(((16 * mid_ptr[x] + ((my) * (mid_ptr[x + 128] - mid_ptr[x]))) + ((1 << (4)) >> 1)) >> (4)) -', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (514, 514), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'obj-ff-dbg/media/libdav1d/8bd_mc_tmpl.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'dst[x] = fv ? DAV1D_FILTER_8TAP_CLIP(mid_ptr, x, fv, 128,iclip_u8((((fv[0] * mid_ptr[x + -3 * 128] + fv[1] * mid_ptr[x + -2 * 128] + fv[2] * mid_ptr[x + -1 * 128] + fv[3] * mid_ptr[x + +0 * 128] + fv[4] * mid_ptr[x + +1 * 128] + fv[5] * mid_ptr[x + +2 * 128] + fv[6] * mid_ptr[x + +3 * 128] + fv[7] * mid_ptr[x + +4 * 128]) + ((1 << (6 + intermediate_bits)) >> 1)) >> (6 + intermediate_bits)))', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (207, 207), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavcodec/vp8dsp.c': [{'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel4_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (574, 574), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel8_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (579, 579), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear4_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear4_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 4 + 1) * 4]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 4; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 4; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = (c * tmp[x] + d * tmp[x + 4] + 4) >> 3; dst += dstride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (642, 642), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel4_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (583, 583), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear8_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear8_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 8 + 1) * 8]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 8; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 8; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = (c * tmp[x] + d * tmp[x + 8] + 4) >> 3; dst += dstride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (641, 641), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel16_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (572, 572), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel8_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (576, 576), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel16_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (575, 575), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel8_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 6 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[0] * tmp[x - 2 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + filter[5] * tmp[x + 3 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (582, 582), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel16_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 4 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (578, 578), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 4)static void put_vp8_epel4_h6v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 4 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (580, 580), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 4)static void put_vp8_epel8_h4v4_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 8 + 4 - 1) * 8]; uint8_t *tmp = tmp_array; src -= (2 - (4 == 4)) * srcstride; for (y = 0; y < h + 4 - 1; y++) { for (x = 0; x < 8; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 8; src += srcstride; } tmp = tmp_array + (2 - (4 == 4)) * 8; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 8; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 8] - filter[1] * tmp[x - 1 * 8] + filter[3] * tmp[x + 1 * 8] - filter[4] * tmp[x + 2 * 8] + 64) >> 7]; dst += dststride; tmp += 8; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (573, 573), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'void put_vp8_bilinear16_h_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_v_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int c = 8 - my, d = my; int x, y; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * src[x] + d * src[x + sstride] + 4) >> 3; dst += dstride; src += sstride; } } static void put_vp8_bilinear16_hv_c(uint8_t *dst, ptrdiff_t dstride, uint8_t *src, ptrdiff_t sstride, int h, int mx, int my) { int a = 8 - mx, b = mx; int c = 8 - my, d = my; int x, y; uint8_t tmp_array[(2 * 16 + 1) * 16]; uint8_t *tmp = tmp_array; for (y = 0; y < h + 1; y++) { for (x = 0; x < 16; x++) tmp[x] = (a * src[x] + b * src[x + 1] + 4) >> 3; tmp += 16; src += sstride; } tmp = tmp_array; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = (c * tmp[x] + d * tmp[x + 16] + 4) >> 3; dst += dstride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (640, 640), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '4, 6)static void put_vp8_epel4_h4v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 4 + 6 - 1) * 4]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 4; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + 64) >> 7]; tmp += 4; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 4; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 4; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 4] - filter[1] * tmp[x - 1 * 4] + filter[0] * tmp[x - 2 * 4] + filter[3] * tmp[x + 1 * 4] - filter[4] * tmp[x + 2 * 4] + filter[5] * tmp[x + 3 * 4] + 64) >> 7]; dst += dststride; tmp += 4; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (577, 577), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/ffvpx/libavcodec/vp8dsp.c', 'desc': "The right operand of '*' is a garbage value", 'code': '6, 6)static void put_vp8_epel16_h6v6_c(uint8_t *dst, ptrdiff_t dststride, uint8_t *src, ptrdiff_t srcstride, int h, int mx, int my) { const uint8_t *filter = subpel_filters[mx - 1]; const uint8_t *cm = ff_crop_tab + 1024; int x, y; uint8_t tmp_array[(2 * 16 + 6 - 1) * 16]; uint8_t *tmp = tmp_array; src -= (2 - (6 == 4)) * srcstride; for (y = 0; y < h + 6 - 1; y++) { for (x = 0; x < 16; x++) tmp[x] = cm[(filter[2] * src[x + 0 * 1] - filter[1] * src[x - 1 * 1] + filter[0] * src[x - 2 * 1] + filter[3] * src[x + 1 * 1] - filter[4] * src[x + 2 * 1] + filter[5] * src[x + 3 * 1] + 64) >> 7]; tmp += 16; src += srcstride; } tmp = tmp_array + (2 - (6 == 4)) * 16; filter = subpel_filters[my - 1]; for (y = 0; y < h; y++) { for (x = 0; x < 16; x++) dst[x] = cm[(filter[2] * tmp[x + 0 * 16] - filter[1] * tmp[x - 1 * 16] + filter[0] * tmp[x - 2 * 16] + filter[3] * tmp[x + 1 * 16] - filter[4] * tmp[x + 2 * 16] + filter[5] * tmp[x + 3 * 16] + 64) >> 7]; dst += dststride; tmp += 16; } }', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (581, 581), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (365, 365), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rlow << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (372, 372), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/webrtc/trunk/webrtc/modules/audio_coding/codecs/g722/g722_decode.c', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'amp[outlen++] = (int16_t) (rhigh << 1);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (366, 366), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/third_party/skcms/skcms.cc': [{'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The right operand of '+' is a garbage value", 'code': 'if (isfinitef_(tf.a + tf.b + tf.c + tf.d + tf.e + tf.f + tf.g)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (149, 149), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/skia/skia/third_party/skcms/skcms.cc', 'desc': "The left operand of '*' is a garbage value", 'code': 'tf.e = tf.c*tf.d + tf.f', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1860, 1860), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/dtitvfmt.cpp': [{'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (330, 330), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'intl/icu/source/i18n/dtitvfmt.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (firstIndex != -1) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (384, 384), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/2d/InlineTranslator.cpp': [{'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '>' is a garbage value", 'code': 'if (minorRevision > kMinorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (64, 64), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (majorRevision != kMajorRevision) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (57, 57), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (magicInt != mozilla::gfx::kMagicInt) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (50, 50), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/2d/InlineTranslator.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'bool success = RecordedEvent::DoWithEvent(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (72, 72), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libopus/celt/celt_encoder.c': [{'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '>' is a garbage value", 'code': 'f[1] = MAX16(f[1], tmp)((f[1]) > (tmp) ? (f[1]) : (tmp));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1067, 1067), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libopus/celt/celt_encoder.c', 'desc': "The left operand of '-' is a garbage value", 'code': 'cost0 = importance[0]*abs(metric[0]-2*tf_select_table[LM][4*isTransient+2*sel+0]);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (676, 676), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/unicode/unistr.h': [{'fname': 'intl/icu/source/common/unicode/unistr.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': '(int16_t)((fUnion.fFields.fLengthAndFlags & kAllStorageFlags) | (len << kLengthShift));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (4542, 4542), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/collationweights.cpp': [{'fname': 'intl/icu/source/i18n/collationweights.cpp', 'desc': "The result of the left shift is undefined due to shifting by '32', which is greater or equal to the width of type 'unsigned int'", 'code': 'return (uint32_t)(weight&(0xffffffff<<(8*(4-length))));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (85, 85), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/libyuv/libyuv/source/scale.cc': [{'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1278, 1278), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1054, 1054), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (1143, 1143), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'media/libyuv/libyuv/source/scale.cc', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'const int max_y = (src_height - 1) << 16;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (947, 947), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/indexedDB/ActorsParent.cpp': [{'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20530); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20530; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20528, 20528), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_ASSERT(permission == PermissionRequestBase::kPermissionAllowed ||do { static_assert( mozilla::detail::AssertionConditionType<decltype(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt)>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt))), 0))) { MOZ_ReportAssertionFailure("permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt", "/home/edwjchen/gecko-dev/dom/indexedDB/ActorsParent.cpp", 20434); AnnotateMozCrashReason("MOZ_ASSERT" "(" "permission == PermissionRequestBase::kPermissionAllowed || permission == PermissionRequestBase::kPermissionDenied || permission == PermissionRequestBase::kPermissionPrompt" ")"); do { *((volatile int*)__null) = 20434; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (20432, 20432), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'DebugOnly<bool> result = journalQuotaObject->MaybeUpdateSize(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11322, 11322), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'result = quotaObject->MaybeUpdateSize(fileSize, /* aTruncate */ true);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (11326, 11326), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(0x80 | (aNumber & 0x7f));', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (632, 632), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'dom/indexedDB/ActorsParent.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*buffer++ = uint8_t(aNumber);', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (635, 635), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestUtf8.cpp': [{'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (185, 185), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (190, 190), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (199, 199), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestUtf8.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'Could not parse from HTML', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (194, 194), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestDoublyLinkedList.cpp': [{'fname': 'mfbt/tests/TestDoublyLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x.mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x.mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x.mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x.mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestDoublyLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc': [{'fname': 'toolkit/crashreporter/google-breakpad/src/common/linux/memory_mapped_file.cc', 'desc': "The left operand of '<' is a garbage value", 'code': 'if (sys_fstat(fd, &st) == -1 || st.st_size < 0) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (71, 71), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/fdlibm/src/e_hypot.cpp': [{'fname': 'modules/fdlibm/src/e_hypot.cpp', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'SET_HIGH_WORD(t1,high+(k<<20))do { ieee_double_shape_type sh_u; sh_u.value = (t1); sh_u.parts.msw = (high+(k<<20)); (t1) = sh_u.value; } while (0);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (124, 124), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestLinkedList.cpp': [{'fname': 'mfbt/tests/TestLinkedList.cpp', 'desc': "The right operand of '==' is a garbage value due to array index out of bounds", 'code': 'MOZ_RELEASE_ASSERT(x->mValue == values[count])do { static_assert( mozilla::detail::AssertionConditionType<decltype(x->mValue == values[count])>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(x->mValue == values[count]))), 0))) { MOZ_ReportAssertionFailure("x->mValue == values[count]", "/home/edwjchen/gecko-dev/mfbt/tests/TestLinkedList.cpp", 24); do { } while (false); do { *((volatile int*)__null) = 24; ::abort(); } while (false); } } while (false);', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (24, 24), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'mfbt/tests/TestIntegerRange.cpp': [{'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(array[i] == static_cast<IntType2>(aBegin + i),do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aBegin + i))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aBegin + i)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aBegin + i)" " (" "Should iterate integers in [aBegin, aEnd) in order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 84); do { } while (false); do { *((volatile int*)__null) = 84; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (83, 83), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'mfbt/tests/TestIntegerRange.cpp', 'desc': "The left operand of '==' is a garbage value", 'code': 'MOZ_RELEASE_ASSERT(do { static_assert( mozilla::detail::AssertionConditionType<decltype(array[i] == static_cast<IntType2>(aEnd - i - 1))>::isValid, "invalid assertion condition"); if ((__builtin_expect(!!(!(!!(array[i] == static_cast<IntType2>(aEnd - i - 1)))), 0))) { MOZ_ReportAssertionFailure("array[i] == static_cast<IntType2>(aEnd - i - 1)" " (" "Should iterate integers in [aBegin, aEnd) in reverse order" ")", "/home/edwjchen/gecko-dev/mfbt/tests/TestIntegerRange.cpp", 105); do { } while (false); do { *((volatile int*)__null) = 105; ::abort(); } while (false); } } while (false)', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (103, 103), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/olsontz.cpp': [{'fname': 'intl/icu/source/i18n/olsontz.cpp', 'desc': "The left operand of '!=' is a garbage value", 'code': 'return dst != 0;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (603, 603), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/libpixman/src/pixman-trap.c': [{'fname': 'gfx/cairo/libpixman/src/pixman-trap.c', 'desc': "The right operand of '*' is a garbage value", 'code': 'e->x += n * e->stepx;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (99, 99), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/collation.h': [{'fname': 'intl/icu/source/i18n/collation.h', 'desc': 'The result of the left shift is undefined because the left operand is negative', 'code': 'return (index << 13) | SPECIAL_CE32_LOW_BYTE | tag;', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (333, 333), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/ffvpx/libavutil/pixdesc.c': [{'fname': 'media/ffvpx/libavutil/pixdesc.c', 'desc': 'The result of the right shift is undefined because the right operand is negative', 'code': 'score -= (nb_components * 65536) >> FFMIN(dst_desc->comp[0].depth - 1, src_desc->comp[0].depth - 1)((dst_desc->comp[0].depth - 1) > (src_desc->comp[0].depth - 1) ? (src_desc->comp[0].depth - 1) : (dst_desc->comp[0].depth - 1));', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (2779, 2779), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'netwerk/sctp/src/netinet/sctp_pcb.c': [{'fname': 'netwerk/sctp/src/netinet/sctp_pcb.c', 'desc': "The left operand of '!=' is a garbage value", 'code': 'if (net_tmp != NULL((void*)0) && stcb_tmp == stcb) {', 'bug_type': 'Logic error', 'severity': 'Result of operation is garbage or undefined', 'locs': (7229, 7229), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/i18n/formattedvalue.cpp': [{'fname': 'intl/icu/source/i18n/formattedvalue.cpp', 'desc': "Address of stack memory associated with local variable 'readOnlyAlias' returned to caller", 'code': 'return readOnlyAlias.getBuffer();', 'bug_type': 'Logic error', 'severity': 'Return of address to stack-allocated memory', 'locs': (212, 212), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/cmemory.h': [{'fname': 'intl/icu/source/common/cmemory.h', 'desc': 'Returning null reference', 'code': 'T &operator[](ptrdiff_t i) const { return LocalPointerBase<T>::ptr[i]; }', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (225, 225), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/usetiter.cpp': [{'fname': 'intl/icu/source/common/usetiter.cpp', 'desc': 'Returning null reference', 'code': 'return *string;', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (147, 147), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/skia/skia/src/pdf/SkPDFFont.cpp': [{'fname': 'gfx/skia/skia/src/pdf/SkPDFFont.cpp', 'desc': 'Returning null reference', 'code': 'return *canon->fToUnicodeMap.set(id, std::move(buffer));', 'bug_type': 'Logic error', 'severity': 'Returning null reference', 'locs': (167, 167), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc': [{'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '3rd function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '4th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'toolkit/components/protobuf/src/google/protobuf/stubs/stringprintf.cc', 'desc': '5th function call argument is an uninitialized value', 'code': 'return StringPrintf(format,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (166, 166), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'tools/power/rapl.cpp': [{'fname': 'tools/power/rapl.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'mPkg = new Domain("pkg", type);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (561, 561), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'testing/mochitest/ssltunnel/ssltunnel.cpp': [{'fname': 'testing/mochitest/ssltunnel/ssltunnel.cpp', 'desc': '4th function call argument is an uninitialized value', 'code': '} else if (!ConfigureSSLServerSocket(', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (905, 905), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-xlib-display.c': [{'fname': 'gfx/cairo/cairo/src/cairo-xlib-display.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'xrender_format = XRenderFindStandardFormat (display->display,', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (620, 620), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'toolkit/mozapps/update/updater/bspatch/bspatch.cpp': [{'fname': 'toolkit/mozapps/update/updater/bspatch/bspatch.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'ctrlsrc->x = ntohl(ctrlsrc->x);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-combsort-private.h': [{'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'gfx/cairo/cairo/src/cairo-combsort-private.h', 'desc': '1st function call argument is an uninitialized value', 'code': 'if (gap < 1)', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (44, 44), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'dom/base/nsGlobalWindowInner.cpp': [{'fname': 'dom/base/nsGlobalWindowInner.cpp', 'desc': '1st function call argument is an uninitialized value', 'code': 'msg.AppendInt(lineno);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (4882, 4882), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'modules/brotli/dec/huffman.c': [{'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode(0, (uint16_t)sorted[0]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (145, 145), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}, {'fname': 'modules/brotli/dec/huffman.c', 'desc': '2nd function call argument is an uninitialized value', 'code': 'code = ConstructHuffmanCode((uint8_t)bits, (uint16_t)sorted[symbol++]);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (160, 160), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'intl/icu/source/common/ustrenum.cpp': [{'fname': 'intl/icu/source/common/ustrenum.cpp', 'desc': '2nd function call argument is an uninitialized value', 'code': 'return setChars(s, length, status);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (79, 79), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc': [{'fname': 'media/webrtc/trunk/webrtc/modules/audio_processing/aecm/echo_control_mobile.cc', 'desc': '1st function call argument is an uninitialized value', 'code': 'WebRtc_FreeBuffer(aecm->farendBuf);', 'bug_type': 'Logic error', 'severity': 'Uninitialized argument value', 'locs': (137, 137), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/angle/checkout/src/compiler/preprocessor/Tokenizer.cpp': [{'fname': 'gfx/angle/checkout/src/compiler/preprocessor/Tokenizer.cpp', 'desc': 'Use of zero-allocated memory', 'code': 'YY_CURRENT_BUFFER_LVALUEyyg->yy_buffer_stack[yyg->yy_buffer_stack_top]->yy_ch_buf[yyg->yy_n_chars] = YY_END_OF_BUFFER_CHAR0;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (1631, 1631), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'browser/components/shell/nsGNOMEShellSearchProvider.cpp': [{'fname': 'browser/components/shell/nsGNOMEShellSearchProvider.cpp', 'desc': 'Use of zero-allocated memory', 'code': '*aDst = *aSrc & 0xff00ff00;', 'bug_type': 'Memory error', 'severity': 'Use of zero allocated', 'locs': (74, 74), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'security/nss/lib/freebl/mpi/mpi.c': [{'fname': 'security/nss/lib/freebl/mpi/mpi.c', 'desc': 'Use of memory after it is freed', 'code': 's_mp_setz(DIGITS(mp)((mp)->dp), ALLOC(mp)((mp)->alloc));', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (290, 290), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'xpcom/base/nsCOMPtr.h': [{'fname': 'xpcom/base/nsCOMPtr.h', 'desc': 'Use of memory after it is freed', 'code': 'T* get() const { return reinterpret_cast<T*>(mRawPtr); }', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (839, 839), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'obj-ff-dbg/dist/include/gmock/gmock-spec-builders.h': [{'fname': 'obj-ff-dbg/dist/include/gmock/gmock-spec-builders.h', 'desc': 'Use of memory after it is freed', 'code': 'return function_mocker_->AddNewExpectation(', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (1285, 1285), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}], 'gfx/cairo/cairo/src/cairo-list-private.h': [{'fname': 'gfx/cairo/cairo/src/cairo-list-private.h', 'desc': 'Use of memory after it is freed', 'code': '__cairo_list_del (entry->prev, entry->next);', 'bug_type': 'Memory error', 'severity': 'Use-after-free', 'locs': (156, 156), 'commit': 'fb3782980f3c475162629001b1efee38c782d354'}]}, 'tool': 'clang_firefox', 'command': None, 'clean': None, 'dir': 'gecko-dev', 'fname': None, 'save_dir': 'clang_save', 'br_file': 'bug_report_fb378.bin', 'br_txtfile': 'bug_report_fb378.txt'}